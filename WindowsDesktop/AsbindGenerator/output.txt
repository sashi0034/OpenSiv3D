s3d::PlaceHolder_t
s3d::StringView
    operator=(StringView const&)
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    crbegin()
    crend()
    operator[](typedef unsigned long long size_type)
    at(typedef unsigned long long size_type)
    front()
    back()
    data()
    size()
    size_bytes()
    length()
    max_size()
    empty()
    isEmpty()
    remove_prefix(typedef unsigned long long size_type)
    remove_suffix(typedef unsigned long long size_type)
    swap(StringView&)
    clear()
    copy(value_type *, typedef unsigned long long size_type, typedef unsigned long long size_type)
    substr(typedef unsigned long long size_type, typedef unsigned long long size_type)
    compare(class StringView { ... })
    compare(typedef unsigned long long size_type, typedef unsigned long long size_type, class StringView { ... })
    compare(typedef unsigned long long size_type, typedef unsigned long long size_type, class StringView { ... }, typedef unsigned long long size_type, typedef unsigned long long size_type)
    compare(value_type const *)
    compare(typedef unsigned long long size_type, typedef unsigned long long size_type, value_type const *)
    compare(typedef unsigned long long size_type, typedef unsigned long long size_type, value_type const *, typedef unsigned long long size_type)
    contains(typedef char32_t value_type)
    contains(class StringView { ... })
    starts_with(typedef char32_t value_type)
    starts_with(class StringView { ... })
    ends_with(typedef char32_t value_type)
    ends_with(class StringView { ... })
    indexOf(class StringView { ... }, typedef unsigned long long size_type)
    indexOf(typedef char32_t value_type, typedef unsigned long long size_type)
    indexOf(value_type const *, typedef unsigned long long size_type, typedef unsigned long long size_type)
    indexOf(value_type const *, typedef unsigned long long size_type)
    indexOfNot(typedef char32_t value_type, typedef unsigned long long size_t)
    lastIndexOf(class StringView { ... }, typedef unsigned long long size_type)
    lastIndexOf(typedef char32_t value_type, typedef unsigned long long size_type)
    lastIndexOf(value_type const *, typedef unsigned long long size_type, typedef unsigned long long size_type)
    lastIndexOf(value_type const *, typedef unsigned long long size_type)
    lastIndexNotOf(typedef char32_t value_type, typedef unsigned long long size_t)
    indexOfAny(class StringView { ... }, typedef unsigned long long size_t)
    indexOfAny(value_type const *, typedef unsigned long long size_t)
    lastIndexOfAny(class StringView { ... }, typedef unsigned long long size_t)
    lastIndexOfAny(value_type const *, typedef unsigned long long size_t)
    indexNotOfAny(class StringView { ... }, typedef unsigned long long size_t)
    indexNotOfAny(value_type const *, typedef unsigned long long size_t)
    lastIndexNotOfAny(class StringView { ... }, typedef unsigned long long size_t)
    lastIndexNotOfAny(value_type const *, typedef unsigned long long size_t)
    includes(typedef char32_t value_type)
    includes(class StringView { ... })
    narrow()
    toWstr()
    toUTF8()
    hash()
    operator<=>(StringView const&)
s3d::String
    String(Iterator, Iterator)
    String(const StringViewIsh&)
    operator=(String const&)
    operator=(string_type const&)
    operator=(String &&)
    operator=(string_type &&)
    operator=(value_type const *)
    operator=(class initializer_list<_Elem = char32_t> { ... })
    operator=(const StringViewIsh&)
    assign(String const&)
    assign(string_type const&)
    assign(value_type const *)
    assign(typedef unsigned long long size_t, typedef char32_t value_type)
    assign(String &&)
    assign(string_type &&)
    assign(class initializer_list<_Elem = char32_t> { ... })
    assign(const StringViewIsh&)
    assign(Iterator, Iterator)
    get_allocator()
    operator<<(typedef char32_t value_type)
    operator+=(String const&)
    operator+=(string_type const&)
    operator+=(typedef char32_t value_type)
    operator+=(value_type const *)
    operator+=(class initializer_list<_Elem = char32_t> { ... })
    operator+=(const StringViewIsh&)
    append(String const&)
    append(string_type const&)
    append(typedef char32_t value_type)
    append(value_type const *)
    append(value_type const *, typedef unsigned long long size_t)
    append(class initializer_list<_Elem = char32_t> { ... })
    append(typedef unsigned long long size_t, typedef char32_t value_type)
    append(const StringViewIsh&)
    append(Iterator, Iterator)
    insert(typedef unsigned long long size_t, String const&)
    insert(typedef unsigned long long size_t, class initializer_list<_Elem = char32_t> { ... })
    insert(typedef unsigned long long size_t, value_type const *)
    insert(typedef unsigned long long size_t, const StringViewIsh&)
    insert(typedef unsigned long long size_t, typedef unsigned long long size_t, typedef char32_t value_type)
    insert(typedef _String_const_iterator const_iterator, typedef char32_t value_type)
    insert(typedef _String_const_iterator const_iterator, typedef unsigned long long size_t, typedef char32_t value_type)
    insert(typedef _String_const_iterator const_iterator, Iterator, Iterator)
    insert(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator, Iterator, Iterator)
    erase(typedef unsigned long long size_t, typedef unsigned long long size_t)
    erase(typedef _String_const_iterator const_iterator)
    erase(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator)
    clear()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    shrink_to_fit()
    release()
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    push_front(typedef char32_t value_type)
    push_back(typedef char32_t value_type)
    pop_front()
    pop_front_N(typedef unsigned long long size_t)
    pop_back()
    pop_back_N(typedef unsigned long long size_t)
    front()
    front()
    back()
    back()
    c_str()
    data()
    data()
    str()
    str()
    length()
    size()
    size_bytes()
    empty()
    isEmpty()
    max_size()
    capacity()
    resize(typedef unsigned long long size_t)
    resize(typedef unsigned long long size_t, typedef char32_t value_type)
    reserve(typedef unsigned long long size_t)
    swap(String&)
    contains(typedef char32_t value_type)
    contains(class StringView { ... })
    contains_if(Fty)
    starts_with(typedef char32_t value_type)
    starts_with(class StringView { ... })
    ends_with(typedef char32_t value_type)
    ends_with(class StringView { ... })
    substr(typedef unsigned long long size_t, typedef unsigned long long size_t)
    substrView(typedef unsigned long long size_t, typedef unsigned long long size_t)
    substrView(typedef unsigned long long size_t, typedef unsigned long long size_t)
    narrow()
    toWstr()
    toUTF8()
    toUTF16()
    toUTF32()
    hash()
    indexOf(class StringView { ... }, typedef unsigned long long size_t)
    indexOf(typedef char32_t value_type, typedef unsigned long long size_t)
    indexOfNot(typedef char32_t value_type, typedef unsigned long long size_t)
    lastIndexOf(class StringView { ... }, typedef unsigned long long size_t)
    lastIndexOf(typedef char32_t value_type, typedef unsigned long long size_t)
    lastIndexNotOf(typedef char32_t value_type, typedef unsigned long long size_t)
    indexOfAny(class StringView { ... }, typedef unsigned long long size_t)
    lastIndexOfAny(class StringView { ... }, typedef unsigned long long size_t)
    indexNotOfAny(class StringView { ... }, typedef unsigned long long size_t)
    lastIndexNotOfAny(class StringView { ... }, typedef unsigned long long size_t)
    compare(String const&)
    compare(class StringView { ... })
    compare(value_type const *)
    case_insensitive_compare(class StringView { ... })
    case_insensitive_equals(class StringView { ... })
    all(Fty)
    any(Fty)
    capitalize()
    capitalized()
    capitalized()
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    count(typedef char32_t value_type)
    count(class StringView { ... })
    count_if(Fty)
    each(Fty)
    each(Fty)
    each_index(Fty)
    each_index(Fty)
    expandTabs(typedef unsigned long long size_t)
    fetch(typedef unsigned long long size_t, typedef char32_t value_type)
    fill(typedef char32_t value_type)
    filter(Fty)
    includes(typedef char32_t value_type)
    includes(class StringView { ... })
    includes_if(Fty)
    keep_if(Fty)
    layout(typedef unsigned long long size_t)
    levenshteinDistanceFrom(class StringView { ... })
    lowercase()
    lowercased()
    lowercased()
    lpad(typedef unsigned long long size_t, typedef char32_t value_type)
    lpadded(typedef unsigned long long size_t, typedef char32_t value_type)
    lpadded(typedef unsigned long long size_t, typedef char32_t value_type)
    ltrim()
    ltrimmed()
    ltrimmed()
    map(Fty)
    none(Fty)
    remove(typedef char32_t value_type)
    remove(class StringView { ... })
    removed(typedef char32_t value_type)
    removed(typedef char32_t value_type)
    removed(class StringView { ... })
    removed(class StringView { ... })
    remove_at(typedef unsigned long long size_t)
    removed_at(typedef unsigned long long size_t)
    removed_at(typedef unsigned long long size_t)
    remove_if(Fty)
    removed_if(Fty)
    removed_if(Fty)
    replace(typedef char32_t value_type, typedef char32_t value_type)
    replace(StringView const, StringView const)
    replace(typedef unsigned long long size_type, typedef unsigned long long size_type, String const&)
    replace(typedef unsigned long long size_type, typedef unsigned long long size_type, value_type const *)
    replace(typedef unsigned long long size_type, typedef unsigned long long size_type, const StringViewIsh&)
    replace(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator, String const&)
    replace(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator, value_type const *)
    replace(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator, const StringViewIsh&)
    replace(typedef _String_const_iterator const_iterator, typedef _String_const_iterator const_iterator, Iterator, Iterator)
    replaced(typedef char32_t value_type, typedef char32_t value_type)
    replaced(typedef char32_t value_type, typedef char32_t value_type)
    replaced(class StringView { ... }, class StringView { ... })
    replace_if(Fty, value_type const)
    replaced_if(Fty, value_type const)
    replaced_if(Fty, value_type const)
    reverse()
    reversed()
    reversed()
    reverse_each(Fty)
    reverse_each(Fty)
    rotate(long long)
    rotated(long long)
    rotated(long long)
    rpad(typedef unsigned long long size_t, typedef char32_t value_type)
    rpadded(typedef unsigned long long size_t, typedef char32_t value_type)
    rpadded(typedef unsigned long long size_t, typedef char32_t value_type)
    rtrim()
    rtrimmed()
    rtrimmed()
    shuffle()
    shuffle(URBG &&)
    shuffled()
    shuffled()
    shuffled(URBG &&)
    shuffled(URBG &&)
    split(typedef char32_t value_type)
    split_at(typedef unsigned long long size_t)
    split_lines()
    swapcase()
    swapcased()
    swapcased()
    trim()
    trimmed()
    trimmed()
    uppercase()
    uppercased()
    uppercased()
    rsort()
    rsorted()
    rsorted()
    sort()
    sort_by(Fty)
    sorted()
    sorted()
    sorted_by(Fty)
    sorted_by(Fty)
    take(typedef unsigned long long size_t)
    take_while(Fty)
    stable_unique()
    stable_uniqued()
    stable_uniqued()
    sort_and_unique()
    sorted_and_uniqued()
    sorted_and_uniqued()
    unique_consecutive()
    uniqued_consecutive()
    uniqued_consecutive()
    values_at(class initializer_list<_Elem = unsigned long long> { ... })
    xml_escape()
    xml_escaped()
    operator==(String const&)
    operator<=>(String const&)
s3d::BigInt
    BigInt(SignedInt)
    BigInt(UnsignedInt)
    assign(typedef long long int64)
    assign(typedef unsigned long long uint64)
    assign(SignedInt)
    assign(UnsignedInt)
    assign(typedef basic_string_view string_view)
    assign(class StringView { ... })
    assign(BigInt const&)
    assign(BigInt &&)
    operator=(typedef long long int64)
    operator=(typedef unsigned long long uint64)
    operator=(SignedInt)
    operator=(UnsignedInt)
    operator=(typedef basic_string_view string_view)
    operator=(class StringView { ... })
    operator=(BigInt const&)
    operator=(BigInt &&)
    operator+()
    operator++()
    operator++(int)
    operator+(typedef long long int64)
    operator+(typedef unsigned long long uint64)
    operator+(SignedInt)
    operator+(UnsignedInt)
    operator+(BigInt const&)
    operator+=(typedef long long int64)
    operator+=(typedef unsigned long long uint64)
    operator+=(SignedInt)
    operator+=(UnsignedInt)
    operator+=(BigInt const&)
    operator-()
    operator-()
    operator--()
    operator--(int)
    operator-(typedef long long int64)
    operator-(typedef unsigned long long uint64)
    operator-(SignedInt)
    operator-(UnsignedInt)
    operator-(BigInt const&)
    operator-=(typedef long long int64)
    operator-=(typedef unsigned long long uint64)
    operator-=(SignedInt)
    operator-=(UnsignedInt)
    operator-=(BigInt const&)
    operator*(typedef long long int64)
    operator*(typedef unsigned long long uint64)
    operator*(SignedInt)
    operator*(UnsignedInt)
    operator*(BigInt const&)
    operator*=(typedef long long int64)
    operator*=(typedef unsigned long long uint64)
    operator*=(SignedInt)
    operator*=(UnsignedInt)
    operator*=(BigInt const&)
    operator/(typedef long long int64)
    operator/(typedef unsigned long long uint64)
    operator/(SignedInt)
    operator/(UnsignedInt)
    operator/(BigInt const&)
    operator/=(typedef long long int64)
    operator/=(typedef unsigned long long uint64)
    operator/=(SignedInt)
    operator/=(UnsignedInt)
    operator/=(BigInt const&)
    operator%(typedef long long int64)
    operator%(typedef unsigned long long uint64)
    operator%(SignedInt)
    operator%(UnsignedInt)
    operator%(BigInt const&)
    operator%=(typedef long long int64)
    operator%=(typedef unsigned long long uint64)
    operator%=(SignedInt)
    operator%=(UnsignedInt)
    operator%=(BigInt const&)
    operator&(typedef long long int64)
    operator&(typedef unsigned long long uint64)
    operator&(SignedInt)
    operator&(UnsignedInt)
    operator&(BigInt const&)
    operator&=(typedef long long int64)
    operator&=(typedef unsigned long long uint64)
    operator&=(SignedInt)
    operator&=(UnsignedInt)
    operator&=(BigInt const&)
    operator|(typedef long long int64)
    operator|(typedef unsigned long long uint64)
    operator|(SignedInt)
    operator|(UnsignedInt)
    operator|(BigInt const&)
    operator|=(typedef long long int64)
    operator|=(typedef unsigned long long uint64)
    operator|=(SignedInt)
    operator|=(UnsignedInt)
    operator|=(BigInt const&)
    operator^(typedef long long int64)
    operator^(typedef unsigned long long uint64)
    operator^(SignedInt)
    operator^(UnsignedInt)
    operator^(BigInt const&)
    operator^=(typedef long long int64)
    operator^=(typedef unsigned long long uint64)
    operator^=(SignedInt)
    operator^=(UnsignedInt)
    operator^=(BigInt const&)
    operator<<(typedef long long int64)
    operator<<(typedef unsigned long long uint64)
    operator<<(SignedInt)
    operator<<(UnsignedInt)
    operator<<=(typedef long long int64)
    operator<<=(typedef unsigned long long uint64)
    operator<<=(SignedInt)
    operator<<=(UnsignedInt)
    operator>>(typedef long long int64)
    operator>>(typedef unsigned long long uint64)
    operator>>(SignedInt)
    operator>>(UnsignedInt)
    operator>>=(typedef long long int64)
    operator>>=(typedef unsigned long long uint64)
    operator>>=(SignedInt)
    operator>>=(UnsignedInt)
    compare(typedef long long int64)
    compare(typedef unsigned long long uint64)
    compare(long double)
    compare(SignedInt)
    compare(UnsignedInt)
    compare(Float)
    compare(BigInt const&)
    isZero()
    sign()
    abs()
    pow(typedef unsigned int uint32)
    divmod(BigInt const&, BigInt&, BigInt&)
    lsb()
    bitTest(typedef unsigned int uint32)
    bitSet(typedef unsigned int uint32, bool)
    bitFlip(typedef unsigned int uint32)
    swap(BigInt&)
    hash()
    asInt32()
    asInt64()
    asUint32()
    asUint64()
    asSize_t()
    asFloat()
    asDouble()
    asBigFloat()
    to_string()
    to_wstring()
    str()
    _detail()
    _detail()
    _divI(typedef long long int64)
    _divI(typedef unsigned long long uint64)
    _modI(typedef long long int64)
    _modI(typedef unsigned long long uint64)
s3d::BigFloat
    BigFloat(SignedInt)
    BigFloat(UnsignedInt)
    BigFloat(Float)
    assign(typedef long long int64)
    assign(typedef unsigned long long uint64)
    assign(SignedInt)
    assign(UnsignedInt)
    assign(Float)
    assign(long double)
    assign(BigInt const&)
    assign(typedef basic_string_view string_view)
    assign(class StringView { ... })
    assign(BigFloat const&)
    assign(BigFloat &&)
    operator=(typedef long long int64)
    operator=(typedef unsigned long long uint64)
    operator=(SignedInt)
    operator=(UnsignedInt)
    operator=(Float)
    operator=(long double)
    operator=(BigInt const&)
    operator=(typedef basic_string_view string_view)
    operator=(class StringView { ... })
    operator=(BigFloat const&)
    operator=(BigFloat &&)
    operator+()
    operator++()
    operator++(int)
    operator+(SignedInt)
    operator+(UnsignedInt)
    operator+(Float)
    operator+(typedef long long int64)
    operator+(typedef unsigned long long uint64)
    operator+(long double)
    operator+(BigInt const&)
    operator+(BigFloat const&)
    operator+=(SignedInt)
    operator+=(UnsignedInt)
    operator+=(Float)
    operator+=(typedef long long int64)
    operator+=(typedef unsigned long long uint64)
    operator+=(long double)
    operator+=(BigInt const&)
    operator+=(BigFloat const&)
    operator-()
    operator-()
    operator--()
    operator--(int)
    operator-(SignedInt)
    operator-(UnsignedInt)
    operator-(Float)
    operator-(typedef long long int64)
    operator-(typedef unsigned long long uint64)
    operator-(long double)
    operator-(BigInt const&)
    operator-(BigFloat const&)
    operator-=(SignedInt)
    operator-=(UnsignedInt)
    operator-=(Float)
    operator-=(typedef long long int64)
    operator-=(typedef unsigned long long uint64)
    operator-=(long double)
    operator-=(BigInt const&)
    operator-=(BigFloat const&)
    operator*(SignedInt)
    operator*(UnsignedInt)
    operator*(Float)
    operator*(typedef long long int64)
    operator*(typedef unsigned long long uint64)
    operator*(long double)
    operator*(BigInt const&)
    operator*(BigFloat const&)
    operator*=(SignedInt)
    operator*=(UnsignedInt)
    operator*=(Float)
    operator*=(typedef long long int64)
    operator*=(typedef unsigned long long uint64)
    operator*=(long double)
    operator*=(BigInt const&)
    operator*=(BigFloat const&)
    operator/(SignedInt)
    operator/(UnsignedInt)
    operator/(Float)
    operator/(typedef long long int64)
    operator/(typedef unsigned long long uint64)
    operator/(long double)
    operator/(BigInt const&)
    operator/(BigFloat const&)
    operator/=(SignedInt)
    operator/=(UnsignedInt)
    operator/=(Float)
    operator/=(typedef long long int64)
    operator/=(typedef unsigned long long uint64)
    operator/=(long double)
    operator/=(BigInt const&)
    operator/=(BigFloat const&)
    compare(SignedInt)
    compare(UnsignedInt)
    compare(Float)
    compare(typedef long long int64)
    compare(typedef unsigned long long uint64)
    compare(long double)
    compare(BigInt const&)
    compare(BigFloat const&)
    isZero()
    isNaN()
    isInf()
    sign()
    abs()
    swap(BigFloat&)
    hash()
    asFloat()
    asDouble()
    asLongDouble()
    to_string()
    to_wstring()
    str()
    _detail()
    _detail()
s3d::IReader
    supportsLookahead()
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    skip(typedef long long int64)
    read(void *, typedef long long int64)
    read(void *, typedef long long int64, typedef long long int64)
    read(TriviallyCopyable&)
    lookahead(void *, typedef long long int64)
    lookahead(void *, typedef long long int64, typedef long long int64)
    lookahead(TriviallyCopyable&)
s3d::IWriter
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    write(void const *, typedef long long int64)
    write(const TriviallyCopyable&)
s3d::FormatData
s3d::Point
    Point(IntegerX, IntegerY)
    Point(X, Y)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(Point const&)
    operator+()
    operator-()
    operator+(struct Point { ... })
    operator-(struct Point { ... })
    operator+(Vector2D<type-parameter-0-0>)
    operator-(Vector2D<type-parameter-0-0>)
    operator*(typedef int int32)
    operator*(float)
    operator*(double)
    operator*(struct Point { ... })
    operator*(Vector2D<type-parameter-0-0>)
    operator/(typedef int int32)
    operator/(float)
    operator/(double)
    operator/(struct Point { ... })
    operator%(typedef int int32)
    operator%(struct Point { ... })
    operator/(Vector2D<type-parameter-0-0>)
    operator+=(struct Point { ... })
    operator-=(struct Point { ... })
    operator*=(typedef int int32)
    operator/=(typedef int int32)
    operator%=(typedef int int32)
    isZero()
    minComponent()
    maxComponent()
    clear()
    withX(typedef int32 value_type)
    withY(typedef int32 value_type)
    set(typedef int32 value_type, typedef int32 value_type)
    set(struct Point { ... })
    movedBy(typedef int32 value_type, typedef int32 value_type)
    movedBy(struct Point { ... })
    movedBy(Vector2D<type-parameter-0-0>)
    moveBy(typedef int32 value_type, typedef int32 value_type)
    moveBy(struct Point { ... })
    horizontalAspectRatio()
    length()
    lengthSq()
    manhattanLength()
    manhattanDistanceFrom(typedef int int32, typedef int int32)
    manhattanDistanceFrom(struct Point { ... })
    distanceFrom(double, double)
    distanceFrom(struct Point { ... })
    distanceFrom(Vector2D<type-parameter-0-0>)
    distanceFromSq(double, double)
    distanceFromSq(struct Point { ... })
    distanceFromSq(Vector2D<type-parameter-0-0>)
    area()
    rotated90(typedef int int32)
    rotate90(typedef int int32)
    rotated90At(struct Point { ... }, typedef int int32)
    rotate90At(struct Point { ... }, typedef int int32)
    getAngle()
    getAngle(Vector2D<type-parameter-0-0>)
    getPerpendicularCW()
    getPerpendicularCCW()
    getMidpoint(struct Point { ... })
    getMidpoint(Vector2D<type-parameter-0-0>)
    getPointByAngleAndDistance(T, U)
    lerp(struct Point { ... }, double)
    lerp(Vector2D<type-parameter-0-0>, double)
    asCircle(double)
    intersects(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&)
    hash()
    xx()
    xy()
    yx()
    yy()
    x0()
    y0()
    Zero()
    One()
    All(typedef int32 value_type)
    UnitX()
    UnitY()
    Left(typedef int32 value_type)
    Right(typedef int32 value_type)
    Up(typedef int32 value_type)
    Down(typedef int32 value_type)
s3d::Vector2D<float>
s3d::Vector2D<Type>
    Vector2D<Type>(X, Y)
    Vector2D<Type>(const Vector2D<type-parameter-1-0>&)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(const Vector2D<Type>&)
    operator+()
    operator-()
    operator+(Vector2D<Type>)
    operator-(Vector2D<Type>)
    operator*(typedef Type value_type)
    operator*(Vector2D<Type>)
    operator/(typedef Type value_type)
    operator/(Vector2D<Type>)
    operator+=(Vector2D<Type>)
    operator-=(Vector2D<Type>)
    operator*=(typedef Type value_type)
    operator*=(Vector2D<Type>)
    operator/=(typedef Type value_type)
    operator/=(Vector2D<Type>)
    epsilonEquals(Vector2D<Type>, typedef Type value_type)
    hasSameDirection(Vector2D<Type>)
    hasOppositeDirection(Vector2D<Type>)
    isZero()
    hasNaN()
    minComponent()
    maxComponent()
    clear()
    withX(typedef Type value_type)
    withY(typedef Type value_type)
    set(typedef Type value_type, typedef Type value_type)
    set(Vector2D<Type>)
    movedBy(typedef Type value_type, typedef Type value_type)
    movedBy(Vector2D<Type>)
    moveBy(typedef Type value_type, typedef Type value_type)
    moveBy(Vector2D<Type>)
    clamped(RectF const&)
    clamp(RectF const&)
    dot(Vector2D<Type>)
    cross(Vector2D<Type>)
    horizontalAspectRatio()
    length()
    lengthSq()
    invLength()
    manhattanLength()
    manhattanDistanceFrom(typedef Type value_type, typedef Type value_type)
    manhattanDistanceFrom(Vector2D<Type>)
    distanceFrom(typedef Type value_type, typedef Type value_type)
    distanceFrom(Vector2D<Type>)
    distanceFromSq(typedef Type value_type, typedef Type value_type)
    distanceFromSq(Vector2D<Type>)
    withLength(typedef Type value_type)
    setLength(typedef Type value_type)
    limitLength(typedef Type value_type)
    limitLengthSelf(typedef Type value_type)
    normalized()
    normalize()
    normalized_or(Vector2D<Type>)
    rotated(typedef Type value_type)
    rotate(typedef Type value_type)
    rotatedAt(Vector2D<Type>, typedef Type value_type)
    rotateAt(Vector2D<Type>, typedef Type value_type)
    rotated90(typedef int int32)
    rotate90(typedef int int32)
    rotated90At(Vector2D<Type>, typedef int int32)
    rotate90At(Vector2D<Type>, typedef int int32)
    getAngle()
    getAngle(Vector2D<Type>)
    getPerpendicularCW()
    getPerpendicularCCW()
    getMidpoint(Vector2D<Type>)
    projection(Vector2D<Type>)
    getPointByAngleAndDistance(typedef Type value_type, typedef Type value_type)
    lerp(Vector2D<Type>, typedef Type value_type)
    asPoint()
    asCircle(double)
    intersects(const Shape2DType&)
    hash()
    xx()
    xy()
    yx()
    yy()
    x0()
    y0()
    xy0()
    Zero()
    One()
    All(typedef Type value_type)
    UnitX()
    UnitY()
    Left(typedef Type value_type)
    Right(typedef Type value_type)
    Up(typedef Type value_type)
    Down(typedef Type value_type)
    AnchorCenter()
    AnchorTopLeft()
    AnchorTopCenter()
    AnchorTopRight()
    AnchorRightCenter()
    AnchorBottomRight()
    AnchorBottomCenter()
    AnchorBottomLeft()
    AnchorLeftCenter()
    _Formatter(FormatData&, const Vector2D<Type>&)
s3d::Vector2D<double>
s3d::Circle
    Circle(Arithmetic)
    Circle(X, Y, R)
    Circle(typedef Vector2D position_type, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    Circle(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, Arithmetic)
    set(typedef double value_type, typedef double value_type, typedef double size_type)
    set(typedef Vector2D position_type, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double size_type)
    set(Circle const&)
    setCenter(typedef double value_type, typedef double value_type)
    setCenter(typedef Vector2D position_type)
    setPos(typedef double value_type, typedef double value_type)
    setPos(typedef Vector2D position_type)
    setPos(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setR(typedef double value_type)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D position_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D position_type)
    stretched(typedef double value_type)
    stretched(double, double)
    scaled(double)
    scaled(double, double)
    top()
    right()
    bottom()
    left()
    horizontalDiameter()
    verticalDiameter()
    area()
    perimeter()
    boundingRect()
    getPointByAngle(double)
    asPolygon(typedef unsigned int uint32)
    pieAsPolygon(double, double, typedef unsigned int uint32)
    arcAsPolygon(double, double, double, double, typedef unsigned int uint32)
    lerp(Circle const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    paintFrame(Image&, double, double, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwriteFrame(Image&, double, double, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, ColorF const&, ColorF const&)
    drawFrame(double, double, ColorF const&)
    drawFrame(double, double, ColorF const&, ColorF const&)
    drawPie(double, double, ColorF const&)
    drawPie(double, double, ColorF const&, ColorF const&)
    drawArc(double, double, double, double, ColorF const&)
    drawArc(double, double, double, double, ColorF const&, ColorF const&)
    drawArc(LineStyle const&, double, double, double, double, ColorF const&)
    drawArc(LineStyle const&, double, double, double, double, ColorF const&, ColorF const&)
    drawSegment(double, double, ColorF const&)
    drawSegmentFromAngles(double, double, ColorF const&)
    drawShadow(Vector2D const&, double, double, ColorF const&)
    operator()(Texture const&)
    operator()(TextureRegion const&)
s3d::NamedParameter<s3d::Arg::center_tag, s3d::Vector2D<double>>
s3d::NamedParameter<Tag, Type>
    NamedParameter<Tag, Type>(const NamedParameter<type-parameter-0-0, type-parameter-1-0>&)
    NamedParameter<Tag, Type>(const NamedParameter<type-parameter-0-0, tuple<type-parameter-1-0...>>&)
    operator->()
    operator*()
    value()
s3d::NamedParameter<s3d::Arg::topLeft_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::topCenter_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::topRight_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::rightCenter_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::bottomRight_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::bottomCenter_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::bottomLeft_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::leftCenter_tag, s3d::Vector2D<double>>
s3d::Line
    Line(X0, Y0, X1, Y1)
    Line(typedef Vector2D position_type, X1, Y1)
    Line(X0, Y0, typedef Vector2D position_type)
    Line(X0, Y0, class NamedParameter<Tag = s3d::Arg::direction_tag, Type = s3d::Vector2D<double>> { ... })
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef Vector2D position_type, typedef double value_type, typedef double value_type)
    set(typedef double value_type, typedef double value_type, typedef Vector2D position_type)
    set(typedef Vector2D position_type, typedef Vector2D position_type)
    set(Line const&)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D position_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D position_type)
    stretched(typedef double value_type)
    stretched(typedef double value_type, typedef double value_type)
    vector()
    normalizedVector()
    normal()
    reversed()
    reverse()
    hasLength()
    length()
    lengthSq()
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    position(double)
    center()
    closest(typedef Vector2D position_type)
    boundingRect()
    withThickness(double)
    extractLine(double, double)
    lerp(Line const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    intersectsAt(Line const&)
    intersectsAtPrecise(Line const&)
    paint(Image&, Color const&)
    paint(Image&, typedef int int32, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    paintArrow(Image&, double, Vector2D const&, Color const&)
    overwriteArrow(Image&, double, Vector2D const&, Color const&)
    paintDoubleHeadedArrow(Image&, double, Vector2D const&, Color const&)
    overwriteDoubleHeadedArrow(Image&, double, Vector2D const&, Color const&)
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&)
    draw(double, ColorF const&)
    draw(double, ColorF const&, ColorF const&)
    draw(LineStyle const&, double, ColorF const&)
    draw(LineStyle const&, double, ColorF const&, ColorF const&)
    drawArrow(double, Vector2D const&, ColorF const&)
    drawDoubleHeadedArrow(double, Vector2D const&, ColorF const&)
s3d::NamedParameter<s3d::Arg::direction_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::angle_tag, double>
s3d::RectF
    RectF(Arithmetic)
    RectF(W, H)
    RectF(X, Y, S)
    RectF(X, Y, W, H)
    RectF(X, Y, typedef Vector2D size_type)
    RectF(typedef Vector2D position_type, Arithmetic)
    RectF(typedef Vector2D position_type, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    RectF(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, W, H)
    setPos(typedef double value_type, typedef double value_type)
    setPos(typedef Vector2D position_type)
    setPos(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... })
    setCenter(typedef double value_type, typedef double value_type)
    setCenter(typedef Vector2D position_type)
    setSize(typedef double value_type)
    setSize(typedef double value_type, typedef double value_type)
    setSize(typedef Vector2D size_type)
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef double value_type, typedef double value_type, typedef Vector2D size_type)
    set(typedef Vector2D position_type, typedef double value_type)
    set(typedef Vector2D position_type, typedef double value_type, typedef double value_type)
    set(typedef Vector2D position_type, typedef Vector2D size_type)
    set(Rect const&)
    set(RectF const&)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef double value_type, typedef double value_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, typedef Vector2D size_type)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D size_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D size_type)
    stretched(typedef double value_type)
    stretched(typedef double value_type, typedef double value_type)
    stretched(typedef Vector2D size_type)
    stretched(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    stretched(class NamedParameter<Tag = s3d::Arg::top_tag, Type = double> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::right_tag, Type = double> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = double> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::left_tag, Type = double> { ... })
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    isEmpty()
    hasArea()
    leftX()
    rightX()
    topY()
    bottomY()
    centerX()
    centerY()
    tl()
    tr()
    br()
    bl()
    topCenter()
    rightCenter()
    bottomCenter()
    leftCenter()
    center()
    getRelativePoint(double, double)
    top()
    right()
    bottom()
    left()
    point(typedef unsigned long long size_t)
    side(typedef unsigned long long size_t)
    triangle(typedef unsigned long long size_t)
    area()
    perimeter()
    horizontalAspectRatio()
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(struct Vector2D<Type = double> { ... }, double)
    rotated90(typedef int int32)
    rotate90(typedef int int32)
    rotated90At(Vector2D const&, typedef int int32)
    rotate90At(Vector2D const&, typedef int int32)
    shearedX(double)
    shearedY(double)
    skewedX(double)
    skewedY(double)
    rounded(double)
    rounded(double, double, double, double)
    chamfered(double)
    chamfered(double, double, double, double)
    asRect()
    asQuad()
    outline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    outline(double, double)
    asPolygon()
    lerp(RectF const&, double)
    getOverlap(RectF const&)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&)
    paintFrame(Image&, typedef int int32, typedef int int32, Color const&)
    overwriteFrame(Image&, typedef int int32, typedef int int32, Color const&)
    draw(ColorF const&)
    draw(ColorF const[4]&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, ColorF const&)
    drawFrame(double, ColorF const&, ColorF const&)
    drawFrame(double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, double, ColorF const&)
    drawFrame(double, double, ColorF const&, ColorF const&)
    drawFrame(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawShadow(Vector2D const&, double, double, ColorF const&, bool)
    operator()(Texture const&)
    operator()(TextureRegion const&)
    Empty()
    FromPoints(typedef Vector2D position_type, typedef Vector2D position_type)
s3d::Rect
    Rect(Int)
    Rect(W, H)
    Rect(X, Y, S)
    Rect(X, Y, W, H)
    Rect(X, Y, typedef Point size_type)
    Rect(typedef Point position_type, Int)
    Rect(typedef Point position_type, W, H)
    setPos(typedef int32 value_type, typedef int32 value_type)
    setPos(typedef Point position_type)
    setPos(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Point> { ... })
    setPos(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Point> { ... })
    setCenter(typedef int32 value_type, typedef int32 value_type)
    setCenter(typedef Point position_type)
    setSize(typedef int32 value_type)
    setSize(typedef int32 value_type, typedef int32 value_type)
    setSize(typedef Point size_type)
    set(typedef int32 value_type, typedef int32 value_type, typedef int32 value_type, typedef int32 value_type)
    set(typedef int32 value_type, typedef int32 value_type, typedef int32 value_type)
    set(typedef int32 value_type, typedef int32 value_type, typedef Point size_type)
    set(typedef Point position_type, typedef int32 value_type)
    set(typedef Point position_type, typedef int32 value_type, typedef int32 value_type)
    set(typedef Point position_type, typedef Point size_type)
    set(Rect const&)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Point> { ... }, typedef int32 value_type, typedef int32 value_type)
    set(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Point> { ... }, typedef Point size_type)
    movedBy(typedef int32 value_type, typedef int32 value_type)
    movedBy(typedef Point size_type)
    moveBy(typedef int32 value_type, typedef int32 value_type)
    moveBy(typedef Point size_type)
    stretched(typedef int32 value_type)
    stretched(typedef int32 value_type, typedef int32 value_type)
    stretched(typedef Point size_type)
    stretched(typedef int32 value_type, typedef int32 value_type, typedef int32 value_type, typedef int32 value_type)
    stretched(class NamedParameter<Tag = s3d::Arg::top_tag, Type = int> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::right_tag, Type = int> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = int> { ... })
    stretched(class NamedParameter<Tag = s3d::Arg::left_tag, Type = int> { ... })
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    isEmpty()
    hasArea()
    leftX()
    rightX()
    topY()
    bottomY()
    centerX()
    centerY()
    tl()
    tr()
    br()
    bl()
    topCenter()
    rightCenter()
    bottomCenter()
    leftCenter()
    center()
    getRelativePoint(double, double)
    top()
    right()
    bottom()
    left()
    point(typedef unsigned long long size_t)
    side(typedef unsigned long long size_t)
    triangle(typedef unsigned long long size_t)
    area()
    perimeter()
    horizontalAspectRatio()
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(struct Vector2D<Type = double> { ... }, double)
    rotated90At(position_type const&, typedef int int32)
    rotate90At(position_type const&, typedef int int32)
    shearedX(double)
    shearedY(double)
    skewedX(double)
    skewedY(double)
    rounded(double)
    rounded(double, double, double, double)
    chamfered(double)
    chamfered(double, double, double, double)
    asQuad()
    outline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    outline(double, double)
    asPolygon()
    lerp(Rect const&, double)
    lerp(RectF const&, double)
    getOverlap(Rect const&)
    getOverlap(RectF const&)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&)
    paintFrame(Image&, typedef int int32, typedef int int32, Color const&)
    overwriteFrame(Image&, typedef int int32, typedef int int32, Color const&)
    draw(ColorF const&)
    draw(ColorF const[4]&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, ColorF const&)
    drawFrame(double, ColorF const&, ColorF const&)
    drawFrame(double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, double, ColorF const&)
    drawFrame(double, double, ColorF const&, ColorF const&)
    drawFrame(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawShadow(Vector2D const&, double, double, ColorF const&, bool)
    operator()(Texture const&)
    operator()(TextureRegion const&)
    Empty()
    FromPoints(typedef Point position_type, typedef Point position_type)
s3d::NamedParameter<s3d::Arg::center_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::topLeft_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::topCenter_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::topRight_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::rightCenter_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::bottomRight_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::bottomCenter_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::bottomLeft_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::leftCenter_tag, s3d::Point>
s3d::NamedParameter<s3d::Arg::top_tag, int>
s3d::NamedParameter<s3d::Arg::right_tag, int>
s3d::NamedParameter<s3d::Arg::bottom_tag, int>
s3d::NamedParameter<s3d::Arg::left_tag, int>
s3d::Triangle
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(position_type const&, position_type const&, position_type const&)
    set(Triangle const&)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D position_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D position_type)
    setCentroid(typedef double value_type, typedef double value_type)
    setCentroid(typedef Vector2D position_type)
    centroid()
    stretched(typedef double value_type)
    rotated(typedef double value_type)
    rotatedAt(typedef double value_type, typedef double value_type, typedef double value_type)
    rotatedAt(typedef Vector2D position_type, typedef double value_type)
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scale(double)
    scale(double, double)
    scale(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaleAt(struct Vector2D<Type = double> { ... }, double)
    scaleAt(struct Vector2D<Type = double> { ... }, double, double)
    scaleAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    isClockwise()
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    side(typedef unsigned long long size_t)
    area()
    perimeter()
    boundingRect()
    getCircumscribedCircle()
    getInscribedCircle()
    calculateBuffer(double)
    calculateRoundBuffer(double)
    outline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    outline(double, double)
    asPolygon()
    lerp(Triangle const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    paintFrame(Image&, typedef int int32, Color const&)
    overwriteFrame(Image&, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, double, ColorF const&)
    FromPoints(position_type const&, position_type const&, position_type const&)
    FromPoints(position_type const&, position_type const&, double)
s3d::Polygon
    operator=(Polygon const&)
    operator=(Polygon &&)
    isEmpty()
    hasHoles()
    num_holes()
    swap(Polygon&)
    outer()
    inners()
    vertices()
    indices()
    boundingRect()
    num_triangles()
    triangle(typedef unsigned long long size_t)
    addHole(RectF const&)
    addHole(Triangle const&)
    addHole(Quad const&)
    addHole(Circle const&, typedef unsigned int uint32)
    addHole(Ellipse const&, typedef unsigned int uint32)
    addHole(RoundRect const&, typedef unsigned int uint32)
    addHole(class Array<Type = s3d::Vector2D<double>, Allocator = std::allocator<s3d::Vector2D<double>>> { ... })
    addHoles(class Array<Type = s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>, Allocator = std::allocator<s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>>> { ... })
    movedBy(double, double)
    movedBy(double, double)
    movedBy(struct Vector2D<Type = double> { ... })
    movedBy(struct Vector2D<Type = double> { ... })
    moveBy(double, double)
    moveBy(struct Vector2D<Type = double> { ... })
    rotated(double)
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(double, double, double)
    rotatedAt(struct Vector2D<Type = double> { ... }, double)
    rotatedAt(struct Vector2D<Type = double> { ... }, double)
    rotate(double)
    rotateAt(double, double, double)
    rotateAt(struct Vector2D<Type = double> { ... }, double)
    transformed(double, double, Vector2D const&)
    transformed(double, double, Vector2D const&)
    transform(double, double, Vector2D const&)
    scaled(double)
    scaled(double)
    scaled(double, double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scaled(struct Vector2D<Type = double> { ... })
    scale(double)
    scale(double, double)
    scale(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaleAt(struct Vector2D<Type = double> { ... }, double)
    scaleAt(struct Vector2D<Type = double> { ... }, double, double)
    scaleAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    area()
    perimeter()
    centroid()
    computeConvexHull()
    calculateBuffer(double)
    calculateRoundBuffer(double)
    simplified(double)
    outline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    outline(double, double)
    append(RectF const&)
    append(Polygon const&)
    intersects(const Shape2DType&)
    intersects(Line const&)
    intersects(Rect const&)
    intersects(RectF const&)
    intersects(Polygon const&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    paint(Image&, double, double, Color const&)
    paint(Image&, Vector2D const&, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, double, double, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, Vector2D const&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(double, double, ColorF const&)
    draw(Vector2D const&, ColorF const&)
    drawTransformed(double, Vector2D const&, ColorF const&)
    drawTransformed(double, double, Vector2D const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, double, double, ColorF const&)
    drawFrame(Vector2D const&, double, ColorF const&)
    drawWireframe(double, ColorF const&)
    drawWireframe(double, double, double, ColorF const&)
    drawWireframe(Vector2D const&, double, ColorF const&)
    toBuffer2D(Vector2D const&, Vector2D const&)
    toBuffer2D(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, Vector2D const&)
    toBuffer2D(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, Vector2D const&, double)
    toBuffer2D(Mat3x2 const&)
    Validate(Vector2D const *, typedef unsigned long long size_t, Array const&)
    Validate(Array const&, Array const&)
    Correct(Vector2D const *, typedef unsigned long long size_t, Array const&)
    Correct(Array const&, Array const&)
    CorrectOne(Vector2D const *, typedef unsigned long long size_t, Array const&)
    CorrectOne(Array const&, Array const&)
    _detail()
s3d::Array<s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>, std::allocator<s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>>>
s3d::Array<Type, Allocator>
    Array<Type, Allocator>(Iterator, Iterator, const Allocator&)
    Array<Type, Allocator>(ArrayIsh &&)
    Array<Type, Allocator>(typedef typename container_type::size_type size_type, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_)
    Array<Type, Allocator>(typedef typename container_type::size_type size_type, typedef NamedParameter<s3d::Arg::indexedGenerator_tag, type-parameter-0-0> indexedGenerator_)
    operator=(const Array<Type, Allocator>&)
    operator=(Array<Type, Allocator> &&)
    operator=(container_type const&)
    operator=(container_type &&)
    operator=(initializer_list<typename vector<type-parameter-0-0, type-parameter-0-1>::value_type>)
    operator=(const ArrayIsh&)
    assign(typedef typename container_type::size_type size_type, value_type const&)
    assign(Iterator, Iterator)
    assign(initializer_list<typename vector<type-parameter-0-0, type-parameter-0-1>::value_type>)
    get_allocator()
    getContainer()
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    front()
    front()
    back()
    back()
    data()
    data()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    empty()
    isEmpty()
    size()
    max_size()
    reserve(typedef typename container_type::size_type size_type)
    capacity()
    shrink_to_fit()
    clear()
    insert(typedef typename container_type::const_iterator const_iterator, value_type const&)
    insert(typedef typename container_type::const_iterator const_iterator, value_type &&)
    insert(typedef typename container_type::const_iterator const_iterator, typedef typename container_type::size_type size_type, value_type const&)
    insert(typedef typename container_type::const_iterator const_iterator, Iterator, Iterator)
    insert(typedef typename container_type::const_iterator const_iterator, initializer_list<typename vector<type-parameter-0-0, type-parameter-0-1>::value_type>)
    emplace(typedef typename container_type::const_iterator const_iterator, Args &&...)
    erase(typedef typename container_type::const_iterator const_iterator)
    erase(typedef typename container_type::const_iterator const_iterator, typedef typename container_type::const_iterator const_iterator)
    push_back(value_type const&)
    push_back(value_type &&)
    emplace_back(Args &&...)
    pop_back()
    resize(typedef typename container_type::size_type size_type)
    resize(typedef typename container_type::size_type size_type, value_type const&)
    swap(Array<Type, Allocator>&)
    release()
    size_bytes()
    push_front(value_type const&)
    push_front(value_type &&)
    pop_front()
    pop_front_N(typedef unsigned long long size_t)
    pop_back_N(typedef unsigned long long size_t)
    operator<<(value_type const&)
    operator<<(value_type &&)
    operator>>(Fty)
    all(Fty)
    any(Fty)
    append(const Array<Type, Allocator>&)
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    choice(Int)
    choice(Size_t, URBG &&)
    chunk(typedef unsigned long long size_t)
    contains(value_type const&)
    contains_if(Fty)
    count(value_type const&)
    count_if(Fty)
    each(Fty)
    each(Fty)
    each_index(Fty)
    each_index(Fty)
    fetch(typedef unsigned long long size_t, U &&)
    fill(value_type const&)
    filter(Fty)
    in_groups(typedef unsigned long long size_t)
    includes(value_type const&)
    includes_if(Fty)
    isSorted()
    join(class StringView { ... }, class StringView { ... }, class StringView { ... })
    map(Fty)
    none(Fty)
    partition(Fty)
    reduce(Fty, R)
    reduce1(Fty)
    remove(value_type const&)
    removed(value_type const&)
    removed(value_type const&)
    remove_at(typedef unsigned long long size_t)
    removed_at(typedef unsigned long long size_t)
    removed_at(typedef unsigned long long size_t)
    remove_if(Fty)
    removed_if(Fty)
    removed_if(Fty)
    replace(value_type const&, value_type const&)
    replaced(value_type const&, value_type const&)
    replaced(value_type const&, value_type const&)
    replace_if(Fty, value_type const&)
    replaced_if(Fty, value_type const&)
    replaced_if(Fty, value_type const&)
    reverse()
    reversed()
    reversed()
    reverse_each(Fty)
    reverse_each(Fty)
    rotate(long long)
    rotated(long long)
    rotated(long long)
    rsort()
    rsorted()
    rsorted()
    shuffle()
    shuffle(URBG &&)
    shuffled()
    shuffled()
    shuffled(URBG &&)
    shuffled(URBG &&)
    slice(typedef unsigned long long size_t)
    slice(typedef unsigned long long size_t, typedef unsigned long long size_t)
    sort()
    stable_sort()
    sort_by(Fty)
    stable_sort_by(Fty)
    sorted()
    stable_partition(Fty)
    stable_sorted()
    sorted()
    stable_sorted()
    sorted_by(Fty)
    stable_sorted_by(Fty)
    sorted_by(Fty)
    stable_sorted_by(Fty)
    sum()
    sum()
    sumF()
    sumF()
    take(typedef unsigned long long size_t)
    take_while(Fty)
    stable_unique()
    stable_uniqued()
    stable_uniqued()
    sort_and_unique()
    sorted_and_uniqued()
    sorted_and_uniqued()
    unique_consecutive()
    uniqued_consecutive()
    uniqued_consecutive()
    values_at(class initializer_list<_Elem = unsigned long long> { ... })
    parallel_count_if(Fty)
    parallel_each(Fty)
    parallel_each(Fty)
    parallel_map(Fty)
    Generate(typedef typename container_type::size_type size_type, Fty)
    IndexedGenerate(typedef typename container_type::size_type size_type, Fty)
    operator<=>(const Array<Type, Allocator>&)
s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>
s3d::YesNo<s3d::SkipValidation_tag>
s3d::YesNo<Tag>
    operator==(const YesNo<Tag>&)
    operator==(Helper const&)
    getBool()
s3d::SkipValidation_tag
s3d::Array<s3d::TriangleIndex, std::allocator<s3d::TriangleIndex>>
s3d::TriangleIndex
    Zero()
s3d::Array<s3d::Vector2D<float>, std::allocator<s3d::Vector2D<float>>>
s3d::Shape2D
    Cross(double, double, Vector2D const&, double)
    Plus(double, double, Vector2D const&, double)
    Pentagon(double, Vector2D const&, double)
    Hexagon(double, Vector2D const&, double)
    Ngon(typedef unsigned int uint32, double, Vector2D const&, double)
    Star(double, Vector2D const&, double)
    NStar(typedef unsigned int uint32, double, double, Vector2D const&, double)
    Arrow(Vector2D const&, Vector2D const&, double, Vector2D const&)
    Arrow(Line const&, double, Vector2D const&)
    DoubleHeadedArrow(Vector2D const&, Vector2D const&, double, Vector2D const&)
    DoubleHeadedArrow(Line const&, double, Vector2D const&)
    Rhombus(double, double, Vector2D const&, double)
    RectBalloon(RectF const&, Vector2D const&, double)
    Stairs(Vector2D const&, double, double, typedef unsigned int uint32, bool)
    Heart(double, Vector2D const&, double)
    Squircle(double, Vector2D const&, typedef unsigned int uint32)
    Astroid(Vector2D const&, double, double, double, double)
    vertices()
    indices()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    asPolygon()
    toBuffer2D(Vector2D const&, Vector2D const&)
    toBuffer2D(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, Vector2D const&)
    toBuffer2D(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, Vector2D const&, double)
    toBuffer2D(Mat3x2 const&)
s3d::ColorF
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(ColorF const&)
    operator=(struct Color { ... })
    operator=(HSV const&)
    operator+(ColorF const&)
    operator+=(ColorF const&)
    operator-(ColorF const&)
    operator-=(ColorF const&)
    operator*(double const)
    operator*=(double const)
    operator*(ColorF const&)
    operator*=(ColorF const&)
    withR(double)
    withG(double)
    withB(double)
    withA(double)
    setR(double)
    setG(double)
    setB(double)
    setA(double)
    setRGB(double)
    setRGB(double, double, double)
    set(double, double)
    set(double, double, double, double)
    set(ColorF const&)
    withAlpha(double)
    grayscale()
    minRGBComponent()
    maxRGBComponent()
    minComponent()
    maxComponent()
    lerp(ColorF const&, double)
    gamma(double)
    removeSRGBCurve()
    applySRGBCurve()
    hash()
    toColor()
    toFloat4()
    toVec4()
    rg()
    gb()
    ba()
    rgb()
    gba()
    bgr()
    rgba()
    rgb0()
    rgb1()
    argb()
    abgr()
    Zero()
    One()
s3d::Vector3D<double>
s3d::Vector3D<Type>
    Vector3D<Type>(X, Y, Z)
    Vector3D<Type>(const Vector3D<type-parameter-1-0>&)
    Vector3D<Type>(const Vector2D<type-parameter-0-0>&, Z)
    Vector3D<Type>(X, const Vector2D<type-parameter-0-0>&)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(const Vector3D<Type>&)
    operator+()
    operator-()
    operator+(Vector3D<Type>)
    operator-(Vector3D<Type>)
    operator*(typedef Type value_type)
    operator*(Vector3D<Type>)
    operator/(typedef Type value_type)
    operator/(Vector3D<Type>)
    operator+=(Vector3D<Type>)
    operator-=(Vector3D<Type>)
    operator*=(typedef Type value_type)
    operator*=(Vector3D<Type>)
    operator/=(typedef Type value_type)
    operator/=(Vector3D<Type>)
    epsilonEquals(Vector3D<Type>, typedef Type value_type)
    hasSameDirection(Vector3D<Type>)
    hasOppositeDirection(Vector3D<Type>)
    isZero()
    hasNaN()
    minComponent()
    maxComponent()
    clear()
    withX(typedef Type value_type)
    withY(typedef Type value_type)
    withZ(typedef Type value_type)
    set(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    set(Vector3D<Type>)
    movedBy(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    movedBy(Vector3D<Type>)
    moveBy(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    moveBy(Vector3D<Type>)
    clamped(Box const&)
    clamp(Box const&)
    dot(Vector3D<Type>)
    cross(Vector3D<Type>)
    angleTo(Vector3D<Type>)
    projectOnVector(Vector3D<Type>)
    projectOnPlane(Vector3D<Type>)
    length()
    lengthSq()
    invLength()
    manhattanLength()
    manhattanDistanceFrom(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    manhattanDistanceFrom(Vector3D<Type>)
    distanceFrom(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    distanceFrom(Vector3D<Type>)
    distanceFromSq(typedef Type value_type, typedef Type value_type, typedef Type value_type)
    distanceFromSq(Vector3D<Type>)
    withLength(typedef Type value_type)
    setLength(typedef Type value_type)
    limitLength(typedef Type value_type)
    limitLengthSelf(typedef Type value_type)
    normalized()
    normalize()
    normalized_or(Vector3D<Type>)
    getMidpoint(Vector3D<Type>)
    lerp(Vector3D<Type>, typedef Type value_type)
    asPoint3D()
    hash()
    xx()
    xy()
    xz()
    yx()
    yy()
    yz()
    zx()
    zy()
    zz()
    xxx()
    xyz()
    xzy()
    yyy()
    yxz()
    yzx()
    zzz()
    zxy()
    zyx()
    xyz0()
    xyz1()
    Zero()
    One()
    All(typedef Type value_type)
    UnitX()
    UnitY()
    UnitZ()
    Left(typedef Type value_type)
    Right(typedef Type value_type)
    Up(typedef Type value_type)
    Down(typedef Type value_type)
    Forward(typedef Type value_type)
    Backward(typedef Type value_type)
    _Formatter(FormatData&, const Vector3D<Type>&)
s3d::Vector4D<double>
s3d::Vector4D<Type>
    Vector4D<Type>(X, Y, Z, W)
    Vector4D<Type>(const Vector4D<type-parameter-1-0>&)
    Vector4D<Type>(X, Y, const Vector2D<type-parameter-0-0>&)
    Vector4D<Type>(X, const Vector2D<type-parameter-0-0>&, W)
    Vector4D<Type>(const Vector2D<type-parameter-0-0>&, Z, W)
    Vector4D<Type>(X, const Vector3D<type-parameter-0-0>&)
    Vector4D<Type>(const Vector3D<type-parameter-0-0>&, Z)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(const Vector4D<Type>&)
    operator+()
    operator-()
    operator+(Vector4D<Type>)
    operator-(Vector4D<Type>)
    operator*(typedef Type value_type)
    operator*(Vector4D<Type>)
    operator/(typedef Type value_type)
    operator/(Vector4D<Type>)
    operator+=(Vector4D<Type>)
    operator-=(Vector4D<Type>)
    operator*=(typedef Type value_type)
    operator*=(Vector4D<Type>)
    operator/=(typedef Type value_type)
    operator/=(Vector4D<Type>)
    epsilonEquals(Vector4D<Type>, typedef Type value_type)
    hasSameDirection(Vector4D<Type>)
    hasOppositeDirection(Vector4D<Type>)
    isZero()
    hasNaN()
    minComponent()
    maxComponent()
    clear()
    withX(typedef Type value_type)
    withY(typedef Type value_type)
    withZ(typedef Type value_type)
    withW(typedef Type value_type)
    set(const Vector2D<type-parameter-0-0>&, const Vector2D<type-parameter-0-0>&)
    set(const Vector2D<type-parameter-0-0>&, typedef Type value_type, typedef Type value_type)
    set(typedef Type value_type, const Vector2D<type-parameter-0-0>&, typedef Type value_type)
    set(typedef Type value_type, typedef Type value_type, const Vector2D<type-parameter-0-0>&)
    set(const Vector3D<type-parameter-0-0>&, typedef Type value_type)
    set(typedef Type value_type, const Vector3D<type-parameter-0-0>&)
    set(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    set(Vector4D<Type>)
    movedBy(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    movedBy(Vector4D<Type>)
    moveBy(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    moveBy(Vector4D<Type>)
    dot(Vector4D<Type>)
    length()
    lengthSq()
    invLength()
    manhattanLength()
    manhattanDistanceFrom(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    manhattanDistanceFrom(Vector4D<Type>)
    distanceFrom(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    distanceFrom(Vector4D<Type>)
    distanceFromSq(typedef Type value_type, typedef Type value_type, typedef Type value_type, typedef Type value_type)
    distanceFromSq(Vector4D<Type>)
    withLength(typedef Type value_type)
    setLength(typedef Type value_type)
    limitLength(typedef Type value_type)
    limitLengthSelf(typedef Type value_type)
    normalized()
    normalize()
    normalized_or(Vector4D<Type>)
    getMidpoint(Vector4D<Type>)
    lerp(Vector4D<Type>, typedef Type value_type)
    hash()
    xx()
    xy()
    xz()
    xw()
    yx()
    yy()
    yz()
    yw()
    zx()
    zy()
    zz()
    zw()
    wx()
    wy()
    wz()
    ww()
    xxx()
    xyz()
    yyy()
    yxz()
    yzw()
    zzz()
    zyx()
    www()
    wzy()
    xyz0()
    xyz1()
    xyzw()
    xxxx()
    yyyy()
    zzzz()
    wwww()
    wzyx()
    Zero()
    One()
    All(typedef Type value_type)
    UnitX()
    UnitY()
    UnitZ()
    UnitW()
    _Formatter(FormatData&, const Vector4D<Type>&)
s3d::Color
    operator=(Color const&)
    operator=(ColorF const&)
    operator=(HSV const&)
    operator~()
    withR(typedef unsigned int uint32)
    withG(typedef unsigned int uint32)
    withB(typedef unsigned int uint32)
    withA(typedef unsigned int uint32)
    setR(typedef unsigned int uint32)
    setG(typedef unsigned int uint32)
    setB(typedef unsigned int uint32)
    setA(typedef unsigned int uint32)
    setRGB(typedef unsigned int uint32)
    setRGB(typedef unsigned int uint32, typedef unsigned int uint32, typedef unsigned int uint32)
    set(typedef unsigned int uint32, typedef unsigned int uint32)
    set(typedef unsigned int uint32, typedef unsigned int uint32, typedef unsigned int uint32, typedef unsigned int uint32)
    set(struct Color { ... })
    withAlpha(typedef unsigned int uint32)
    grayscale0_255()
    grayscale()
    minRGBComponent()
    maxRGBComponent()
    minComponent()
    maxComponent()
    asUint32()
    lerp(struct Color { ... }, double)
    gamma(double)
    removeSRGBCurve()
    applySRGBCurve()
    toHex()
    hash()
    Zero()
    ToUint8(float)
    ToUint8(double)
    FromRGBA(typedef unsigned int uint32)
    FromABGR(typedef unsigned int uint32)
s3d::HSV
    HSV(Arithmetic, double)
    HSV(Arithmetic, double, double, double)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(HSV const&)
    operator+(HSV const&)
    operator-(HSV const&)
    withH(double)
    withS(double)
    withV(double)
    withA(double)
    setH(double)
    setS(double)
    setV(double)
    setA(double)
    setHSV(double, double, double)
    set(double, double, double, double)
    set(HSV const&)
    withAlpha(double)
    lerp(HSV const&, double)
    hash()
    removeSRGBCurve()
    applySRGBCurve()
    toColor()
    toColor(typedef unsigned int uint32)
    toColorF()
    toColorF(double)
    hsv()
    hsva()
    Zero()
s3d::Array<s3d::String, std::allocator<s3d::String>>
s3d::Vector4D<float>
s3d::Buffer2D
    draw()
    draw(Texture const&)
    drawSubset(typedef unsigned long long size_t, typedef unsigned long long size_t)
    drawSubset(typedef unsigned long long size_t, typedef unsigned long long size_t, Texture const&)
s3d::Array<s3d::Vertex2D, std::allocator<s3d::Vertex2D>>
s3d::Vertex2D
    set(float, float, struct Vector4D<Type = float> { ... })
    set(float, float, float, float)
    set(float, float, float, float, struct Vector4D<Type = float> { ... })
    set(struct Vector2D<Type = float> { ... }, struct Vector4D<Type = float> { ... })
    set(struct Vector2D<Type = float> { ... }, float, float, struct Vector4D<Type = float> { ... })
    set(struct Vector2D<Type = float> { ... }, struct Vector2D<Type = float> { ... }, struct Vector4D<Type = float> { ... })
s3d::Mat3x2
    Mat3x2(Arithmetic)
    translated(struct Vector2D<Type = float> { ... })
    translated(X, Y)
    scaled(Arithmetic, struct Vector2D<Type = float> { ... })
    scaled(struct Vector2D<Type = float> { ... }, struct Vector2D<Type = float> { ... })
    scaled(X, Y, struct Vector2D<Type = float> { ... })
    rotated(Arithmetic, struct Vector2D<Type = float> { ... })
    shearedX(Arithmetic)
    shearedY(Arithmetic)
    determinant()
    inverse()
    setProduct(Mat3x2 const&, Mat3x2 const&)
    operator*(Mat3x2 const&)
    transformPoint(struct Point { ... })
    transformPoint(struct Vector2D<Type = float> { ... })
    transformPoint(struct Vector2D<Type = double> { ... })
    hash()
    Identity()
    Translate(struct Vector2D<Type = float> { ... })
    Translate(X, Y)
    Scale(struct Vector2D<Type = float> { ... }, struct Vector2D<Type = float> { ... })
    Scale(Arithmetic, struct Vector2D<Type = float> { ... })
    Scale(X, Y, struct Vector2D<Type = float> { ... })
    Rotate(Arithmetic, struct Vector2D<Type = float> { ... })
    ShearX(Arithmetic)
    ShearY(Arithmetic)
    Screen(X, Y)
    Screen(struct Vector2D<Type = float> { ... })
s3d::Texture
    width()
    height()
    size()
    horizontalAspectRatio()
    getDesc()
    getFormat()
    hasMipMap()
    srgbSampling()
    isSDF()
    hasDepth()
    region(typedef int int32, typedef int int32)
    region(struct Point { ... })
    region(double, double)
    region(struct Vector2D<Type = double> { ... })
    regionAt(double, double)
    regionAt(struct Vector2D<Type = double> { ... })
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(double, double, ColorF const&)
    draw(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(double, double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(Vector2D const&, ColorF const&)
    draw(Vector2D const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(Vector2D const&, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(Vector2D const&, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawAt(Vector2D const&, ColorF const&)
    drawAt(Vector2D const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawClipped(double, double, RectF const&, ColorF const&)
    drawClipped(Vector2D const&, RectF const&, ColorF const&)
    drawAtClipped(double, double, RectF const&, ColorF const&)
    drawAtClipped(Vector2D const&, RectF const&, ColorF const&)
    operator()(double, double, double, double)
    operator()(Vector2D const&, double, double)
    operator()(double, double, double)
    operator()(double, double, Vector2D const&)
    operator()(Vector2D const&, Vector2D const&)
    operator()(RectF const&)
    uv(double, double, double, double)
    uv(RectF const&)
    mirrored()
    mirrored(bool)
    flipped()
    flipped(bool)
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    resized(double)
    resized(double, double)
    resized(struct Vector2D<Type = double> { ... })
    repeated(double, double)
    repeated(struct Vector2D<Type = double> { ... })
    mapped(double, double)
    mapped(struct Vector2D<Type = double> { ... })
    fitted(double, double, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... })
    fitted(Vector2D const&, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... })
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(Vector2D const&, double)
    rounded(double)
    rounded(double, double, double, double, double)
    swap(Texture&)
    getD3D11Texture2D()
s3d::AssetHandle<s3d::Texture>
s3d::AssetHandle<AssetType>
    id()
    isEmpty()
    operator==(const AssetHandle<AssetType>&)
    operator!=(const AssetHandle<AssetType>&)
    release()
s3d::Image
    Image(typedef unsigned long long size_t, NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0>)
    Image(typedef unsigned long long size_t, NamedParameter<s3d::Arg::generator0_1_tag, type-parameter-0-0>)
    Image(typedef unsigned long long size_t, typedef unsigned long long size_t, NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0>)
    Image(typedef unsigned long long size_t, typedef unsigned long long size_t, NamedParameter<s3d::Arg::generator0_1_tag, type-parameter-0-0>)
    Image(struct Point { ... }, NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0>)
    Image(struct Point { ... }, NamedParameter<s3d::Arg::generator0_1_tag, type-parameter-0-0>)
    Image(const Grid<type-parameter-0-0, allocator<type-parameter-0-0>>&, Fty)
    operator=(Image const&)
    operator=(Image &&)
    width()
    height()
    size()
    stride()
    num_pixels()
    size_bytes()
    isEmpty()
    horizontalAspectRatio()
    shrink_to_fit()
    clear()
    release()
    swap(Image&)
    cloned()
    operator[](typedef unsigned long long size_t)
    operator[](struct Point { ... })
    operator[](typedef unsigned long long size_t)
    operator[](struct Point { ... })
    inBounds(typedef long long int64, typedef long long int64)
    inBounds(struct Point { ... })
    data()
    data()
    dataAsUint8()
    dataAsUint8()
    asArray()
    asArray()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    fill(struct Color { ... })
    resize(typedef unsigned long long size_t, typedef unsigned long long size_t)
    resize(struct Point { ... })
    resize(typedef unsigned long long size_t, typedef unsigned long long size_t, struct Color { ... })
    resize(struct Point { ... }, struct Color { ... })
    resizeRows(typedef unsigned long long size_t, struct Color { ... })
    getPixel(typedef int int32, typedef int int32, enum class ImageAddressMode: uint8 {...})
    getPixel(struct Point { ... }, enum class ImageAddressMode: uint8 {...})
    samplePixel(double, double, enum class ImageAddressMode: uint8 {...})
    samplePixel(struct Vector2D<Type = double> { ... }, enum class ImageAddressMode: uint8 {...})
    clipped(Rect const&)
    clipped(Rect const&)
    clipped(typedef int int32, typedef int int32, typedef int int32, typedef int int32)
    clipped(typedef int int32, typedef int int32, typedef int int32, typedef int int32)
    clipped(Point const&, typedef int int32, typedef int int32)
    clipped(Point const&, typedef int int32, typedef int int32)
    clipped(typedef int int32, typedef int int32, Point const&)
    clipped(typedef int int32, typedef int int32, Point const&)
    clipped(Point const&, Point const&)
    clipped(Point const&, Point const&)
    squareClipped()
    squareClipped()
    forEach(Fty)
    forEach(Fty)
    RGBAtoBGRA()
    applyAlphaFromRChannel(class StringView { ... })
    save(class StringView { ... }, enum class ImageFormat: uint8 {...})
    encode(enum class ImageFormat: uint8 {...})
    saveWithDialog()
    savePNG(class StringView { ... }, enum class PNGFilter: int32 {...})
    encodePNG(enum class PNGFilter: int32 {...})
    saveJPEG(class StringView { ... }, typedef int int32)
    encodeJPEG(typedef int int32)
    savePPM(class StringView { ... }, enum class PPMType: uint8 {...})
    encodePPM(enum class PPMType: uint8 {...})
    saveWebP(class StringView { ... }, struct YesNo<Tag = s3d::Lossless_tag> { ... }, double, enum class WebPMethod: uint8 {...})
    encodeWebP(struct YesNo<Tag = s3d::Lossless_tag> { ... }, double, enum class WebPMethod: uint8 {...})
    negate()
    negated()
    negated()
    grayscale()
    grayscaled()
    grayscaled()
    sepia()
    sepiaed()
    sepiaed()
    posterize(typedef int int32)
    posterized(typedef int int32)
    posterized(typedef int int32)
    brighten(typedef int int32)
    brightened(typedef int int32)
    brightened(typedef int int32)
    mirror()
    mirrored()
    mirrored()
    flip()
    flipped()
    flipped()
    rotate90()
    rotate90(typedef int int32)
    rotated90()
    rotated90()
    rotated90(typedef int int32)
    rotated90(typedef int int32)
    rotate180()
    rotated180()
    rotated180()
    rotate270()
    rotated270()
    rotated270()
    gammaCorrect(double)
    gammaCorrected(double)
    gammaCorrected(double)
    threshold(typedef unsigned char uint8, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    thresholded(typedef unsigned char uint8, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    thresholded(typedef unsigned char uint8, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    threshold_Otsu(struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    thresholded_Otsu(struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    thresholded_Otsu(struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    adaptiveThreshold(enum class AdaptiveThresholdMethod: uint32 {...}, typedef int int32, double, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    adaptiveThresholded(enum class AdaptiveThresholdMethod: uint32 {...}, typedef int int32, double, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    adaptiveThresholded(enum class AdaptiveThresholdMethod: uint32 {...}, typedef int int32, double, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    mosaic(typedef int int32)
    mosaic(typedef int int32, typedef int int32)
    mosaiced(typedef int int32)
    mosaiced(typedef int int32)
    mosaiced(typedef int int32, typedef int int32)
    mosaiced(typedef int int32, typedef int int32)
    spread(typedef int int32)
    spread(typedef int int32, typedef int int32)
    spreaded(typedef int int32)
    spreaded(typedef int int32, typedef int int32)
    blur(typedef int int32, enum class BorderType: uint32 {...})
    blur(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    blurred(typedef int int32, enum class BorderType: uint32 {...})
    blurred(typedef int int32, enum class BorderType: uint32 {...})
    blurred(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    blurred(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    medianBlur(typedef int int32)
    medianBlurred(typedef int int32)
    medianBlurred(typedef int int32)
    gaussianBlur(typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlur(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlurred(typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlurred(typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlurred(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlurred(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    bilateralFilter(typedef int int32, double, double, enum class BorderType: uint32 {...})
    bilateralFiltered(typedef int int32, double, double, enum class BorderType: uint32 {...})
    bilateralFiltered(typedef int int32, double, double, enum class BorderType: uint32 {...})
    dilate(typedef int int32)
    dilated(typedef int int32)
    dilated(typedef int int32)
    erode(typedef int int32)
    eroded(typedef int int32)
    eroded(typedef int int32)
    floodFill(Point const&, Color const&, enum class FloodFillConnectivity: uint32 {...}, typedef int int32, typedef int int32)
    floodFilled(Point const&, Color const&, enum class FloodFillConnectivity: uint32 {...}, typedef int int32, typedef int int32)
    floodFilled(Point const&, Color const&, enum class FloodFillConnectivity: uint32 {...}, typedef int int32, typedef int int32)
    scale(typedef int int32, typedef int int32, enum class InterpolationAlgorithm: uint32 {...})
    scaled(typedef int int32, typedef int int32, enum class InterpolationAlgorithm: uint32 {...})
    scale(Point const&, enum class InterpolationAlgorithm: uint32 {...})
    scaled(Point const&, enum class InterpolationAlgorithm: uint32 {...})
    scale(double, enum class InterpolationAlgorithm: uint32 {...})
    scaled(double, enum class InterpolationAlgorithm: uint32 {...})
    fit(typedef int int32, typedef int int32, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... }, enum class InterpolationAlgorithm: uint32 {...})
    fitted(typedef int int32, typedef int int32, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... }, enum class InterpolationAlgorithm: uint32 {...})
    fit(Point const&, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... }, enum class InterpolationAlgorithm: uint32 {...})
    fitted(Point const&, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... }, enum class InterpolationAlgorithm: uint32 {...})
    border(typedef int int32, Color const&)
    bordered(typedef int int32, Color const&)
    border(typedef int int32, typedef int int32, typedef int int32, typedef int int32, Color const&)
    bordered(typedef int int32, typedef int int32, typedef int int32, typedef int int32, Color const&)
    warpAffine(Mat3x2 const&, Color const&)
    rotated(double, Color const&)
    warpPerspective(Quad const&, Color const&)
    paint(Image&, typedef int int32, typedef int int32, Color const&)
    paint(Image&, Point const&, Color const&)
    stamp(Image&, typedef int int32, typedef int int32, Color const&)
    stamp(Image&, Point const&, Color const&)
    overwrite(Image&, typedef int int32, typedef int int32)
    overwrite(Image&, struct Point { ... })
    paintAt(Image&, typedef int int32, typedef int int32, Color const&)
    paintAt(Image&, Point const&, Color const&)
    stampAt(Image&, typedef int int32, typedef int int32, Color const&)
    stampAt(Image&, Point const&, Color const&)
    overwriteAt(Image&, typedef int int32, typedef int int32)
    overwriteAt(Image&, struct Point { ... })
    operator()(typedef int int32, typedef int int32, typedef int int32, typedef int int32)
    operator()(Point const&, typedef int int32, typedef int int32)
    operator()(typedef int int32, typedef int int32, Point const&)
    operator()(Point const&, Point const&)
    operator()(Rect const&)
    operator()(typedef int int32, typedef int int32, typedef int int32, typedef int int32)
    operator()(Point const&, typedef int int32, typedef int int32)
    operator()(typedef int int32, typedef int int32, Point const&)
    operator()(Point const&, Point const&)
    operator()(Rect const&)
    alphaToPolygon(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    alphaToPolygonCentered(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    alphaToPolygons(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    alphaToPolygonsCentered(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    grayscaleToPolygon(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    grayscaleToPolygonCentered(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    grayscaleToPolygons(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    grayscaleToPolygonsCentered(typedef unsigned int uint32, struct YesNo<Tag = s3d::AllowHoles_tag> { ... })
    Generate(struct Point { ... }, Fty)
    Generate0_1(struct Point { ... }, Fty)
s3d::Array<s3d::Color, std::allocator<s3d::Color>>
s3d::Emoji
    HasGlyph(class StringView { ... })
    GetGlyphIndex(class StringView { ... })
    CreateImage(class StringView { ... })
    CreateImageByGlyphIndex(unsigned int)
    CreateSilhouetteImage(class StringView { ... })
    CreateSilhouetteImageByGlyphIndex(unsigned int)
s3d::Icon
    HasGlyph(typedef unsigned int uint32)
    HasGlyph(public enum class Type: uint8 {...}, typedef unsigned int uint32)
    CreateImage(typedef unsigned int uint32, typedef int int32)
    CreateImage(public enum class Type: uint8 {...}, typedef unsigned int uint32, typedef int int32)
    CreateSDFImage(typedef unsigned int uint32, typedef int int32, typedef int int32)
    CreateSDFImage(public enum class Type: uint8 {...}, typedef unsigned int uint32, typedef int int32, typedef int int32)
    CreateMSDFImage(typedef unsigned int uint32, typedef int int32, typedef int int32)
    CreateMSDFImage(public enum class Type: uint8 {...}, typedef unsigned int uint32, typedef int int32, typedef int int32)
s3d::Grid<s3d::Color, std::allocator<s3d::Color>>
s3d::Grid<Type, Allocator>
    Grid<Type, Allocator>(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_)
    Grid<Type, Allocator>(typedef Point Size, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_)
    Grid<Type, Allocator>(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, typedef NamedParameter<s3d::Arg::indexedGenerator_tag, type-parameter-0-0> indexedGenerator_)
    Grid<Type, Allocator>(typedef Point Size, typedef NamedParameter<s3d::Arg::indexedGenerator_tag, type-parameter-0-0> indexedGenerator_)
    operator=(const Grid<Type, Allocator>&)
    operator=(Grid<Type, Allocator> &&)
    swap(Grid<Type, Allocator>&)
    get_allocator()
    assign(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, value_type const&)
    assign(typedef Point Size, value_type const&)
    assign(const initializer_list<initializer_list<typename Array<type-parameter-0-0, type-parameter-0-1>::value_type>>&)
    at(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    at(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    at(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    at(struct Point { ... })
    at(struct Point { ... })
    at(struct Point { ... })
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](struct Point { ... })
    operator[](struct Point { ... })
    operator[](struct Point { ... })
    inBounds(typedef long long int64, typedef long long int64)
    inBounds(struct Point { ... })
    data()
    data()
    empty()
    isEmpty()
    width()
    height()
    size()
    num_elements()
    size_bytes()
    asArray()
    reserve(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    reserve(typedef Point Size)
    capacity()
    shrink_to_fit()
    clear()
    release()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    push_back_row(value_type const&)
    pop_back_row()
    pop_back_row_N(typedef unsigned long long size_t)
    push_back_column(value_type const&)
    pop_back_column()
    pop_back_column_N(typedef unsigned long long size_t)
    insert_row(typedef typename container_type::size_type size_type, value_type const&)
    insert_rows(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, value_type const&)
    insert_column(typedef typename container_type::size_type size_type, value_type const&)
    insert_columns(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, value_type const&)
    remove_row(typedef typename container_type::size_type size_type)
    remove_rows(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    remove_column(typedef typename container_type::size_type size_type)
    remove_columns(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    resize(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    resize(typedef Point Size)
    resize(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, value_type const&)
    resize(typedef Point Size, value_type const&)
    operator>>(Fty)
    all(Fty)
    any(Fty)
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    choice(Int)
    choice(Size_t, URBG &&)
    count(value_type const&)
    count_if(Fty)
    each(Fty)
    each(Fty)
    each_index(Fty)
    each_index(Fty)
    fetch(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, U &&)
    fetch(struct Point { ... }, U &&)
    fill(value_type const&)
    includes(value_type const&)
    includes_if(Fty)
    map(Fty)
    none(Fty)
    reduce(Fty, R)
    reduce1(Fty)
    replace(value_type const&, value_type const&)
    replaced(value_type const&, value_type const&)
    replaced(value_type const&, value_type const&)
    replace_if(Fty, value_type const&)
    replaced_if(Fty, value_type const&)
    replaced_if(Fty, value_type const&)
    reverse()
    reverse_columns()
    reverse_rows()
    reversed()
    reversed()
    reverse_each(Fty)
    reverse_each(Fty)
    rotate(long long)
    rotated(long long)
    rotated(long long)
    rotate_rows(long long)
    rotated_rows(long long)
    rotated_rows(long long)
    shuffle()
    shuffle(URBG &&)
    shuffled()
    shuffled()
    shuffled(URBG &&)
    shuffled(URBG &&)
    slice(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type)
    slice(struct Point { ... })
    slice(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, typedef unsigned long long size_t)
    slice(struct Point { ... }, typedef unsigned long long size_t)
    sort()
    stable_sort()
    sort_by(Fty)
    stable_sort_by(Fty)
    sorted()
    stable_sorted()
    sorted()
    stable_sorted()
    sorted_by(Fty)
    stable_sorted_by(Fty)
    sorted_by(Fty)
    stable_sorted_by(Fty)
    sum()
    sum()
    sumF()
    sumF()
    swap_columns(typedef unsigned long long size_t, typedef unsigned long long size_t)
    swap_rows(typedef unsigned long long size_t, typedef unsigned long long size_t)
    values_at(class initializer_list<_Elem = s3d::Point> { ... })
    Generate(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, Fty)
    Generate(typedef Point Size, Fty)
    IndexedGenerate(typedef typename container_type::size_type size_type, typedef typename container_type::size_type size_type, Fty)
    IndexedGenerate(typedef Point Size, Fty)
s3d::Grid<s3d::ColorF, std::allocator<s3d::ColorF>>
s3d::Blob
    operator=(Array const&)
    operator=(Array<Byte> &&)
    operator=(Blob const&)
    operator=(Blob &&)
    create(Blob const&)
    create(Blob &&)
    create(void const *, typedef unsigned long long size_t)
    create(Array const&)
    create(Array<Byte> &&)
    createFromFile(class StringView { ... })
    operator[](size_t const)
    operator[](size_t const)
    data()
    data()
    asArray()
    empty()
    isEmpty()
    size()
    size_bytes()
    capacity()
    reserve(typedef unsigned long long size_t)
    resize(typedef unsigned long long size_t)
    shrink_to_fit()
    clear()
    release()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    append(void const *, typedef unsigned long long size_t)
    save(class StringView { ... })
    md5()
    base64()
    base64Str()
    base64(basic_string&)
    base64(String&)
s3d::Array<s3d::Byte, std::allocator<s3d::Byte>>
s3d::NamedParameter<s3d::Arg::reserve_tag, unsigned long long>
s3d::MD5Value
    asStdString()
    asString()
    hash()
s3d::YesNo<s3d::Lossless_tag>
s3d::Lossless_tag
s3d::YesNo<s3d::InvertColor_tag>
s3d::InvertColor_tag
s3d::YesNo<s3d::AllowScaleUp_tag>
s3d::AllowScaleUp_tag
s3d::Quad
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(position_type const&, position_type const&, position_type const&, position_type const&)
    set(Quad const&)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D position_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D position_type)
    stretched(typedef double value_type)
    rotatedAt(typedef double value_type, typedef double value_type, typedef double value_type)
    rotatedAt(typedef Vector2D position_type, typedef double value_type)
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scale(double)
    scale(double, double)
    scale(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaleAt(struct Vector2D<Type = double> { ... }, double)
    scaleAt(struct Vector2D<Type = double> { ... }, double, double)
    scaleAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    side(typedef unsigned long long size_t)
    triangle(typedef unsigned long long size_t)
    area()
    perimeter()
    boundingRect()
    calculateBuffer(double)
    calculateRoundBuffer(double)
    outline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    outline(double, double)
    asPolygon()
    lerp(Quad const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    paintFrame(Image&, typedef int int32, Color const&)
    overwriteFrame(Image&, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, double, ColorF const&)
    operator()(Texture const&)
    operator()(TextureRegion const&)
s3d::LineString
    LineString(Iterator, Iterator, allocator_type const&)
    operator=(Array const&)
    operator=(Array const&)
    operator=(Array<Vec2> &&)
    operator=(LineString const&)
    operator=(LineString &&)
    asArray()
    assign(Iterator, Iterator)
    assign(typedef unsigned long long size_type, value_type const&)
    assign(class initializer_list<_Elem = s3d::Vector2D<double>> { ... })
    assign(Array const&)
    assign(Array const&)
    assign(Array<Vec2> &&)
    assign(LineString const&)
    assign(LineString &&)
    get_allocator()
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    push_front(value_type const&)
    push_back(value_type const&)
    pop_front()
    pop_front_N(typedef unsigned long long size_t)
    pop_back()
    pop_back_N(typedef unsigned long long size_t)
    operator<<(value_type const&)
    emplace(typedef _Vector_const_iterator const_iterator, Args &&...)
    emplace_back(Args &&...)
    front()
    front()
    back()
    back()
    swap(LineString&)
    data()
    data()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    empty()
    isEmpty()
    size_bytes()
    size()
    max_size()
    reserve(typedef unsigned long long size_t)
    capacity()
    shrink_to_fit()
    clear()
    release()
    insert(typedef _Vector_const_iterator const_iterator, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, typedef unsigned long long size_t, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, Iterator, Iterator)
    insert(typedef _Vector_const_iterator const_iterator, class initializer_list<_Elem = s3d::Vector2D<double>> { ... })
    erase(typedef _Vector_const_iterator const_iterator)
    erase(typedef _Vector_const_iterator const_iterator, typedef _Vector_const_iterator const_iterator)
    resize(typedef unsigned long long size_t)
    resize(typedef unsigned long long size_t, value_type const&)
    all(Fty)
    any(Fty)
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    choice(Int)
    choice(Size_t, URBG &&)
    count(value_type const&)
    count_if(Fty)
    fill(value_type const&)
    join(class StringView { ... }, class StringView { ... }, class StringView { ... })
    none(Fty)
    append(Array const&)
    append(LineString const&)
    remove(value_type const&)
    remove_at(typedef unsigned long long size_t)
    remove_if(Fty)
    reverse()
    reversed()
    reversed()
    shuffle()
    shuffle(URBG &&)
    slice(typedef unsigned long long size_t)
    slice(typedef unsigned long long size_t, typedef unsigned long long size_t)
    unique_consecutive()
    uniqued_consecutive()
    uniqued_consecutive()
    num_points()
    num_lines(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    line(typedef unsigned long long size_t, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    normalAtPoint(typedef unsigned long long size_t, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    normalAtLine(typedef unsigned long long size_t, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    movedBy(double, double)
    movedBy(double, double)
    movedBy(struct Vector2D<Type = double> { ... })
    movedBy(struct Vector2D<Type = double> { ... })
    moveBy(double, double)
    moveBy(struct Vector2D<Type = double> { ... })
    scaled(double)
    scaled(double)
    scaled(double, double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scaled(struct Vector2D<Type = double> { ... })
    scale(double)
    scale(double, double)
    scale(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaleAt(struct Vector2D<Type = double> { ... }, double)
    scaleAt(struct Vector2D<Type = double> { ... }, double, double)
    scaleAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    computeBoundingRect()
    simplified(double, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    densified(double, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    catmullRom(typedef int int32)
    catmullRom(struct YesNo<Tag = s3d::CloseRing_tag> { ... }, typedef int int32)
    calculateLength(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    calculatePointFromOrigin(double, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    extractLineString(double, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    extractLineString(double, double, struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    computeNormals(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    calculateBuffer(double, typedef int int32)
    calculateBufferClosed(double, typedef int int32)
    calculateRoundBuffer(double, typedef int int32)
    calculateRoundBufferClosed(double, typedef int int32)
    asSpline(struct YesNo<Tag = s3d::CloseRing_tag> { ... })
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    paint(Image&, Color const&)
    paint(Image&, typedef int int32, Color const&)
    paintClosed(Image&, Color const&)
    paintClosed(Image&, typedef int int32, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwriteClosed(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwriteClosed(Image&, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(double, ColorF const&)
    draw(double, Array const&)
    draw(LineStyle const&, double, ColorF const&)
    drawClosed(ColorF const&)
    drawClosed(double, ColorF const&)
    drawClosed(double, Array const&)
    drawClosed(LineStyle const&, double, ColorF const&)
s3d::Array<s3d::Point, std::allocator<s3d::Point>>
s3d::YesNo<s3d::CloseRing_tag>
s3d::CloseRing_tag
s3d::Spline2D
    size()
    isEmpty()
    isRing()
    clear()
    swap(Spline2D&)
    fastBoundingRect(typedef unsigned long long size_t)
    boundingRect(typedef unsigned long long size_t)
    length(typedef unsigned long long size_t, double)
    length(typedef unsigned long long size_t, double, double, double)
    position(typedef unsigned long long size_t, double)
    position(struct SplineIndex { ... })
    velocity(typedef unsigned long long size_t, double)
    velocity(struct SplineIndex { ... })
    acceleration(typedef unsigned long long size_t, double)
    acceleration(struct SplineIndex { ... })
    curvature(typedef unsigned long long size_t, double)
    curvature(struct SplineIndex { ... })
    findNearest(struct Vector2D<Type = double> { ... })
    findSelfIntersections(double)
    findIntersections(Spline2D const&, double)
    advance(struct SplineIndex { ... }, double)
    advanceWrap(struct SplineIndex { ... }, double)
    advanceMirror(struct SplineIndex { ... }, double, int32&)
    asLineString(typedef int int32)
    calculateRoundBuffer(double, typedef int int32, typedef int int32)
    draw(ColorF const&, typedef int int32)
    draw(double, ColorF const&, typedef int int32)
    draw(double, class function<_Fty = ColorF (*)()> { ... }, typedef int int32)
    draw(LineStyle const&, double, ColorF const&, typedef int int32)
s3d::SplineIndex
s3d::Array<std::pair<s3d::SplineIndex, s3d::SplineIndex>, std::allocator<std::pair<s3d::SplineIndex, s3d::SplineIndex>>>
s3d::LineStyle
    hasSquareCap()
    hasRoundCap()
    hasNoCap()
    hasSquareDot()
    hasRoundDot()
s3d::Array<s3d::Spline2D::CSpline2, std::allocator<s3d::Spline2D::CSpline2>>
s3d::Optional<s3d::Array<s3d::Vector2D<double>, std::allocator<s3d::Vector2D<double>>>>
s3d::Optional<Type>
    Optional<Type>(Optional<U> &&)
    operator=(typedef nullopt_t None_t)
    operator=(const Optional<Type>&)
    operator=(Optional<Type> &&)
    operator=(U &&)
    operator=(const Optional<type-parameter-1-0>&)
    operator=(Optional<U> &&)
    swap(Optional<Type>&)
    value_or_construct(Args &&...)
    value_or_construct(Args &&...)
    value_or_eval(Fty &&)
    value_or_eval(Fty &&)
    then(Fty &&)
    then(Fty &&)
    map(Fty)
    map(Fty)
s3d::YesNo<s3d::Antialiased_tag>
s3d::Antialiased_tag
s3d::Array<s3d::ColorF, std::allocator<s3d::ColorF>>
s3d::TexturedQuad
    draw(ColorF const&)
    draw(double, double, ColorF const&)
    draw(Vector2D const&, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(Vector2D const&, ColorF const&)
s3d::FloatRect
s3d::TextureRegion
    region(double, double)
    region(struct Vector2D<Type = double> { ... })
    regionAt(double, double)
    regionAt(struct Vector2D<Type = double> { ... })
    stretched(double, double)
    stretched(struct Vector2D<Type = double> { ... })
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(double, double, ColorF const&)
    draw(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(double, double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(Vector2D const&, ColorF const&)
    draw(Vector2D const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(Vector2D const&, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(Vector2D const&, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawAt(Vector2D const&, ColorF const&)
    drawAt(Vector2D const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawClipped(double, double, RectF const&, ColorF const&)
    drawClipped(Vector2D const&, RectF const&, ColorF const&)
    drawAtClipped(double, double, RectF const&, ColorF const&)
    drawAtClipped(Vector2D const&, RectF const&, ColorF const&)
    mirrored()
    mirrored(bool)
    flipped()
    flipped(bool)
    scaled(double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    resized(double)
    resized(double, double)
    resized(struct Vector2D<Type = double> { ... })
    fitted(double, double, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... })
    fitted(Vector2D const&, struct YesNo<Tag = s3d::AllowScaleUp_tag> { ... })
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(Vector2D const&, double)
    rounded(double)
s3d::NamedParameter<s3d::Arg::top_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::bottom_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::left_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::right_tag, s3d::ColorF>
s3d::TexturedRoundRect
    draw(ColorF const&)
    draw(double, double, ColorF const&)
    draw(Vector2D const&, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(Vector2D const&, ColorF const&)
s3d::RoundRect
    RoundRect(X, Y, W, H, R)
    RoundRect(typedef Vector2D position_type, W, H, R)
    RoundRect(X, Y, typedef Vector2D size_type, R)
    RoundRect(typedef Vector2D position_type, S, R)
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(position_type const&, typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef double value_type, typedef double value_type, size_type const&, typedef double value_type)
    set(position_type const&, size_type const&, typedef double value_type)
    set(RectF const&, typedef double value_type)
    set(RoundRect const&)
    setPos(typedef double value_type, typedef double value_type)
    setPos(typedef Vector2D position_type)
    setCenter(typedef double value_type, typedef double value_type)
    setCenter(typedef Vector2D position_type)
    setSize(typedef double value_type, typedef double value_type)
    setSize(typedef Vector2D size_type)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(typedef Vector2D position_type)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(typedef Vector2D position_type)
    stretched(typedef double value_type)
    stretched(typedef double value_type, typedef double value_type)
    stretched(typedef Vector2D size_type)
    stretched(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    topCenter()
    bottomCenter()
    leftCenter()
    rightCenter()
    center()
    area()
    perimeter()
    horizontalAspectRatio()
    outerVertices(typedef unsigned int uint32)
    asPolygon(typedef unsigned int uint32)
    lerp(RoundRect const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    paintFrame(Image&, typedef int int32, typedef int int32, Color const&)
    overwriteFrame(Image&, typedef int int32, typedef int int32, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, ColorF const&)
    drawFrame(double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, double, ColorF const&)
    drawFrame(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    drawShadow(Vector2D const&, double, double, ColorF const&, bool)
    operator()(Texture const&)
    operator()(TextureRegion const&)
s3d::ImageROI
    isEmpty()
    negate()
    grayscale()
    sepia()
    posterize(typedef int int32)
    brighten(typedef int int32)
    mirror()
    flip()
    rotate180()
    gammaCorrect(double)
    threshold(typedef unsigned char uint8, struct YesNo<Tag = s3d::InvertColor_tag> { ... })
    mosaic(typedef int int32)
    mosaic(typedef int int32, typedef int int32)
    spread(typedef int int32)
    spread(typedef int int32, typedef int int32)
    blur(typedef int int32, enum class BorderType: uint32 {...})
    blur(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    medianBlur(typedef int int32)
    gaussianBlur(typedef int int32, enum class BorderType: uint32 {...})
    gaussianBlur(typedef int int32, typedef int int32, enum class BorderType: uint32 {...})
    dilate(typedef int int32)
    erode(typedef int int32)
    paint(Image&, typedef int int32, typedef int int32, Color const&)
    paint(Image&, Point const&, Color const&)
    stamp(Image&, typedef int int32, typedef int int32, Color const&)
    stamp(Image&, Point const&, Color const&)
    overwrite(Image&, typedef int int32, typedef int int32)
    overwrite(Image&, struct Point { ... })
    paintAt(Image&, typedef int int32, typedef int int32, Color const&)
    paintAt(Image&, Point const&, Color const&)
    stampAt(Image&, typedef int int32, typedef int int32, Color const&)
    stampAt(Image&, Point const&, Color const&)
    overwriteAt(Image&, typedef int int32, typedef int int32)
    overwriteAt(Image&, struct Point { ... })
s3d::ImageConstROI
    isEmpty()
    paint(Image&, typedef int int32, typedef int int32, Color const&)
    paint(Image&, Point const&, Color const&)
    stamp(Image&, typedef int int32, typedef int int32, Color const&)
    stamp(Image&, Point const&, Color const&)
    overwrite(Image&, typedef int int32, typedef int int32)
    overwrite(Image&, struct Point { ... })
    paintAt(Image&, typedef int int32, typedef int int32, Color const&)
    paintAt(Image&, Point const&, Color const&)
    stampAt(Image&, typedef int int32, typedef int int32, Color const&)
    stampAt(Image&, Point const&, Color const&)
    overwriteAt(Image&, typedef int int32, typedef int int32)
    overwriteAt(Image&, struct Point { ... })
s3d::YesNo<s3d::AllowHoles_tag>
s3d::AllowHoles_tag
s3d::MultiPolygon
    MultiPolygon(Iterator, Iterator, allocator_type const&)
    operator=(Array const&)
    operator=(Array<value_type> &&)
    operator=(MultiPolygon const&)
    operator=(MultiPolygon &&)
    asArray()
    assign(Iterator, Iterator)
    assign(typedef unsigned long long size_type, value_type const&)
    assign(class initializer_list<_Elem = s3d::Polygon> { ... })
    assign(Array const&)
    assign(Array<Polygon> &&)
    assign(MultiPolygon const&)
    assign(MultiPolygon &&)
    get_allocator()
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    push_front(value_type const&)
    push_front(value_type &&)
    push_back(value_type const&)
    push_back(value_type &&)
    pop_front()
    pop_front_N(typedef unsigned long long size_t)
    pop_back()
    pop_back_N(typedef unsigned long long size_t)
    operator<<(value_type const&)
    operator<<(value_type &&)
    emplace(typedef _Vector_const_iterator const_iterator, Args &&...)
    emplace_back(Args &&...)
    front()
    front()
    back()
    back()
    swap(MultiPolygon&)
    data()
    data()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    empty()
    isEmpty()
    size_bytes()
    size()
    max_size()
    reserve(typedef unsigned long long size_t)
    capacity()
    shrink_to_fit()
    clear()
    release()
    insert(typedef _Vector_const_iterator const_iterator, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, value_type &&)
    insert(typedef _Vector_const_iterator const_iterator, typedef unsigned long long size_t, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, Iterator, Iterator)
    insert(typedef _Vector_const_iterator const_iterator, class initializer_list<_Elem = s3d::Polygon> { ... })
    erase(typedef _Vector_const_iterator const_iterator)
    erase(typedef _Vector_const_iterator const_iterator, typedef _Vector_const_iterator const_iterator)
    resize(typedef unsigned long long size_t)
    resize(typedef unsigned long long size_t, value_type const&)
    all(Fty)
    any(Fty)
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    choice(Int)
    choice(Size_t, URBG &&)
    count_if(Fty)
    join(class StringView { ... }, class StringView { ... }, class StringView { ... })
    none(Fty)
    append(Array const&)
    append(MultiPolygon const&)
    remove_at(typedef unsigned long long size_t)
    remove_if(Fty)
    reverse()
    reversed()
    reversed()
    shuffle()
    shuffle(URBG &&)
    slice(typedef unsigned long long size_t)
    slice(typedef unsigned long long size_t, typedef unsigned long long size_t)
    movedBy(double, double)
    movedBy(double, double)
    movedBy(struct Vector2D<Type = double> { ... })
    movedBy(struct Vector2D<Type = double> { ... })
    moveBy(double, double)
    moveBy(struct Vector2D<Type = double> { ... })
    rotated(double)
    rotated(double)
    rotatedAt(Vector2D const&, double)
    rotatedAt(Vector2D const&, double)
    rotate(double)
    rotateAt(Vector2D const&, double)
    transformed(double, double, Vector2D const&)
    transformed(double, double, Vector2D const&)
    transform(double, double, Vector2D const&)
    scaled(double)
    scaled(double)
    scaled(double, double)
    scaled(double, double)
    scaled(struct Vector2D<Type = double> { ... })
    scaled(struct Vector2D<Type = double> { ... })
    scale(double)
    scale(double, double)
    scale(struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, double, double)
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaledAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    scaleAt(struct Vector2D<Type = double> { ... }, double)
    scaleAt(struct Vector2D<Type = double> { ... }, double, double)
    scaleAt(struct Vector2D<Type = double> { ... }, struct Vector2D<Type = double> { ... })
    area()
    perimeter()
    centroid()
    computeConvexHull()
    computeBoundingRect()
    simplified(double)
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    paint(Image&, double, double, Color const&)
    paint(Image&, Vector2D const&, Color const&)
    overwrite(Image&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, double, double, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    overwrite(Image&, Vector2D const&, Color const&, struct YesNo<Tag = s3d::Antialiased_tag> { ... })
    draw(ColorF const&)
    draw(double, double, ColorF const&)
    draw(Vector2D const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, double, double, ColorF const&)
    drawFrame(Vector2D const&, double, ColorF const&)
    drawWireframe(double, ColorF const&)
    drawWireframe(double, double, double, ColorF const&)
    drawWireframe(Vector2D const&, double, ColorF const&)
    drawTransformed(double, Vector2D const&, ColorF const&)
    drawTransformed(double, double, Vector2D const&, ColorF const&)
s3d::Array<s3d::Polygon, std::allocator<s3d::Polygon>>
s3d::Array<s3d::Image, std::allocator<s3d::Image>>
s3d::TextureFormat
    value()
    name()
    DXGIFormat()
    GLInternalFormat()
    GLFormat()
    GLType()
    WGPUFormat()
    pixelSize()
    num_channels()
    isSRGB()
s3d::YesNo<s3d::HasDepth_tag>
s3d::HasDepth_tag
s3d::YesNo<s3d::HasMipMap_tag>
s3d::HasMipMap_tag
s3d::Grid<float, std::allocator<float>>
s3d::Grid<s3d::Vector2D<float>, std::allocator<s3d::Vector2D<float>>>
s3d::Grid<s3d::Vector4D<float>, std::allocator<s3d::Vector4D<float>>>
s3d::Ellipse
    set(typedef double value_type, typedef double value_type, typedef double size_type, typedef double size_type)
    set(typedef double value_type, typedef double value_type, typedef double size_type)
    set(position_type const&, typedef double size_type)
    set(position_type const&, typedef double size_type, typedef double size_type)
    set(typedef double value_type, typedef double value_type, Vector2D const&)
    set(position_type const&, Vector2D const&)
    set(Circle const&)
    set(RectF const&)
    set(Ellipse const&)
    setCenter(typedef double value_type, typedef double value_type)
    setCenter(position_type const&)
    setPos(typedef double value_type, typedef double value_type)
    setPos(position_type const&)
    setAxes(typedef double value_type)
    setAxes(typedef double size_type, typedef double size_type)
    setAxes(Vector2D const&)
    movedBy(typedef double value_type, typedef double value_type)
    movedBy(position_type const&)
    moveBy(typedef double value_type, typedef double value_type)
    moveBy(position_type const&)
    stretched(typedef double value_type)
    stretched(double, double)
    scaled(double)
    scaled(double, double)
    top()
    right()
    bottom()
    left()
    horizontalDiameter()
    verticalDiameter()
    area()
    boundingCircle()
    boundingRect()
    asPolygon(typedef unsigned int uint32)
    lerp(Ellipse const&, double)
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    contains(const Shape2DType&)
    leftClicked()
    leftPressed()
    leftReleased()
    rightClicked()
    rightPressed()
    rightReleased()
    mouseOver()
    paint(Image&, Color const&)
    overwrite(Image&, Color const&)
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&)
    drawFrame(double, ColorF const&)
    drawFrame(double, double, ColorF const&)
s3d::NamedParameter<s3d::Arg::topLeft_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::bottomRight_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::topRight_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::bottomLeft_tag, s3d::ColorF>
s3d::NamedParameter<s3d::Arg::top_tag, double>
s3d::NamedParameter<s3d::Arg::right_tag, double>
s3d::NamedParameter<s3d::Arg::bottom_tag, double>
s3d::NamedParameter<s3d::Arg::left_tag, double>
s3d::Optional<s3d::Vector2D<double>>
s3d::TexturedCircle
    draw(ColorF const&)
    draw(double, double, ColorF const&)
    draw(Vector2D const&, ColorF const&)
s3d::WindowState
s3d::Uncopyable
    operator=(Uncopyable const&)
s3d::Recursive_tag
s3d::YesNo<s3d::Recursive_tag>
s3d::AllowUndo_tag
s3d::YesNo<s3d::AllowUndo_tag>
s3d::Fixed_tag
s3d::YesNo<s3d::Fixed_tag>
s3d::StartImmediately_tag
s3d::YesNo<s3d::StartImmediately_tag>
s3d::SortByDistance_tag
s3d::YesNo<s3d::SortByDistance_tag>
s3d::AllowFlip_tag
s3d::YesNo<s3d::AllowFlip_tag>
s3d::Precompute_tag
s3d::YesNo<s3d::Precompute_tag>
s3d::AllowExceptions_tag
s3d::YesNo<s3d::AllowExceptions_tag>
s3d::CrossFade_tag
s3d::YesNo<s3d::CrossFade_tag>
s3d::OverwriteAlpha_tag
s3d::YesNo<s3d::OverwriteAlpha_tag>
s3d::Loop_tag
s3d::YesNo<s3d::Loop_tag>
s3d::FlipY_tag
s3d::YesNo<s3d::FlipY_tag>
s3d::OneSided_tag
s3d::YesNo<s3d::OneSided_tag>
s3d::EnableCollision_tag
s3d::YesNo<s3d::EnableCollision_tag>
s3d::TransformCursor_tag
s3d::YesNo<s3d::TransformCursor_tag>
s3d::PreserveWhitespace_tag
s3d::YesNo<s3d::PreserveWhitespace_tag>
s3d::MapAll_tag
s3d::YesNo<s3d::MapAll_tag>
s3d::Dither_tag
s3d::YesNo<s3d::Dither_tag>
s3d::HasAlpha_tag
s3d::YesNo<s3d::HasAlpha_tag>
s3d::Centering_tag
s3d::YesNo<s3d::Centering_tag>
s3d::UseFallback_tag
s3d::YesNo<s3d::UseFallback_tag>
s3d::HasColor_tag
s3d::YesNo<s3d::HasColor_tag>
s3d::HasHeader_tag
s3d::YesNo<s3d::HasHeader_tag>
s3d::HasDiffuseTexture_tag
s3d::YesNo<s3d::HasDiffuseTexture_tag>
s3d::IncludeParamNames_tag
s3d::YesNo<s3d::IncludeParamNames_tag>
s3d::Verbose_tag
s3d::YesNo<s3d::Verbose_tag>
s3d::Ligature_tag
s3d::YesNo<s3d::Ligature_tag>
s3d::NamedParameterHelper<Tag>
    operator=(Type &&)
    operator()(Args &&...)
    operator=(reference_wrapper<type-parameter-1-0>)
    operator()(reference_wrapper<type-parameter-1-0>)
s3d::NamedParameterHelper<s3d::Arg::radix_tag>
s3d::NamedParameterHelper<s3d::Arg::generator_tag>
s3d::NamedParameterHelper<s3d::Arg::indexedGenerator_tag>
s3d::NamedParameterHelper<s3d::Arg::reserve_tag>
s3d::NamedParameterHelper<s3d::Arg::generator0_1_tag>
s3d::NamedParameterHelper<s3d::Arg::r_tag>
s3d::NamedParameterHelper<s3d::Arg::theta_tag>
s3d::NamedParameterHelper<s3d::Arg::phi_tag>
s3d::NamedParameterHelper<s3d::Arg::y_tag>
s3d::NamedParameterHelper<s3d::Arg::angle_tag>
s3d::NamedParameterHelper<s3d::Arg::direction_tag>
s3d::NamedParameterHelper<s3d::Arg::center_tag>
s3d::NamedParameterHelper<s3d::Arg::topLeft_tag>
s3d::NamedParameterHelper<s3d::Arg::topRight_tag>
s3d::NamedParameterHelper<s3d::Arg::bottomLeft_tag>
s3d::NamedParameterHelper<s3d::Arg::bottomRight_tag>
s3d::NamedParameterHelper<s3d::Arg::topCenter_tag>
s3d::NamedParameterHelper<s3d::Arg::bottomCenter_tag>
s3d::NamedParameterHelper<s3d::Arg::leftCenter_tag>
s3d::NamedParameterHelper<s3d::Arg::rightCenter_tag>
s3d::NamedParameterHelper<s3d::Arg::top_tag>
s3d::NamedParameterHelper<s3d::Arg::bottom_tag>
s3d::NamedParameterHelper<s3d::Arg::left_tag>
s3d::NamedParameterHelper<s3d::Arg::right_tag>
s3d::NamedParameterHelper<s3d::Arg::code_tag>
s3d::NamedParameterHelper<s3d::Arg::sampleRate_tag>
s3d::NamedParameterHelper<s3d::Arg::loopBegin_tag>
s3d::NamedParameterHelper<s3d::Arg::loopEnd_tag>
s3d::KahanSummation<Float>
    operator+=(Float)
    value()
s3d::Array<bool, std::allocator<bool>>
    Array(InputIt, InputIt)
    Array(unsigned long long, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_)
    Array(unsigned long long, typedef NamedParameter<s3d::Arg::indexedGenerator_tag, type-parameter-0-0> indexedGenerator_)
    operator=(Array const&)
    operator=(Array<bool> &&)
    emplace(class _String_const_iterator<_Mystr = std::_String_val<std::_Simple_types<bool>>> { ... }, Args &&...)
    emplace_back(Args &&...)
    swap(Array&)
    isEmpty()
    release()
    size_bytes()
    push_front(bool)
    pop_front()
    pop_front_N(size_t const)
    pop_back_N(size_t const)
    operator[](size_t const)
    operator[](size_t const)
    at(size_t const)
    at(size_t const)
    operator<<(bool)
    operator>>(Fty)
    all(Fty)
    any(Fty)
    append(Array const&)
    choice()
    choice()
    choice(URBG &&)
    choice(URBG &&)
    choice(const Int)
    choice(const Size_t, URBG &&)
    chunk(size_t const)
    contains(bool const&)
    contains_if(Fty)
    count(bool const&)
    count_if(Fty)
    each(Fty)
    each(Fty)
    each_index(Fty)
    each_index(Fty)
    fetch(typedef unsigned long long size_t, U &&)
    fill(bool const&)
    filter(Fty)
    in_groups(typedef unsigned long long size_t)
    includes(bool const&)
    includes_if(Fty)
    isSorted()
    join(StringView const, StringView const, StringView const)
    map(Fty)
    none(Fty)
    partition(Fty)
    reduce(Fty, R)
    reduce1(Fty)
    remove(bool const&)
    removed(bool const&)
    removed(bool const&)
    remove_at(size_t const)
    removed_at(size_t const)
    removed_at(size_t const)
    remove_if(Fty)
    removed_if(Fty)
    removed_if(Fty)
    replace(bool const&, bool const&)
    replaced(bool const&, bool const&)
    replaced(bool const&, bool const&)
    replace_if(Fty, bool const&)
    replaced_if(Fty, bool const&)
    replaced_if(Fty, bool const&)
    reverse()
    reversed()
    reversed()
    reverse_each(Fty)
    reverse_each(Fty)
    rotate(long long)
    rotated(long long)
    rotated(long long)
    rsort()
    rsorted()
    rsorted()
    shuffle()
    shuffle(URBG &&)
    shuffled()
    shuffled()
    shuffled(URBG &&)
    shuffled(URBG &&)
    slice(typedef unsigned long long size_t)
    slice(typedef unsigned long long size_t, typedef unsigned long long size_t)
    sort()
    stable_partition(Fty)
    stable_sort()
    sort_by(Fty)
    stable_sort_by(Fty)
    sorted()
    stable_sorted()
    sorted()
    stable_sorted()
    sorted_by(Fty)
    stable_sorted_by(Fty)
    sorted_by(Fty)
    stable_sorted_by(Fty)
    take(size_t const)
    take_while(Fty)
    stable_unique()
    stable_uniqued()
    stable_uniqued()
    sort_and_unique()
    sorted_and_uniqued()
    sorted_and_uniqued()
    unique_consecutive()
    uniqued_consecutive()
    uniqued_consecutive()
    values_at(class initializer_list<_Elem = unsigned long long> { ... })
    Generate(unsigned long long const, Fty)
    IndexedGenerate(unsigned long long const, Fty)
s3d::Array<s3d::Array<bool, std::allocator<bool>>, std::allocator<s3d::Array<bool, std::allocator<bool>>>>
s3d::Step<T, N, S>
    begin()
    end()
    startValue()
    count()
    step()
    isEmpty()
    asArray()
    operator>>(Fty)
    count_if(Fty)
    each(Fty)
    each_index(Fty)
    filter(Fty)
    include(value_type const&)
    include_if(Fty)
    join(class StringView { ... }, class StringView { ... }, class StringView { ... })
    map(Fty)
    reduce(Fty, R)
    reduce1(Fty)
    sum()
    take(typedef unsigned long long size_t)
    take_while(Fty)
    parallel_count_if(Fty, typedef unsigned long long size_t)
    parallel_each(Fty, typedef unsigned long long size_t)
s3d::Point3D
    Point3D(IntegerX, IntegerY, IntegerZ)
    Point3D(X, Y, Z)
    elem(typedef unsigned long long size_t)
    getPointer()
    getPointer()
    operator=(Point3D const&)
    operator+()
    operator-()
    operator+(struct Point3D { ... })
    operator-(struct Point3D { ... })
    operator+(Vector3D<type-parameter-0-0>)
    operator-(Vector3D<type-parameter-0-0>)
    operator*(typedef int int32)
    operator*(float)
    operator*(double)
    operator*(struct Point3D { ... })
    operator*(Vector3D<type-parameter-0-0>)
    operator/(typedef int int32)
    operator/(float)
    operator/(double)
    operator/(struct Point3D { ... })
    operator%(typedef int int32)
    operator%(struct Point3D { ... })
    operator/(Vector3D<type-parameter-0-0>)
    operator+=(struct Point3D { ... })
    operator-=(struct Point3D { ... })
    operator*=(typedef int int32)
    operator/=(typedef int int32)
    operator%=(typedef int int32)
    isZero()
    minComponent()
    maxComponent()
    clear()
    set(typedef int int32, typedef int int32, typedef int int32)
    set(struct Point3D { ... })
    movedBy(typedef int int32, typedef int int32, typedef int int32)
    movedBy(struct Point3D { ... })
    movedBy(Vector3D<type-parameter-0-0>)
    moveBy(typedef int int32, typedef int int32, typedef int int32)
    moveBy(struct Point3D { ... })
    length()
    lengthSq()
    manhattanLength()
    manhattanDistanceFrom(typedef int int32, typedef int int32, typedef int int32)
    manhattanDistanceFrom(struct Point3D { ... })
    distanceFrom(double, double, double)
    distanceFrom(struct Point3D { ... })
    distanceFrom(Vector3D<type-parameter-0-0>)
    distanceFromSq(double, double, double)
    distanceFromSq(struct Point3D { ... })
    distanceFromSq(Vector3D<type-parameter-0-0>)
    getMidpoint(struct Point3D { ... })
    getMidpoint(Vector3D<type-parameter-0-0>)
    lerp(struct Point3D { ... }, double)
    lerp(Vector3D<type-parameter-0-0>, double)
    hash()
    Zero()
    One()
    All(typedef int32 value_type)
    UnitX()
    UnitY()
    UnitZ()
s3d::Vector3D<float>
s3d::Bezier2
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    getPos(double const)
    getTangent(double)
    getLineString(int32 const)
    getLineString(double, double, typedef int int32)
    boundingRect()
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    paint(Image&, Color const&)
    paint(Image&, typedef int int32, Color const&)
    overwrite(Image&, Color const&, typedef YesNo Antialiased)
    overwrite(Image&, typedef int int32, Color const&, typedef YesNo Antialiased)
    draw(ColorF const&, typedef int int32)
    draw(double, ColorF const&, typedef int int32)
    draw(LineStyle const&, double, ColorF const&, typedef int int32)
s3d::Bezier3
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    getPos(double)
    getTangent(double)
    getLineString(typedef int int32)
    getLineString(double, double, typedef int int32)
    boundingRect()
    hash()
    intersects(const Shape2DType&)
    intersectsAt(const Shape2DType&)
    paint(Image&, Color const&)
    paint(Image&, typedef int int32, Color const&)
    overwrite(Image&, Color const&, typedef YesNo Antialiased)
    overwrite(Image&, typedef int int32, Color const&, typedef YesNo Antialiased)
    draw(ColorF const&, typedef int int32)
    draw(double, ColorF const&, typedef int int32)
    draw(LineStyle const&, double, ColorF const&, typedef int int32)
s3d::CommonFloat<T, U>
s3d::Box
    Box(Arithmetic)
    Box(W, H, D)
    Box(X, Y, Z, S)
    Box(X, Y, Z, W, H, D)
    Box(X, Y, Z, Vec3 const&)
    Box(Vec3 const&, Arithmetic)
    Box(Vec3 const&, W, H, D)
    Box(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector3D<double>> { ... }, Arithmetic)
    Box(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector3D<double>> { ... }, W, H, D)
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setSize(typedef double value_type, typedef double value_type, typedef double value_type)
    setSize(typedef Vec3 size_type)
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 size_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 size_type)
    stretched(double)
    stretched(double, double, double)
    stretched(typedef Vector3D Vec3)
    scaled(double)
    scaled(double, double, double)
    scaled(typedef Vector3D Vec3)
    hasVolume()
    getCorners()
    lerp(Box const&, double)
    oriented(Quaternion const&)
    topCenter()
    bottomCenter()
    intersects(Vec3 const&)
    intersects(Triangle3D const&)
    intersects(Sphere const&)
    intersects(Box const&)
    intersects(OrientedBox const&)
    intersects(ViewFrustum const&)
    intersects(Ray const&)
    contains(Vec3 const&)
    contains(Triangle3D const&)
    contains(Sphere const&)
    contains(Box const&)
    contains(OrientedBox const&)
    contains(ViewFrustum const&)
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(TextureRegion const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Quaternion const&, TextureRegion const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, TextureRegion const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(TextureRegion const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Quaternion const&, TextureRegion const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, TextureRegion const&, PhongMaterial const&)
    drawFrame(ColorF const&)
    FromPoints(Vec3 const&, Vec3 const&)
s3d::NamedParameter<s3d::Arg::bottomCenter_tag, s3d::Vector3D<double>>
s3d::OrientedBox
    OrientedBox(Arithmetic, struct Quaternion { ... })
    OrientedBox(W, H, D, struct Quaternion { ... })
    OrientedBox(X, Y, Z, S, struct Quaternion { ... })
    OrientedBox(X, Y, Z, W, H, D, struct Quaternion { ... })
    OrientedBox(X, Y, Z, Vec3 const&, struct Quaternion { ... })
    OrientedBox(Vec3 const&, Arithmetic, struct Quaternion { ... })
    OrientedBox(Vec3 const&, W, H, D, struct Quaternion { ... })
    OrientedBox(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector3D<double>> { ... }, Arithmetic, struct Quaternion { ... })
    OrientedBox(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector3D<double>> { ... }, W, H, D, struct Quaternion { ... })
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setSize(typedef double value_type, typedef double value_type, typedef double value_type)
    setSize(typedef Vec3 size_type)
    setOrientation(struct Quaternion { ... })
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 size_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 size_type)
    stretched(double)
    stretched(double, double, double)
    stretched(typedef Vector3D Vec3)
    scaled(double)
    scaled(double, double, double)
    scaled(typedef Vector3D Vec3)
    hasVolume()
    getCorners()
    lerp(OrientedBox const&, double)
    intersects(Vec3 const&)
    intersects(Triangle3D const&)
    intersects(Sphere const&)
    intersects(Box const&)
    intersects(OrientedBox const&)
    intersects(ViewFrustum const&)
    intersects(Ray const&)
    contains(Vec3 const&)
    contains(Triangle3D const&)
    contains(Sphere const&)
    contains(Box const&)
    contains(OrientedBox const&)
    contains(ViewFrustum const&)
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(TextureRegion const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Quaternion const&, TextureRegion const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, TextureRegion const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(TextureRegion const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Quaternion const&, TextureRegion const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, TextureRegion const&, PhongMaterial const&)
    drawFrame(ColorF const&)
s3d::Quaternion
    Quaternion(X, Y, Z, W)
    Quaternion(Float3 const&, Arithmetic)
    operator=(Quaternion const&)
    operator=(union __m128 { ... })
    operator=(struct SIMD_Float4 { ... })
    operator*(struct Quaternion { ... })
    operator*=(struct Quaternion { ... })
    operator*(typedef Vector3D Float3)
    toFloat4()
    elem(typedef unsigned long long size_t)
    getX()
    getY()
    getZ()
    getW()
    setX(float)
    setY(float)
    setZ(float)
    setW(float)
    set(float, float, float, float)
    isZero()
    isIdentity()
    hasNaN()
    hasInf()
    normalize()
    normalized()
    conjugate()
    conjugated()
    inverse()
    slerp(struct Quaternion { ... }, Float)
    toAxisAngle()
    Identity()
    Zero()
    FromUnitVectors(Vec3 const&, Vec3 const&)
    FromUnitVectorPairs(pair const&, pair const&)
    RollPitchYaw(X, Y, Z)
    RollPitchYaw(typedef Vector3D Float3)
    RotationNormal(typedef Vector3D Float3, Arithmetic)
    RotationAxis(typedef Vector3D Float3, Arithmetic)
    RotateX(Arithmetic)
    RotateY(Arithmetic)
    RotateZ(Arithmetic)
    Rotate(Mat4x4 const&)
s3d::SIMD_Float4
    SIMD_Float4(X, Y, Z, W)
    SIMD_Float4(const Vector2D<type-parameter-0-0>&, Z, W)
    SIMD_Float4(const Vector2D<type-parameter-0-0>&, const Vector2D<type-parameter-0-1>&)
    SIMD_Float4(const Vector3D<type-parameter-0-0>&, W)
    operator=(SIMD_Float4 const&)
    operator=(union __m128 { ... })
    operator=(typedef Vector3D Float3)
    operator+()
    operator-()
    operator+(struct SIMD_Float4 { ... })
    operator-(struct SIMD_Float4 { ... })
    operator*(float)
    operator*(struct SIMD_Float4 { ... })
    operator/(float)
    operator/(struct SIMD_Float4 { ... })
    operator+=(struct SIMD_Float4 { ... })
    operator-=(struct SIMD_Float4 { ... })
    operator*=(float)
    operator*=(struct SIMD_Float4 { ... })
    operator/=(float)
    operator/=(struct SIMD_Float4 { ... })
    toFloat4()
    elem(typedef unsigned long long size_t)
    getX()
    getY()
    getZ()
    getW()
    setX(float)
    setY(float)
    setZ(float)
    setW(float)
    set(float, float, float, float)
    set(typedef Vector2D Float2, typedef Vector2D Float2)
    set(typedef Vector3D Float3, float)
    isZero()
    hasNaN()
    hasInf()
    length()
    lengthSq()
    reciprocal()
    fastReciprocal()
    sqrt()
    fastSqrt()
    rsqrt()
    fastRsqrt()
    normalize()
    normalized()
    lerp(struct SIMD_Float4 { ... }, float)
    xy()
    xyz()
    Zero()
    One()
    All(float)
s3d::Mat4x4
    operator+()
    operator-()
    operator+(struct Mat4x4 { ... })
    operator-(struct Mat4x4 { ... })
    operator*(float)
    operator*(struct Mat4x4 { ... })
    operator/(float)
    operator+=(struct Mat4x4 { ... })
    operator-=(struct Mat4x4 { ... })
    operator*=(float)
    operator*=(struct Mat4x4 { ... })
    operator/=(float)
    hasNaN()
    isIdentity()
    decompose(Float3&, Quaternion&, Float3&)
    transposed()
    inverse()
    inverse(float&)
    determinant()
    translated(X, Y, Z)
    translated(typedef Vector3D Float3)
    scaled(Arithmetic)
    scaled(typedef Vector3D Float3)
    rotatedX(Arithmetic)
    rotatedY(Arithmetic)
    rotatedZ(Arithmetic)
    rollPitchYaw(X, Y, Z)
    rotated(typedef Vector3D Float3, Arithmetic)
    rotated(struct Quaternion { ... })
    transformPoint(typedef Vector3D Float3)
    transformPoints(Float3 *, Float3 const *, typedef unsigned long long size_t)
    transformPoints(Float3 *, typedef unsigned long long size_t, Float3 const *, typedef unsigned long long size_t, typedef unsigned long long size_t)
    Identity()
    Set(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)
    Translate(X, Y, Z)
    Translate(typedef Vector3D Float3)
    Scale(Arithmetic)
    Scale(typedef Vector3D Float3)
    Scale(Arithmetic, typedef Vector3D Float3)
    Scale(typedef Vector3D Float3, typedef Vector3D Float3)
    RotateX(Arithmetic)
    RotateY(Arithmetic)
    RotateZ(Arithmetic)
    RollPitchYaw(X, Y, Z)
    Rotate(typedef Vector3D Float3, Arithmetic)
    Rotate(typedef Vector3D Float3, Arithmetic, typedef Vector3D Float3)
    Rotate(struct Quaternion { ... })
    Rotate(struct Quaternion { ... }, typedef Vector3D Float3)
    Reflect(struct InfinitePlane { ... })
    Shadow(struct InfinitePlane { ... }, typedef Vector3D Float3)
s3d::InfinitePlane
    operator=(InfinitePlane const&)
    operator=(union __m128 { ... })
    operator=(struct SIMD_Float4 { ... })
    normal()
    intersects(Ray const&)
s3d::Optional<float>
s3d::Ray
    Ray(X, Y, Z, typedef Vector3D Float3)
    Ray(typedef Vector3D Float3, X, Y, Z)
    getOrigin()
    setOrigin(typedef Vector3D Float3)
    getDirection()
    setDirection(typedef Vector3D Float3)
    point_at(float)
    point_at(Arithmetic)
    intersects(Triangle3D const&)
    intersects(Sphere const&)
    intersects(Plane const&)
    intersects(InfinitePlane const&)
    intersects(Box const&)
    intersects(OrientedBox const&)
    intersects(ViewFrustum const&)
    intersects(Cylinder const&)
    intersects(Cone const&)
    intersectsAt(Triangle3D const&)
    intersectsAt(Sphere const&)
    intersectsAt(Plane const&)
    intersectsAt(InfinitePlane const&)
    intersectsAt(Box const&)
    intersectsAt(OrientedBox const&)
    intersectsAt(ViewFrustum const&)
    intersectsAt(Cylinder const&)
    intersectsAt(Cone const&)
s3d::Triangle3D
    set(float, float, float, float, float, float, float, float, float)
    set(Float3 const&, Float3 const&, Float3 const&)
    set(struct SIMD_Float4 { ... }, struct SIMD_Float4 { ... }, struct SIMD_Float4 { ... })
    set(Triangle3D const&)
    movedBy(float, float, float)
    movedBy(typedef Vector3D Float3)
    moveBy(float, float, float)
    moveBy(typedef Vector3D Float3)
    lerp(Triangle3D const&, double)
s3d::Sphere
    Sphere(Arithmetic)
    Sphere(X, Y, Z, R)
    Sphere(Vec3 const&, Arithmetic)
    set(typedef double value_type, typedef double value_type, typedef double size_type, typedef double size_type)
    set(typedef Vec3 position_type, typedef double size_type)
    set(Sphere const&)
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setR(typedef double value_type)
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(typedef double value_type)
    scaled(double)
    top()
    bottom()
    left()
    right()
    forward()
    backward()
    lerp(Sphere const&, double)
    intersects(Vec3 const&)
    intersects(Triangle3D const&)
    intersects(Sphere const&)
    intersects(Box const&)
    intersects(OrientedBox const&)
    intersects(ViewFrustum const&)
    intersects(Ray const&)
    contains(Vec3 const&)
    contains(Triangle3D const&)
    contains(Sphere const&)
    contains(Box const&)
    contains(OrientedBox const&)
    contains(ViewFrustum const&)
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
s3d::ViewFrustum
    getCorners()
    intersects(Vec3 const&)
    intersects(Triangle3D const&)
    intersects(Sphere const&)
    intersects(Box const&)
    intersects(OrientedBox const&)
    intersects(ViewFrustum const&)
    intersects(Ray const&)
    contains(Vec3 const&)
    contains(Triangle3D const&)
    contains(Sphere const&)
    contains(Box const&)
    contains(OrientedBox const&)
    contains(ViewFrustum const&)
    getOrigin()
    getOrientation()
    computeBoundingSphere()
    drawFrame(ColorF const&)
    getData()
s3d::BasicCamera3D
    getMat4x4()
    setSceneSize(Size const&)
    setProjection(Size const&, double, double)
    setView(Vec3 const&, Vec3 const&, Vec3 const&)
    setUpDirection(Vec3 const&)
    getSceneSize()
    getVerticalFOV()
    getNearClip()
    getEyePosition()
    getFocusPosition()
    getUpDirection()
    getLookAtVector()
    getLookAtOrientation()
    getProj()
    getView()
    getInvView()
    getViewProj()
    getInvViewProj()
    billboard(typedef Vector3D Float3)
    billboard(typedef Vector3D Float3, Arithmetic)
    billboard(typedef Vector3D Float3, typedef Vector2D Float2)
    worldToScreenPoint(Float3 const&)
    screenToWorldPoint(Float2 const&, float)
    screenToRay(Vec2 const&)
    updateProj()
    updateView()
    updateViewProj()
s3d::PhongMaterial
s3d::Material
s3d::Plane
    Plane(Arithmetic)
    Plane(W, H)
    Plane(X, Y, Z, S)
    Plane(X, Y, Z, W, H)
    Plane(X, Y, Z, Vec2 const&)
    Plane(Vec3 const&, Arithmetic)
    Plane(Vec3 const&, W, H)
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setSize(typedef double value_type, typedef double value_type)
    setSize(typedef Vec2 size_type)
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(typedef double value_type)
    stretched(typedef double value_type, typedef double value_type)
    stretched(typedef Vec2 size_type)
    scaled(double)
    scaled(double, double)
    scaled(typedef Vector2D Vec2)
    hasArea()
    lerp(Plane const&, double)
    intersects(Ray const&)
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(TextureRegion const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Quaternion const&, TextureRegion const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, TextureRegion const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(TextureRegion const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Quaternion const&, TextureRegion const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, TextureRegion const&, PhongMaterial const&)
s3d::Cylinder
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setSize(typedef double value_type, typedef double value_type)
    setOrientation(struct Quaternion { ... })
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(double, double)
    scaled(double, double)
    hasVolume()
    lerp(Cylinder const&, double)
    vector()
    topCenter()
    bottomCenter()
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
s3d::Cone
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setSize(typedef double value_type, typedef double value_type)
    setOrientation(struct Quaternion { ... })
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(double, double)
    scaled(double, double)
    hasVolume()
    lerp(Cone const&, double)
    vector()
    top()
    bottomCenter()
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
s3d::Optional<s3d::Vector3D<float>>
s3d::CommonVector<T, U, bool isScalar>
s3d::CommonVector<s3d::Point, s3d::Point, 0>
s3d::CommonVector<s3d::Point, s3d::Vector2D<float>, 0>
s3d::CommonVector<s3d::Point, s3d::Vector2D<double>, 0>
s3d::CommonVector<s3d::Vector2D<float>, s3d::Point, 0>
s3d::CommonVector<s3d::Vector2D<float>, s3d::Vector2D<float>, 0>
s3d::CommonVector<s3d::Vector2D<float>, s3d::Vector2D<double>, 0>
s3d::CommonVector<s3d::Vector2D<double>, s3d::Point, 0>
s3d::CommonVector<s3d::Vector2D<double>, s3d::Vector2D<float>, 0>
s3d::CommonVector<s3d::Vector2D<double>, s3d::Vector2D<double>, 0>
s3d::Step2D
    begin()
    end()
    startValue()
    count()
    num_elements()
    step()
    isEmpty()
    asArray()
s3d::InfiniteList<Type>
    begin()
    end()
    startValue()
    step()
    filter(Fty)
    map(Fty)
    take(typedef unsigned long long size_t)
    take_while(Fty)
s3d::ScopeGuard<Callback>
    operator=(const ScopeGuard<Callback>&)
    dismiss()
s3d::Error
    what()
    type()
s3d::ParseError
    type()
s3d::BadOptionalAccess
    type()
s3d::NotImplementedError
    type()
s3d::EngineError
    type()
s3d::NonNull<Pointer>
s3d::AlignedDeleter<Type>
    operator()(Type *)
s3d::IsOverAligned<Type>
s3d::Allocator<Type, typedef unsigned long long size_t Alignment>
    Allocator<Type, Alignment>(const Allocator<type-parameter-1-0, OtherAlignment>&)
    allocate(typedef unsigned long long size_t)
    deallocate(Type *, typedef unsigned long long size_t)
s3d::DefaultAllocator<Type>
s3d::StringCompare
    operator()(char32 const *, char32 const *)
    operator()(char32 const *, class StringView { ... })
    operator()(char32 const *, String const&)
    operator()(class StringView { ... }, char32 const *)
    operator()(class StringView { ... }, class StringView { ... })
    operator()(class StringView { ... }, String const&)
    operator()(String const&, char32 const *)
    operator()(String const&, class StringView { ... })
    operator()(String const&, String const&)
s3d::StringHash
    operator()(class StringView { ... })
    operator()(String const&)
    operator()(char32 const *)
s3d::KDTree<DatasetAdapter>
    rebuildIndex()
    release()
    usedMemory()
    knnSearch(typedef unsigned long long size_t, point_type const&)
    knnSearch(Array&, typedef unsigned long long size_t, point_type const&)
    knnSearch(Array&, Array<typename KDAdapter<type-parameter-0-0>::element_type, allocator<typename KDAdapter<type-parameter-0-0>::element_type>>&, typedef unsigned long long size_t, point_type const&)
    radiusSearch(point_type const&, typedef typename adapter_type::element_type element_type, typedef YesNo SortByDistance)
    radiusSearch(Array&, point_type const&, typedef typename adapter_type::element_type element_type, SortByDistance const)
s3d::Array<unsigned long long, std::allocator<unsigned long long>>
s3d::KDTreeAdapter<Dataset, PointType, ElementType, typedef int int32 Dim>
s3d::DisjointSet<IndexType>
    isEmpty()
    size()
    find(typedef IndexType index_type)
    connected(typedef IndexType index_type, typedef IndexType index_type)
    isRoot(typedef IndexType index_type)
    merge(typedef IndexType index_type, typedef IndexType index_type)
    size(typedef IndexType index_type)
    countSets()
    reset()
s3d::AsyncTask<Type>
    AsyncTask<Type>(Fty &&, Args &&...)
    operator=(base_type const&)
    operator=(const AsyncTask<Type>&)
    operator=(base_type &&)
    operator=(AsyncTask<Type> &&)
    isValid()
    isReady()
    get()
    wait()
    wait_for(const duration<type-parameter-1-0, type-parameter-1-1>&)
    wait_until(const time_point<type-parameter-1-0, type-parameter-1-1>&)
    share()
s3d::ChildProcess
    isValid()
    isRunning()
    wait()
    terminate()
    getExitCode()
    istream()
    ostream()
s3d::Optional<int>
s3d::UTF8toUTF32_Converter
    put(typedef char char8)
    get()
s3d::UTF16toUTF32_Converter
    put(typedef char16_t char16)
    get()
s3d::UTF32toUTF8_Converter
    put(typedef char32_t char32)
    get()
    begin()
s3d::UTF32toUTF16_Converter
    put(typedef char32_t char32)
    get()
    begin()
s3d::MatchResults
    size()
    empty()
    isEmpty()
    operator[](typedef unsigned long long size_type)
    begin()
    end()
    cbegin()
    cend()
s3d::Array<s3d::Optional<s3d::StringView>, std::allocator<s3d::Optional<s3d::StringView>>>
s3d::Optional<s3d::StringView>
s3d::RegExp
    isValid()
    fullMatch(class StringView { ... })
    match(class StringView { ... })
    search(class StringView { ... })
    findAll(class StringView { ... })
s3d::Array<s3d::MatchResults, std::allocator<s3d::MatchResults>>
s3d::NamedParameter<s3d::Arg::radix_tag, unsigned int>
s3d::Optional<bool>
s3d::Optional<char>
s3d::Optional<unsigned char>
s3d::Optional<short>
s3d::Optional<unsigned short>
s3d::Optional<unsigned int>
s3d::Optional<long>
s3d::Optional<unsigned long>
s3d::Optional<long long>
s3d::Optional<unsigned long long>
s3d::Optional<double>
s3d::Optional<long double>
s3d::Optional<char>
s3d::Optional<char32_t>
s3d::Optional<s3d::String>
s3d::Date
    dayOfWeek()
    isToday()
    isLeapYear()
    daysInYear()
    daysInMonth()
    isValid()
    format(class StringView { ... })
    operator+(Days const&)
    operator-(Days const&)
    operator+=(Days const&)
    operator-=(Days const&)
    hash()
    Yesterday()
    Today()
    Tomorrow()
    IsLeapYear(typedef int int32)
    DaysInYear(typedef int int32)
    DaysInMonth(typedef int int32, typedef int int32)
    Subtract(Date const&, Date const&)
s3d::DateTime
    isValid()
    format(class StringView { ... })
    operator+(Days const&)
    operator+(Milliseconds const&)
    operator-(Days const&)
    operator-(Milliseconds const&)
    operator+=(Days const&)
    operator+=(Milliseconds const&)
    operator-=(Days const&)
    operator-=(Milliseconds const&)
    hash()
    Yesterday()
    Today()
    Tomorrow()
    Now()
    NowUTC()
    Subtract(DateTime const&, DateTime const&)
s3d::ISteadyClock
    getMicrosec()
    getNanosec()
    GetMicrosec(ISteadyClock *)
    GetNanosec(ISteadyClock *)
s3d::Stopwatch
    isStarted()
    isPaused()
    isRunning()
    start()
    pause()
    resume()
    reset()
    restart()
    set(Duration const&)
    d()
    d64()
    dF()
    h()
    h64()
    hF()
    min()
    min64()
    minF()
    s()
    s64()
    sF()
    ms()
    ms64()
    msF()
    us()
    us64()
    usF()
    elapsed()
    format(class StringView { ... })
s3d::VariableSpeedStopwatch
    isStarted()
    isPaused()
    isRunning()
    start()
    pause()
    resume()
    reset()
    restart()
    set(Duration const&)
    setSpeed(double)
    getSpeed()
    d()
    d64()
    dF()
    h()
    h64()
    hF()
    min()
    min64()
    minF()
    s()
    s64()
    sF()
    ms()
    ms64()
    msF()
    us()
    us64()
    usF()
    elapsed()
    format(class StringView { ... })
    ns()
s3d::Timer
    isStarted()
    isPaused()
    isRunning()
    reachedZero()
    start()
    pause()
    resume()
    reset()
    restart()
    restart(Duration const&)
    set(Duration const&)
    setRemaining(Duration const&)
    d()
    d64()
    dF()
    h()
    h64()
    hF()
    min()
    min64()
    minF()
    s()
    s64()
    sF()
    ms()
    ms64()
    msF()
    us()
    us64()
    usF()
    s_ceil()
    s64_ceil()
    duration()
    remaining()
    progress1_0()
    progress0_1()
    format(class StringView { ... })
s3d::ProfilerStat
    print()
s3d::MillisecClock
    ms()
    log()
    console()
    print()
s3d::MicrosecClock
    us()
    log()
    console()
    print()
s3d::RDTSCClock
    cycles()
    log()
    console()
    print()
s3d::TimeProfiler
    begin(class StringView { ... })
    end(class StringView { ... })
    log()
    console()
    print()
    getData(Array&, size_t&)
s3d::Array<unsigned int, std::allocator<unsigned int>>
s3d::Array<std::pair<s3d::String, s3d::TimeProfiler::Data>, std::allocator<std::pair<s3d::String, s3d::TimeProfiler::Data>>>
s3d::Optional<s3d::DateTime>
s3d::FileChange
s3d::DirectoryWatcher
    isOpen()
    retrieveChanges()
    retrieveChanges(Array&)
    clearChanges()
    directory()
s3d::Array<s3d::FileChange, std::allocator<s3d::FileChange>>
s3d::MemoryViewReader
    supportsLookahead()
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    skip(typedef long long int64)
    read(void *, typedef long long int64)
    read(void *, typedef long long int64, typedef long long int64)
    read(TriviallyCopyable&)
    lookahead(void *, typedef long long int64)
    lookahead(void *, typedef long long int64, typedef long long int64)
    lookahead(TriviallyCopyable&)
s3d::MemoryReader
    supportsLookahead()
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    skip(typedef long long int64)
    read(void *, typedef long long int64)
    read(void *, typedef long long int64, typedef long long int64)
    read(TriviallyCopyable&)
    lookahead(void *, typedef long long int64)
    lookahead(void *, typedef long long int64, typedef long long int64)
    lookahead(TriviallyCopyable&)
s3d::MemoryMappedFileView
    open(typedef StringView FilePathView, typedef YesNo MapAll)
    close()
    isOpen()
    map(typedef unsigned long long size_t, typedef unsigned long long size_t)
    unmap()
    offset()
    mappedSize()
    fileSize()
    data()
    path()
s3d::MemoryMappedFile
    open(typedef StringView FilePathView, enum class MMFOpenMode_if_Exists: uint8 {...}, enum class MMFOpenMode_if_NotFound: uint8 {...})
    close()
    isOpen()
    map(typedef unsigned long long size_t, typedef unsigned long long size_t)
    unmap()
    flush()
    offset()
    mappedSize()
    fileSize()
    data()
    path()
s3d::MemoryWriter
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    seekToEnd()
    write(void const *, typedef long long int64)
    write(const TriviallyCopyable&)
    retrieve()
    getBlob()
    reserve(typedef unsigned long long size_t)
    clear()
    release()
s3d::BinaryReader
    supportsLookahead()
    open(typedef StringView FilePathView)
    close()
    isOpen()
    size()
    getPos()
    setPos(typedef long long int64)
    skip(typedef long long int64)
    read(void *, typedef long long int64)
    read(void *, typedef long long int64, typedef long long int64)
    read(TriviallyCopyable&)
    lookahead(void *, typedef long long int64)
    lookahead(void *, typedef long long int64, typedef long long int64)
    lookahead(TriviallyCopyable&)
    path()
s3d::BinaryWriter
    open(typedef StringView FilePathView, enum class OpenMode: uint8 {...})
    close()
    isOpen()
    flush()
    clear()
    size()
    getPos()
    setPos(typedef long long int64)
    seekToEnd()
    write(void const *, typedef long long int64)
    write(const TriviallyCopyable&)
    path()
s3d::ZIPReader
    open(typedef StringView FilePathView)
    close()
    isOpen()
    enumPaths()
    extractAll(typedef StringView FilePathView)
    extractFiles(class StringView { ... }, typedef StringView FilePathView)
    extract(typedef StringView FilePathView)
    extractToBlob(typedef StringView FilePathView)
s3d::TextReader
    TextReader(Reader &&, Optional const&)
    open(typedef StringView FilePathView, Optional const&)
    open(Reader &&, Optional const&)
    open(std::unique_ptr<IReader> &&, Optional const&)
    close()
    isOpen()
    readChar()
    readLine()
    readLines()
    readAll()
    readChar(char32&)
    readLine(String&)
    readLines(Array&)
    readAll(String&)
    encoding()
    path()
s3d::Optional<s3d::TextEncoding>
s3d::TextWriter
    open(typedef StringView FilePathView, enum class TextEncoding: uint8 {...})
    open(typedef StringView FilePathView, enum class OpenMode: uint8 {...}, enum class TextEncoding: uint8 {...})
    close()
    isOpen()
    clear()
    write(char)
    write(typedef char32_t char32)
    write(char32 const *)
    write(class StringView { ... })
    write(String const&)
    write(const Args &...)
    writeln(char)
    writeln(typedef char32_t char32)
    writeln(char32 const *)
    writeln(class StringView { ... })
    writeln(String const&)
    writeln(const Args &...)
    writeUTF8(typedef basic_string_view string_view)
    writelnUTF8(typedef basic_string_view string_view)
    operator<<(const Formattable&)
    encoding()
    path()
s3d::CSV
    CSV(Reader &&, class StringView { ... }, class StringView { ... }, class StringView { ... })
    load(typedef StringView FilePathView, class StringView { ... }, class StringView { ... }, class StringView { ... })
    load(Reader &&, class StringView { ... }, class StringView { ... }, class StringView { ... })
    load(std::unique_ptr<IReader> &&, class StringView { ... }, class StringView { ... }, class StringView { ... })
    clear()
    isEmpty()
    rows()
    columns(typedef unsigned long long size_t)
    get(typedef unsigned long long size_t, typedef unsigned long long size_t)
    getOr(typedef unsigned long long size_t, typedef unsigned long long size_t, U &&)
    getOpt(typedef unsigned long long size_t, typedef unsigned long long size_t)
    getData()
    getRow(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    getData()
    getRow(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    write(String const&)
    write(const Type&)
    write(const Args &...)
    writeRow(const Args &...)
    newLine()
    save(typedef StringView FilePathView, typedef char32_t char32, typedef char32_t char32, typedef char32_t char32)
    getItem(typedef unsigned long long size_t, typedef unsigned long long size_t)
    inBounds(typedef unsigned long long size_t, typedef unsigned long long size_t)
    loadFromTextReader(TextReader&, class StringView { ... }, class StringView { ... }, class StringView { ... })
    _write()
    _write(const Type&, const Args &...)
s3d::Array<s3d::Array<s3d::String, std::allocator<s3d::String>>, std::allocator<s3d::Array<s3d::String, std::allocator<s3d::String>>>>
s3d::INIKey
s3d::INISection
s3d::Array<s3d::INIKey, std::allocator<s3d::INIKey>>
s3d::INIValueWrapper
    operator=(const Type&)
s3d::INI
    INI(Reader &&, Optional const&)
    load(typedef StringView FilePathView, Optional const&)
    load(Reader &&, Optional const&)
    load(std::unique_ptr<IReader> &&, Optional const&)
    clear()
    isEmpty()
    sections()
    hasSection(typedef StringView SectionView)
    getSection(typedef StringView SectionView)
    hasValue(typedef StringView SectionView, typedef StringView NameView)
    getValue(typedef StringView SectionView, typedef StringView NameView)
    hasGlobalValue(typedef StringView NameView)
    getGlobalValue(typedef StringView NameView)
    operator[](typedef StringView Section_Dot_NameView)
    operator[](typedef StringView Section_Dot_NameView)
    get(typedef StringView SectionView, typedef StringView NameView)
    get(typedef StringView Section_Dot_NameView)
    getOr(typedef StringView SectionView, typedef StringView NameView, U &&)
    getOr(typedef StringView Section_Dot_NameView, U &&)
    getOpt(typedef StringView SectionView, typedef StringView NameView)
    getOpt(typedef StringView Section_Dot_NameView)
    addSection(typedef StringView SectionView)
    removeSection(typedef StringView SectionView)
    write(typedef StringView SectionView, typedef StringView NameView, Value const&)
    write(typedef StringView SectionView, typedef StringView NameView, const Type&)
    writeGlobal(typedef StringView NameView, Value const&)
    writeGlobal(typedef StringView NameView, const Type&)
    save(typedef StringView FilePathView)
    Split(typedef StringView Section_Dot_NameView)
    loadFromTextReader(TextReader&)
    getValue(typedef StringView SectionView, typedef StringView NameView)
    getValueOpt(typedef StringView SectionView, typedef StringView NameView)
s3d::Array<s3d::INISection, std::allocator<s3d::INISection>>
s3d::JSONIterator
    operator=(JSONIterator const&)
    operator++()
    operator++(int)
    operator--()
    operator--(int)
    operator+(typedef ptrdiff_t difference_type)
    operator*()
    key()
    value()
    operator==(JSONIterator const&)
    operator!=(JSONIterator const&)
s3d::JSONConstIterator
    operator=(JSONIterator const&)
    operator=(JSONConstIterator const&)
    operator++()
    operator++(int)
    operator--()
    operator--(int)
    operator+(typedef ptrdiff_t difference_type)
    operator*()
    key()
    value()
    operator==(JSONConstIterator const&)
    operator!=(JSONConstIterator const&)
s3d::JSONIterationProxy
    operator=(JSONIterationProxy const&)
    operator++()
    operator++(int)
    operator+(typedef unsigned long long size_t)
    operator*()
    operator==(JSONIterationProxy const&)
    operator!=(JSONIterationProxy const&)
s3d::JSONArrayView
    begin()
    end()
    operator[](typedef unsigned long long size_t)
s3d::JSON
    JSON(const Array<type-parameter-0-0, allocator<type-parameter-0-0>>&)
    JSON(const initializer_list<type-parameter-0-0>&)
    JSON(const StringViewish&)
    JSON(SignedInt)
    JSON(UnsignedInt)
    JSON(Float)
    JSON(const Type&)
    operator=(typedef decltype(nullptr) nullptr_t)
    operator=(JSON const&)
    operator=(JSON &&)
    operator=(initializer_list const&)
    operator=(Array const&)
    operator=(const Array<type-parameter-0-0, allocator<type-parameter-0-0>>&)
    operator=(const initializer_list<type-parameter-0-0>&)
    operator=(class StringView { ... })
    operator=(const StringViewish&)
    operator=(typedef long long int64)
    operator=(typedef unsigned long long uint64)
    operator=(double)
    operator=(bool)
    operator=(SignedInt)
    operator=(UnsignedInt)
    operator=(Float)
    operator=(const Type&)
    assignUTF8String(typedef basic_string_view string_view)
    operator==(JSON const&)
    operator!=(JSON const&)
    isEmpty()
    isNull()
    isBool()
    isNumber()
    isInteger()
    isUnsigned()
    isFloat()
    isString()
    isArray()
    isObject()
    isBinary()
    getType()
    hasElement(class StringView { ... })
    getString()
    getUTF8String()
    getBinary()
    get()
    getOr(U &&)
    getOpt()
    operator[](class StringView { ... })
    operator[](class StringView { ... })
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](JSONPointer const&)
    operator[](JSONPointer const&)
    access(JSONPointer const&)
    access(JSONPointer const&)
    access(class StringView { ... })
    access(class StringView { ... })
    push_back(JSON const&)
    clear()
    erase(class StringView { ... })
    erase(typedef unsigned long long size_t)
    contains(class StringView { ... })
    contains(typedef unsigned long long size_t)
    contains(JSONPointer const&)
    begin()
    begin()
    end()
    end()
    arrayView()
    size()
    format(typedef char32_t char32, typedef unsigned long long size_t)
    formatMinimum()
    formatUTF8(typedef char32_t char32, typedef unsigned long long size_t)
    formatUTF8Minimum()
    save(typedef StringView FilePathView)
    saveMinimum(typedef StringView FilePathView)
    toBSON()
    toCBOR()
    toMessagePack()
    swap(JSON&)
    Invalid()
    Load(typedef StringView FilePathView, typedef YesNo AllowExceptions)
    Load(Reader &&, typedef YesNo AllowExceptions)
    Load(std::unique_ptr<IReader> &&, typedef YesNo AllowExceptions)
    Parse(class StringView { ... }, typedef YesNo AllowExceptions)
    FromBSON(Blob const&, typedef YesNo AllowExceptions)
    FromCBOR(Blob const&, typedef YesNo AllowExceptions)
    FromMessagePack(Blob const&, typedef YesNo AllowExceptions)
    getOpt_()
    getOpt_()
    getOpt_()
    getOptString()
    getOptInt64()
    getOptDouble()
    getOptBool()
s3d::JSONItem
s3d::JSONPointer
    operator=(JSONPointer const&)
    operator=(JSONPointer &&)
    format()
    operator/=(JSONPointer const&)
    operator/=(class StringView { ... })
    operator/=(typedef unsigned long long size_t)
    operator/(JSONPointer const&)
    operator/(class StringView { ... })
    operator/(typedef unsigned long long size_t)
    parent()
    back()
    pop_back()
    pop_back_N(typedef unsigned long long size_t)
    push_back(JSONPointer const&)
    push_back(class StringView { ... })
    push_back(typedef unsigned long long size_t)
    isEmpty()
    empty()
    Escape(class StringView { ... })
    Unescape(class StringView { ... })
s3d::JSONValidator
    operator=(JSONValidator const&)
    operator=(JSONValidator &&)
    isEmpty()
    validate(JSON const&)
    validate(JSON const&, ValidationError&)
    validationAssert(JSON const&)
    Invalid()
    Load(typedef StringView FilePathView, typedef YesNo AllowExceptions)
    Load(Reader &&, typedef YesNo AllowExceptions)
    Load(std::unique_ptr<IReader> &&, typedef YesNo AllowExceptions)
    Parse(class StringView { ... }, typedef YesNo AllowExceptions)
    Set(JSON const&, typedef YesNo AllowExceptions)
s3d::Array<s3d::JSON, std::allocator<s3d::JSON>>
s3d::Array<unsigned char, std::allocator<unsigned char>>
s3d::XMLElement
    operator=(XMLElement &&)
    isNull()
    name()
    text()
    firstChild()
    nextSibling()
    parent()
    attributes()
    attribute(String const&)
s3d::Array<std::pair<s3d::String, s3d::String>, std::allocator<std::pair<s3d::String, s3d::String>>>
s3d::XMLReader
    XMLReader(Reader &&, typedef YesNo PreserveWhitespace)
    open(char32 const *, typedef YesNo PreserveWhitespace)
    open(typedef StringView FilePathView, typedef YesNo PreserveWhitespace)
    open(FilePath const&, typedef YesNo PreserveWhitespace)
    open(class NamedParameter<Tag = s3d::Arg::code_tag, Type = s3d::String> { ... }, typedef YesNo PreserveWhitespace)
    open(Reader &&, typedef YesNo PreserveWhitespace)
    open(std::unique_ptr<IReader> &&, typedef YesNo PreserveWhitespace)
    close()
    isOpen()
s3d::NamedParameter<s3d::Arg::code_tag, s3d::String>
s3d::TOMLTableIterator
    operator++()
    operator++(int)
    operator*()
    operator==(TOMLTableIterator const&)
    operator!=(TOMLTableIterator const&)
s3d::TOMLTableView
    begin()
    end()
s3d::TOMLArrayIterator
    operator++()
    operator++(int)
    operator+(typedef unsigned long long size_t)
    operator*()
    operator==(TOMLArrayIterator const&)
    operator!=(TOMLArrayIterator const&)
s3d::TOMLArrayView
    begin()
    end()
    operator[](typedef unsigned long long size_t)
s3d::TOMLTableArrayIterator
    operator++()
    operator++(int)
    operator+(typedef unsigned long long size_t)
    operator*()
    operator==(TOMLTableArrayIterator const&)
    operator!=(TOMLTableArrayIterator const&)
s3d::TOMLTableArrayView
    begin()
    end()
    operator[](typedef unsigned long long size_t)
s3d::TOMLValue
    get()
    getOr(U &&)
    getOpt()
    getOpt()
    getOpt()
    getOpt()
    getOpt()
    getOpt()
    getOpt()
    isEmpty()
    getType()
    isTable()
    isArray()
    isTableArray()
    isString()
    isBool()
    isNumber()
    isDate()
    isDateTime()
    hasMember(String const&)
    tableView()
    operator[](String const&)
    arrayCount()
    arrayView()
    tableArrayView()
    getString()
    getDate()
    getDateTime()
    format()
    getOpt_()
    getOpt_()
    getOpt_()
    getOptString()
    getOptInt64()
    getOptDouble()
    getOptBool()
    getOptDate()
    getOptDateTime()
s3d::TOMLTableMember
s3d::TOMLReader
    TOMLReader(Reader &&)
    open(typedef StringView FilePathView)
    open(std::unique_ptr<IReader> &&)
    open(Reader &&)
    close()
    isOpen()
s3d::Optional<s3d::Date>
s3d::Array<s3d::LineString, std::allocator<s3d::LineString>>
s3d::TriangleIndex32
    Zero()
s3d::GeoJSONBase
    getBBox()
    getType()
s3d::Array<double, std::allocator<double>>
s3d::GeoJSONGeometry
    get()
    getPolygons()
    visit(Visitor &&)
    getCache()
s3d::GeoJSONFeature
    getGeometry()
    getProperties()
    getID()
s3d::GeoJSONFeatureCollection
    getFeatures()
s3d::Array<s3d::GeoJSONFeature, std::allocator<s3d::GeoJSONFeature>>
s3d::HTMLWriter
    DefaultStyle()
    open(typedef StringView FilePathView, class StringView { ... }, class StringView { ... })
    close()
    isOpen()
    writeRaw(class StringView { ... })
    writeParagraph(class StringView { ... }, Color const&)
    writeHeader(class StringView { ... }, typedef int int32)
    writeList(Array const&)
    writeOrderedList(Array const&)
    writeTable(Grid const&, typedef YesNo HasHeader)
    writeLine(typedef int int32, Color const&)
    writeImage(Image const&, Optional const&)
    writeImage(typedef StringView FilePathView, Optional const&)
    path()
s3d::Grid<s3d::String, std::allocator<s3d::String>>
s3d::Optional<s3d::Point>
s3d::LicenseInfo
s3d::Array<s3d::LicenseInfo, std::allocator<s3d::LicenseInfo>>
s3d::Dot_impl
    operator()(const V1, const V2)
    operator()(struct PlaceHolder_t { ... })
s3d::Cross_impl
    operator()(const V1, const V2)
    operator()(struct PlaceHolder_t { ... })
s3d::MonitorInfo
    format()
s3d::EasingAB<Type>
    start()
    pause()
    resume()
    reset()
    easeIn()
    easeOut()
    easeInOut()
    value()
    getA()
    getB()
    setA(value_type const&)
    setB(value_type const&)
    onA()
    onB()
    progress0_1()
    isMoving()
    done()
    base()
    jumpToA()
    jumpToB()
    elapsed()
s3d::SimpleAnimation
    set(class StringView { ... }, KeyFrame const&, KeyFrame const&, double (*)(double))
    setLoop(SecondsF const&)
    setLoop(SecondsF const&, SecondsF const&)
    operator[](class StringView { ... })
    start()
    pause()
    resume()
    restart()
    posSec()
    lengthSec()
    isDone()
    loopCount()
    GetValue(Array const&, double)
s3d::Array<s3d::SimpleAnimation::Animation, std::allocator<s3d::SimpleAnimation::Animation>>
s3d::Transition
    update(bool, double)
    value()
    isZero()
    isOne()
    easeIn(double (*)(double))
    easeOut(double (*)(double))
    easeInOut(double (*)(double))
    reset(double)
s3d::DiscreteDistribution
    DiscreteDistribution(const array<double, Size>&)
    DiscreteDistribution(Iterator, Iterator)
    operator=(class initializer_list<_Elem = double> { ... })
    operator=(const array<double, Size>&)
    operator=(Array const&)
    probabilities()
    operator()(URBG&)
    min()
    max()
    size()
s3d::PoissonDisk2D
    PoissonDisk2D(Size const&, double, URBG &&, typedef YesNo Precompute)
    PoissonDisk2D(Size const&, double, Vec2 const&, URBG &&, typedef YesNo Precompute)
    isComplete()
    update(typedef unsigned long long size_t)
    update(URBG &&, typedef unsigned long long size_t)
    getPoints()
s3d::Grid<s3d::Optional<s3d::Vector2D<double>>, std::allocator<s3d::Optional<s3d::Vector2D<double>>>>
s3d::HalfFloat
    HalfFloat(Arithmetic)
    operator=(float)
    operator=(Arithmetic)
    operator==(HalfFloat const)
    operator<=>(HalfFloat const)
    getBits()
    setBits(uint16 const)
    isNaN()
    isInfinity()
    getSign()
s3d::MathParser
    getErrorMessage()
    setExpression(class StringView { ... })
    setConstant(class StringView { ... }, double)
    setVariable(class StringView { ... }, double *)
    setFunction(class StringView { ... }, typedef double (*)() * Fty0)
    setFunction(class StringView { ... }, typedef double (*)(double) * Fty1)
    setFunction(class StringView { ... }, typedef double (*)(double, double) * Fty2)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double) * Fty3)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double) * Fty4)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double) * Fty5)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double, double) * Fty6)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double, double, double) * Fty7)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double, double, double, double) * Fty8)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double, double, double, double, double) * Fty9)
    setFunction(class StringView { ... }, typedef double (*)(double, double, double, double, double, double, double, double, double, double) * Fty10)
    setPrefixOperator(class StringView { ... }, typedef double (*)(double) * Fty1)
    setPostfixOperator(class StringView { ... }, typedef double (*)(double) * Fty1)
    removeVariable(class StringView { ... })
    clear()
    getExpression()
    getUsedVariables()
    getVariables()
    getConstants()
    validNameCharacters()
    validPrefixCharacters()
    validPostfixCharacters()
    evalOpt()
    evalOr(double)
    eval()
    evalArray()
    evalVec2()
    evalVec3()
    evalVec4()
    evalColorF()
    evalHSV()
s3d::BasicPerlinNoise<Float>
    BasicPerlinNoise<Float>(URBG &&)
    reseed(typedef unsigned long long uint64)
    reseed(URBG &&)
    noise1D(typedef Float value_type)
    noise2D(typedef Float value_type, typedef Float value_type)
    noise2D(Vector2D<type-parameter-0-0>)
    noise3D(typedef Float value_type, typedef Float value_type, typedef Float value_type)
    noise3D(Vector3D<type-parameter-0-0>)
    noise1D0_1(typedef Float value_type)
    noise2D0_1(typedef Float value_type, typedef Float value_type)
    noise2D0_1(Vector2D<type-parameter-0-0>)
    noise3D0_1(typedef Float value_type, typedef Float value_type, typedef Float value_type)
    noise3D0_1(Vector3D<type-parameter-0-0>)
    octave1D(typedef Float value_type, typedef int int32, typedef Float value_type)
    octave2D(typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    octave2D(Vector2D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    octave3D(typedef Float value_type, typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    octave3D(Vector3D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    octave1D0_1(typedef Float value_type, typedef int int32, typedef Float value_type)
    octave2D0_1(typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    octave2D0_1(Vector2D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    octave3D0_1(typedef Float value_type, typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    octave3D0_1(Vector3D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    normalizedOctave1D(typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave2D(typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave2D(Vector2D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    normalizedOctave3D(typedef Float value_type, typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave3D(Vector3D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    normalizedOctave1D0_1(typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave2D0_1(typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave2D0_1(Vector2D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    normalizedOctave3D0_1(typedef Float value_type, typedef Float value_type, typedef Float value_type, typedef int int32, typedef Float value_type)
    normalizedOctave3D0_1(Vector3D<type-parameter-0-0>, typedef int int32, typedef Float value_type)
    serialize()
    deserialize(state_type const&)
    Fade(Float)
    Lerp(Float, Float, Float)
    Grad(typedef unsigned char uint8, Float, Float, Float)
s3d::BasicPerlinNoise<float>
s3d::BasicPerlinNoise<double>
s3d::CircularBase<Float, typedef int int32 Oclock>
    operator+()
    operator-()
    operator+(typedef Vector2D<type-parameter-0-0> position_type)
    operator-(typedef Vector2D<type-parameter-0-0> position_type)
    withR(typedef Float value_type)
    withTheta(typedef Float value_type)
    rotated(typedef Float value_type)
    rotate(typedef Float value_type)
    lerp(const CircularBase<Float, Oclock>&, double)
    toFloat2()
    toVec2()
    fastToFloat2()
    fastToVec2()
    toPosition()
    hash()
    ClampAngle(typedef Float value_type)
    Clock()
    Offset(typedef Float value_type)
s3d::CircularBase<double, 0>
s3d::CircularBase<double, 3>
s3d::CircularBase<double, 6>
s3d::CircularBase<double, 9>
s3d::CircularBase<float, 0>
s3d::CircularBase<float, 3>
s3d::CircularBase<float, 6>
s3d::CircularBase<float, 9>
s3d::OffsetCircularBase<Float, typedef int int32 Oclock>
    operator+(typedef Vector2D<type-parameter-0-0> position_type)
    operator-(typedef Vector2D<type-parameter-0-0> position_type)
    operator+=(typedef Vector2D<type-parameter-0-0> position_type)
    operator-=(typedef Vector2D<type-parameter-0-0> position_type)
    withCenter(typedef Float value_type, typedef Float value_type)
    withCenter(typedef Vector2D<type-parameter-0-0> position_type)
    withR(typedef Float value_type)
    withTheta(typedef Float value_type)
    movedBy(typedef Float value_type, typedef Float value_type)
    movedBy(typedef Vector2D<type-parameter-0-0> position_type)
    moveBy(typedef Float value_type, typedef Float value_type)
    moveBy(typedef Vector2D<type-parameter-0-0> position_type)
    setCenter(typedef Float value_type, typedef Float value_type)
    setCenter(typedef Vector2D<type-parameter-0-0> position_type)
    setTarget(typedef Float value_type, typedef Float value_type)
    setTarget(typedef Vector2D<type-parameter-0-0> position_type)
    rotated(typedef Float value_type)
    rotate(typedef Float value_type)
    toFloat2()
    toVec2()
    fastToFloat2()
    fastToVec2()
    toPosition()
    hash()
    ClampAngle(typedef Float value_type)
    Clock()
    Offset(typedef Float value_type)
s3d::OffsetCircularBase<double, 0>
s3d::OffsetCircularBase<double, 3>
s3d::OffsetCircularBase<double, 6>
s3d::OffsetCircularBase<double, 9>
s3d::OffsetCircularBase<float, 0>
s3d::OffsetCircularBase<float, 3>
s3d::OffsetCircularBase<float, 6>
s3d::OffsetCircularBase<float, 9>
s3d::CylindricalBase<Float>
    operator+()
    operator-()
    operator+(typedef Vector3D<type-parameter-0-0> position_type)
    operator-(typedef Vector3D<type-parameter-0-0> position_type)
    toFloat3()
    toVec3()
    fastToFloat3()
    fastToVec3()
    toPosition()
    hash()
s3d::CylindricalBase<double>
s3d::CylindricalBase<float>
s3d::SphericalBase<Float>
    operator+()
    operator-()
    operator+(typedef Vector3D<type-parameter-0-0> position_type)
    operator-(typedef Vector3D<type-parameter-0-0> position_type)
    toFloat3()
    toVec3()
    fastToFloat3()
    fastToVec3()
    toPosition()
    hash()
s3d::SphericalBase<double>
s3d::SphericalBase<float>
s3d::Mat3x3
    determinant()
    inverse()
    transformPoint(struct Point { ... })
    transformPoint(typedef Vector2D Float2)
    transformPoint(typedef Vector2D Vec2)
    transformRect(RectF const&)
    hash()
    Identity()
    Homography(Quad const&)
    Homography(RectF const&, RectF const&)
    Homography(RectF const&, Quad const&)
    Homography(Quad const&, RectF const&)
    Homography(Quad const&, Quad const&)
s3d::Bezier2Path
    setT(double const)
    getT()
    advance(double, typedef int int32)
s3d::Bezier3Path
    setT(double const)
    getT()
    advance(double, typedef int int32)
s3d::FloatQuad
s3d::BlendState
    asValue()
    operator==(BlendState const&)
    operator!=(BlendState const&)
s3d::RasterizerState
    asValue()
    operator==(RasterizerState const&)
    operator!=(RasterizerState const&)
s3d::SamplerState
    asValue()
    operator==(SamplerState const&)
    operator!=(SamplerState const&)
s3d::AssetID<AssetTag>
    operator<=>(const AssetID<AssetTag>&)
    value()
    isNull()
    isInvalid()
    NullAsset()
    InvalidValue()
s3d::AssetIDWrapper<AssetTag>
    id()
s3d::ConstantBufferBinding
s3d::VertexShader
    getBinary()
    swap(VertexShader&)
    HLSL(typedef StringView FilePathView, class StringView { ... })
    GLSL(typedef StringView FilePathView, Array const&)
    MSL(class StringView { ... }, typedef StringView FilePathView)
    ESSL(typedef StringView FilePathView, Array const&)
    WGSL(typedef StringView FilePathView, Array const&)
s3d::AssetHandle<s3d::VertexShader>
s3d::Array<s3d::ConstantBufferBinding, std::allocator<s3d::ConstantBufferBinding>>
s3d::PixelShader
    getBinary()
    swap(PixelShader&)
    HLSL(typedef StringView FilePathView, class StringView { ... })
    GLSL(typedef StringView FilePathView, Array const&)
    MSL(class StringView { ... }, typedef StringView FilePathView)
    ESSL(typedef StringView FilePathView, Array const&)
    WGSL(typedef StringView FilePathView, Array const&)
s3d::AssetHandle<s3d::PixelShader>
s3d::IImageEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    encode(Image const&, IWriter&)
    encode(Image const&)
s3d::PNGEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    save(Image const&, typedef StringView FilePathView, enum class PNGFilter: int32 {...})
    save(Grid const&, typedef StringView FilePathView, enum class PNGFilter: int32 {...})
    encode(Image const&, IWriter&)
    encode(Image const&, IWriter&, enum class PNGFilter: int32 {...})
    encode(Grid const&, IWriter&, enum class PNGFilter: int32 {...})
    encode(Image const&)
    encode(Image const&, enum class PNGFilter: int32 {...})
    encode(Grid const&, enum class PNGFilter: int32 {...})
s3d::Grid<unsigned short, std::allocator<unsigned short>>
s3d::JPEGEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    save(Image const&, typedef StringView FilePathView, typedef int int32)
    encode(Image const&, IWriter&)
    encode(Image const&, IWriter&, typedef int int32)
    encode(Image const&)
    encode(Image const&, typedef int int32)
s3d::PPMEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    save(Image const&, typedef StringView FilePathView, enum class PPMType: uint8 {...})
    encode(Image const&, IWriter&)
    encode(Image const&, IWriter&, enum class PPMType: uint8 {...})
    encode(Image const&)
    encode(Image const&, enum class PPMType: uint8 {...})
s3d::WebPEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    save(Image const&, typedef StringView FilePathView, typedef YesNo Lossless, double, enum class WebPMethod: uint8 {...})
    encode(Image const&, IWriter&)
    encode(Image const&, IWriter&, typedef YesNo Lossless, double, enum class WebPMethod: uint8 {...})
    encode(Image const&)
    encode(Image const&, typedef YesNo Lossless, double, enum class WebPMethod: uint8 {...})
s3d::RenderTexture
    clear(ColorF const&)
    generateMips()
    readAsImage(Image&)
    read(Grid&)
    read(Grid&)
    read(Grid&)
    swap(RenderTexture&)
s3d::IConstantBufferDetail
s3d::ConstantBufferBase
    _internal_update(void const *, typedef unsigned long long size_t)
    _detail()
s3d::ConstantBuffer<Type>
    ConstantBuffer<Type>(Args &&...)
    operator=(const Type&)
    size()
    data()
    get()
    get()
    isDirty()
    _update_if_dirty()
    base()
    operator*()
    operator*()
    operator->()
    operator->()
s3d::TextStyle
    Default()
    CustomShader()
    Outline(double, ColorF const&)
    Outline(double, double, ColorF const&)
    Shadow(Vec2 const&, ColorF const&)
    OutlineShadow(double, ColorF const&, Vec2 const&, ColorF const&)
    OutlineShadow(double, double, ColorF const&, Vec2 const&, ColorF const&)
s3d::Optional<s3d::Rect>
s3d::Optional<s3d::VertexShader>
s3d::Optional<s3d::PixelShader>
s3d::Optional<s3d::RenderTexture>
s3d::Optional<s3d::Texture>
s3d::RectanglePack
s3d::Array<s3d::Rect, std::allocator<s3d::Rect>>
s3d::VoronoiFacet
s3d::Subdivision2D
    isEmpty()
    initDelaunay(RectF const&)
    addPoint(Vec2 const&)
    addPoints(Array const&)
    findNearest(Vec2 const&, Vec2 *)
    calculateEdges()
    calculateEdges(Array&)
    calculateLeadingEdges()
    calculateLeadingEdges(Array&)
    calculateTriangles()
    calculateTriangles(Array&)
    calculateVoronoiFacets()
    calculateVoronoiFacets(Array&)
    calculateVoronoiFacets(Array const&, Array&)
    getVertex(typedef int32 VertexID, EdgeID *)
    getEdge(typedef int32 EdgeID, enum class Subdivision2DEdgeType: int32 {...})
    nextEdge(typedef int32 EdgeID)
    rotateEdge(typedef int32 EdgeID, typedef int int32)
    symEdge(typedef int32 EdgeID)
    edgeBegin(typedef int32 EdgeID, Vec2 *)
    edgeEnd(typedef int32 EdgeID, Vec2 *)
    locate(Vec2 const&, int32&, int32&)
    newEdge()
    deleteEdge(typedef int int32)
    newPoint(Vec2 const&, bool, typedef int int32)
    deletePoint(typedef int int32)
    setEdgePoints(typedef int int32, typedef int int32, typedef int int32)
    splice(typedef int int32, typedef int int32)
    connectEdges(typedef int int32, typedef int int32)
    swapEdges(typedef int int32)
    isRightOf(Vec2 const&, typedef int int32)
    calcVoronoi()
    clearVoronoi()
s3d::Array<s3d::Line, std::allocator<s3d::Line>>
s3d::Array<int, std::allocator<int>>
s3d::Array<s3d::Triangle, std::allocator<s3d::Triangle>>
s3d::Array<s3d::VoronoiFacet, std::allocator<s3d::VoronoiFacet>>
s3d::Array<s3d::Subdivision2D::Vertex, std::allocator<s3d::Subdivision2D::Vertex>>
s3d::Array<s3d::Subdivision2D::QuadEdge, std::allocator<s3d::Subdivision2D::QuadEdge>>
s3d::Line3D
    operator=(Line3D const&)
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef Vec3 position_type, typedef double value_type, typedef double value_type, typedef double value_type)
    set(typedef double value_type, typedef double value_type, typedef double value_type, typedef Vec3 position_type)
    set(typedef Vec3 position_type, typedef Vec3 position_type)
    set(Line3D const&)
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(typedef double value_type)
    stretched(typedef double value_type, typedef double value_type)
    vector()
    reversed()
    reverse()
    hasLength()
    length()
    lengthSq()
    p(typedef unsigned long long size_t)
    p(typedef unsigned long long size_t)
    point(typedef unsigned long long size_t)
    position(double)
    center()
    lerp(Line3D const&, double)
    toScreen(Mat4x4 const&)
    toScreenLine(Mat4x4 const&)
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&)
s3d::NamedParameter<s3d::Arg::direction_tag, s3d::Vector3D<double>>
s3d::Disc
    setPos(typedef double value_type, typedef double value_type, typedef double value_type)
    setPos(typedef Vec3 position_type)
    setR(typedef double size_type)
    movedBy(typedef double value_type, typedef double value_type, typedef double value_type)
    movedBy(typedef Vec3 position_type)
    moveBy(typedef double value_type, typedef double value_type, typedef double value_type)
    moveBy(typedef Vec3 position_type)
    stretched(typedef double value_type)
    scaled(double)
    hasArea()
    lerp(Disc const&, double)
    draw(ColorF const&)
    draw(Texture const&, ColorF const&)
    draw(Quaternion const&, ColorF const&)
    draw(Quaternion const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(Texture const&, PhongMaterial const&)
    draw(Quaternion const&, PhongMaterial const&)
    draw(Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
s3d::Vertex3D
s3d::Array<s3d::Vector3D<float>, std::allocator<s3d::Vector3D<float>>>
s3d::Array<s3d::Vertex3D, std::allocator<s3d::Vertex3D>>
s3d::HardwareRNG
    min()
    max()
    operator()()
    generateSeeds()
s3d::UUIDValue
    UUIDValue(Iterator, Iterator)
    isNil()
    variant()
    version()
    to_string()
    str()
    getData()
    swap(UUIDValue&)
    hash()
    operator<=>(UUIDValue const&)
    Generate()
    GenerateFromRNG(DefaultRNG&)
    GenerateFromName(UUIDValue const&, string const&)
    GenerateFromName(UUIDValue const&, String const&)
    Nil()
    NamespaceDNS()
    NamespaceURL()
    NamespaceOID()
    NamespaceX500()
    IsValid(typedef basic_string_view string_view)
    IsValid(class StringView { ... })
    Parse(typedef basic_string_view string_view)
    Parse(class StringView { ... })
s3d::Optional<s3d::UUIDValue>
s3d::X86Features
s3d::CPUInfo
s3d::Array<s3d::MonitorInfo, std::allocator<s3d::MonitorInfo>>
s3d::EngineOption
s3d::EngineOptions
s3d::DriveInfo
s3d::Array<s3d::DriveInfo, std::allocator<s3d::DriveInfo>>
s3d::IPv4Address
    isLoopback()
    to_string()
    str()
    getData()
    swap(IPv4Address&)
    hash()
    Localhost()
s3d::Array<s3d::IPv4Address, std::allocator<s3d::IPv4Address>>
s3d::TCPServer
    startAccept(typedef unsigned short uint16)
    startAcceptMulti(typedef unsigned short uint16)
    cancelAccept()
    isAccepting()
    disconnect()
    hasSession()
    hasSession(typedef uint64 TCPSessionID)
    num_sessions()
    getSessionIDs()
    port()
    available(Optional const&)
    skip(typedef unsigned long long size_t, Optional const&)
    lookahead(void *, typedef unsigned long long size_t, Optional const&)
    lookahead(TriviallyCopyable&, Optional const&)
    read(void *, typedef unsigned long long size_t, Optional const&)
    read(TriviallyCopyable&, Optional const&)
    send(void const *, typedef unsigned long long size_t, Optional const&)
    send(const TriviallyCopyable&, Optional const&)
s3d::TCPClient
    connect(IPv4Address const&, typedef unsigned short uint16)
    cancelConnect()
    isConnected()
    disconnect()
    port()
    hasError()
    getError()
    available()
    skip(typedef unsigned long long size_t)
    lookahead(void *, typedef unsigned long long size_t)
    lookahead(TriviallyCopyable&)
    read(void *, typedef unsigned long long size_t)
    read(TriviallyCopyable&)
    send(void const *, typedef unsigned long long size_t)
    send(const TriviallyCopyable&)
s3d::OSCMessage
    beginBundle()
    endBundle()
    beginMessage(class StringView { ... })
    endMessage()
    addBool(bool)
    addChar(char)
    addInt32(typedef int int32)
    addInt64(typedef long long int64)
    addFloat(float)
    addDouble(double)
    addMIDIMessage(typedef unsigned int uint32)
    addTimeTag(typedef unsigned long long uint64)
    addRGBA(Color const&)
    addString(class StringView { ... })
    addSymbol(class StringView { ... })
    addBlob(Blob const&)
    addBlob(void const *, typedef unsigned long long size_t)
    addNil()
    addInf()
    beginArray()
    endArray()
    _detail()
s3d::OSCSender
    send(OSCMessage const&)
s3d::OSCArgument
    getBool()
    getChar()
    getInt32()
    getInt64()
    getFloat()
    getDouble()
    getMIDIMessage()
    getTimeTag()
    getColor()
    getString()
    getBlob()
s3d::ReceivedOSCMessage
s3d::Array<s3d::OSCArgument, std::allocator<s3d::OSCArgument>>
s3d::OSCReceiver
    hasMessages()
    num_messages()
    pop()
    clear()
s3d::HTTPResponse
    getStatusCode()
    getStatusCodeInt()
    getStatusLine()
    getHeader()
    isInvalid()
    isInformational()
    isSuccessful()
    isRedirection()
    isClientError()
    isServerError()
    isOK()
    isNotFound()
s3d::HTTPProgress
s3d::AsyncHTTPTask
    isEmpty()
    isReady()
    cancel()
    getStatus()
    getProgress()
    isDownloading()
    isFailed()
    isCanceled()
    isSucceeded()
    getResponse()
    isFile()
    isBlob()
    getFilePath()
    getBlob()
    getBlobReader()
    getAsJSON()
s3d::AsyncHTTPTaskDetail
s3d::SerialPortInfo
s3d::Array<s3d::SerialPortInfo, std::allocator<s3d::SerialPortInfo>>
s3d::Serial
    open(class StringView { ... }, typedef int int32, public enum class ByteSize: uint8 {...}, public enum class Parity: uint8 {...}, public enum StopBits: uint8 {...}, public enum class FlowControl: uint8 {...})
    close()
    isOpen()
    baudrate()
    port()
    available()
    clearInput()
    clearOutput()
    clear()
    read(void *, typedef unsigned long long size_t)
    readBytes()
    readBytes(Array&)
    read(TriviallyCopyable&)
    write(void const *, typedef unsigned long long size_t)
    writeByte(typedef unsigned char uint8)
    writeByte(enum class Byte: unsigned char {...})
    write(const TriviallyCopyable&)
    setRTS(bool)
    setDTR(bool)
    waitForChange()
    getCTS()
    getDSR()
    getRI()
    getCD()
s3d::WaveSampleS16
    operator=(WaveSampleS16 const&)
    set(typedef short int16)
    set(typedef short int16, typedef short int16)
    set(struct WaveSampleS16 { ... })
    swapChannel()
    asWaveSample()
    FromFloat32(float)
    FromFloat32(float, float)
    Zero()
    Min()
    Max()
s3d::WaveSample
    operator=(WaveSample const&)
    operator=(float)
    operator=(struct WaveSampleS16 { ... })
    operator*(float)
    operator*=(float)
    clear()
    set(float)
    set(float, float)
    set(struct WaveSample { ... })
    set(struct WaveSampleS16 { ... })
    swapChannel()
    lerp(struct WaveSample { ... }, Float)
    asWaveSampleS16()
    FromInt16(typedef short int16)
    FromInt16(typedef short int16, typedef short int16)
    Zero()
    Min()
    Max()
s3d::AudioLoopTiming
s3d::Wave
    Wave(Iterator, Iterator, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... }, allocator_type const&)
    Wave(typedef unsigned long long size_t, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    Wave(Duration const&, typedef NamedParameter<s3d::Arg::generator_tag, type-parameter-0-0> generator_, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    operator=(Array const&)
    operator=(Array<value_type> &&)
    operator=(Wave const&)
    operator=(Wave &&)
    asArray()
    sampleRate()
    setSampleRate(typedef unsigned int uint32)
    samples()
    lengthSample()
    lengthSec()
    fillZero()
    swapLR()
    removeSilenceFromBeginning()
    removeSilenceFromEnd()
    fadeIn(typedef unsigned long long size_t)
    fadeOut(typedef unsigned long long size_t)
    deinterleave()
    save(typedef StringView FilePathView, enum class AudioFormat: uint8 {...})
    encode(enum class AudioFormat: uint8 {...})
    saveWithDialog()
    saveWAVE(typedef StringView FilePathView, enum class WAVEFormat: uint8 {...})
    encodeWAVE(enum class WAVEFormat: uint8 {...})
    saveOggVorbis(typedef StringView FilePathView, typedef int int32, AudioLoopTiming const&)
    encodeOggVorbis(typedef int int32, AudioLoopTiming const&)
    assign(Iterator, Iterator)
    assign(typedef unsigned long long size_type, value_type const&)
    assign(class initializer_list<_Elem = s3d::WaveSample> { ... })
    assign(Array const&)
    assign(Array<value_type> &&)
    assign(Wave const&)
    assign(Wave &&)
    get_allocator()
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    at(typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    operator[](typedef unsigned long long size_t)
    push_front(value_type const&)
    push_back(value_type const&)
    pop_front()
    pop_front_N(typedef unsigned long long size_t)
    pop_back()
    pop_back_N(typedef unsigned long long size_t)
    operator<<(value_type const&)
    emplace(typedef _Vector_const_iterator const_iterator, Args &&...)
    emplace_back(Args &&...)
    front()
    front()
    back()
    back()
    swap(Wave&)
    data()
    data()
    begin()
    end()
    begin()
    end()
    cbegin()
    cend()
    rbegin()
    rend()
    rbegin()
    rend()
    crbegin()
    crend()
    empty()
    isEmpty()
    size_bytes()
    size()
    max_size()
    reserve(typedef unsigned long long size_t)
    capacity()
    shrink_to_fit()
    clear()
    release()
    insert(typedef _Vector_const_iterator const_iterator, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, typedef unsigned long long size_t, value_type const&)
    insert(typedef _Vector_const_iterator const_iterator, Iterator, Iterator)
    insert(typedef _Vector_const_iterator const_iterator, class initializer_list<_Elem = s3d::WaveSample> { ... })
    erase(typedef _Vector_const_iterator const_iterator)
    erase(typedef _Vector_const_iterator const_iterator, typedef _Vector_const_iterator const_iterator)
    resize(typedef unsigned long long size_t)
    resize(typedef unsigned long long size_t, value_type const&)
    all(Fty)
    any(Fty)
    count_if(Fty)
    fill(value_type const&)
    none(Fty)
    append(Array const&)
    append(Wave const&)
    remove_at(typedef unsigned long long size_t)
    remove_if(Fty)
    reverse()
    reversed()
    reversed()
    slice(typedef unsigned long long size_t)
    slice(typedef unsigned long long size_t, typedef unsigned long long size_t)
    Generate(typedef unsigned long long size_t, Fty, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    Generate(Duration const&, Fty, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
s3d::Array<s3d::WaveSample, std::allocator<s3d::WaveSample>>
s3d::NamedParameter<s3d::Arg::sampleRate_tag, unsigned int>
s3d::IAudioStream
    getAudio(float *, float *, typedef unsigned long long size_t)
    hasEnded()
    rewind()
s3d::Audio
    isStreaming()
    sampleRate()
    samples()
    lengthSec()
    samplesPlayed()
    isActive()
    isPlaying()
    isPaused()
    isLoop()
    getLoopTiming()
    setLoop(bool)
    setLoopPoint(typedef unsigned long long uint64)
    setLoopPoint(Duration const&)
    play(enum class MixBus: int32 {...})
    play(Duration const&, enum class MixBus: int32 {...})
    play(enum class MixBus: int32 {...}, Duration const&)
    pause()
    pause(Duration const&)
    stop()
    stop(Duration const&)
    playOneShot(double, double, double, enum class MixBus: int32 {...})
    playOneShot(enum class MixBus: int32 {...}, double, double, double)
    pauseAllShots()
    pauseAllShots(Duration const&)
    resumeAllShots()
    resumeAllShots(Duration const&)
    stopAllShots()
    stopAllShots(Duration const&)
    posSample()
    posSec()
    seekSamples(typedef unsigned long long size_t)
    seekTime(double)
    seekTime(Duration const&)
    loopCount()
    getVolume()
    setVolume(double)
    fadeVolume(double, Duration const&)
    getPan()
    setPan(double)
    fadePan(double, Duration const&)
    getSpeed()
    setSpeed(double)
    fadeSpeed(double, Duration const&)
    setSpeedBySemitone(typedef int int32)
    fadeSpeedBySemitone(typedef int int32, Duration const&)
    getSamples(typedef unsigned long long size_t)
    swap(Audio&)
s3d::AssetHandle<s3d::Audio>
s3d::NamedParameter<s3d::Arg::loopBegin_tag, unsigned long long>
s3d::NamedParameter<s3d::Arg::loopEnd_tag, unsigned long long>
s3d::NamedParameter<s3d::Arg::loopBegin_tag, std::chrono::duration<double, std::ratio<1, 1>>>
s3d::NamedParameter<s3d::Arg::loopEnd_tag, std::chrono::duration<double, std::ratio<1, 1>>>
s3d::Optional<s3d::AudioLoopTiming>
s3d::FileFilter
    BMP()
    GIF()
    JPEG()
    PNG()
    PPM()
    SVG()
    TGA()
    WebP()
    AllImageFiles()
    AVI()
    MP4()
    WebM()
    AllVideoFiles()
    AAC()
    AIFF()
    FLAC()
    MIDI()
    MP3()
    OggVorbis()
    Opus()
    WAVE()
    WMA()
    AllAudioFiles()
    CSV()
    INI()
    JSON()
    Text()
    TOML()
    XML()
    AllFiles()
s3d::Array<s3d::FileFilter, std::allocator<s3d::FileFilter>>
s3d::PowerStatus
s3d::KlattTTSParameters
s3d::DragStatus
s3d::DroppedFilePath
s3d::DroppedText
s3d::Optional<s3d::DragStatus>
s3d::Array<s3d::DroppedFilePath, std::allocator<s3d::DroppedFilePath>>
s3d::Array<s3d::DroppedText, std::allocator<s3d::DroppedText>>
s3d::ToastNotificationItem
s3d::ImageInfo
s3d::Grid<unsigned char, std::allocator<unsigned char>>
s3d::CascadeClassifier
    open(typedef StringView FilePathView)
    close()
    isOpen()
    detectObjects(Image const&, typedef int int32, Size const&, Optional const&)
    detectObjects(Image const&, Array const&, typedef int int32, Size const&, Optional const&)
s3d::GrabCut
    update(Image const&, Color const&, Color const&, typedef unsigned long long size_t)
    getResult(Grid&)
s3d::Grid<s3d::GrabCutClass, std::allocator<s3d::GrabCutClass>>
s3d::IImageDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
    decodeGray16(typedef StringView FilePathView)
    decodeGray16(IReader&, typedef StringView FilePathView)
s3d::Optional<s3d::ImageInfo>
s3d::Array<std::unique_ptr<s3d::IImageEncoder, std::default_delete<s3d::IImageEncoder>>, std::allocator<std::unique_ptr<s3d::IImageEncoder, std::default_delete<s3d::IImageEncoder>>>>
s3d::Array<std::unique_ptr<s3d::IImageDecoder, std::default_delete<s3d::IImageDecoder>>, std::allocator<std::unique_ptr<s3d::IImageDecoder, std::default_delete<s3d::IImageDecoder>>>>
s3d::PNGDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
    decodeGray16(typedef StringView FilePathView)
    decodeGray16(IReader&, typedef StringView FilePathView)
s3d::JPEGDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::Exif
    Read(typedef StringView FilePathView)
    Read(IReader const&)
s3d::Optional<s3d::Exif>
s3d::BMPDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::BMPEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    encode(Image const&, IWriter&)
    encode(Image const&)
s3d::WebPDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::GIFDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::GIFEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    encode(Image const&, IWriter&)
    encode(Image const&)
s3d::TIFFDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::TGADecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::TGAEncoder
    name()
    imageFormat()
    possibleExtensions()
    save(Image const&, typedef StringView FilePathView)
    encode(Image const&, IWriter&)
    encode(Image const&)
s3d::PPMDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::SVGDecoder
    name()
    imageFormat()
    isHeader(uint8 const[16]&)
    possibleExtensions()
    getImageInfo(typedef StringView FilePathView)
    getImageInfo(IReader&, typedef StringView FilePathView)
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::SVG
    SVG(Reader &&)
    load(typedef StringView FilePathView)
    load(Reader &&)
    load(std::unique_ptr<IReader> &&)
    parse(string const&)
    parse(class StringView { ... })
    isEmpty()
    width()
    height()
    size()
    widthF()
    heightF()
    sizeF()
    clear()
    render(Color const&)
    render(Optional const&, Optional const&, Color const&)
    render(Optional const&, Color const&)
    Load(typedef StringView FilePathView)
    Parse(string const&)
    Parse(class StringView { ... })
s3d::AnimatedGIFReader
    open(typedef StringView FilePathView)
    open(IReader &&)
    close()
    isOpen()
    read(Array&, Array&)
    read(Array&, Array&, int32&)
    MillisecToIndex(typedef long long int64, Array const&)
    MillisecToIndex(typedef long long int64, Array const&, typedef int int32)
    GetFrameIndex(double, Array const&)
    GetFrameIndex(double, Array const&, typedef int int32)
s3d::AnimatedGIFWriter
    open(typedef StringView FilePathView, typedef int int32, typedef int int32, typedef YesNo Dither, typedef YesNo HasAlpha)
    open(typedef StringView FilePathView, Size const&, typedef YesNo Dither, typedef YesNo HasAlpha)
    close()
    isOpen()
    writeFrame(Image const&, Duration const&)
    frameCount()
    imageSize()
s3d::Grid<bool, std::allocator<bool>>
s3d::QRContent
    isValid()
    clear()
s3d::QRScanner
    scanOne(Image const&)
    scan(Image const&)
s3d::Array<s3d::QRContent, std::allocator<s3d::QRContent>>
s3d::VideoReader
    open(typedef StringView FilePathView)
    close()
    isOpen()
    readFrame(Image&)
    getSize()
    getFPS()
    getLengthSec()
    setCurrentFrameIndex(typedef unsigned long long size_t)
    getCurrentFrameIndex()
    getPosSec()
    getFrameCount()
    getFrameDeltaSec()
    getProgress()
    reachedEnd()
    path()
s3d::VideoWriter
    open(typedef StringView FilePathView, Size const&, double)
    close()
    isOpen()
    writeFrame(Image const&)
    getSize()
    getFPS()
    path()
s3d::FFTResult
s3d::Array<float, std::allocator<float>>
s3d::Array<s3d::WaveSampleS16, std::allocator<s3d::WaveSampleS16>>
s3d::IAudioDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::IAudioEncoder
    name()
    possibleExtensions()
    save(Wave const&, typedef StringView FilePathView)
    encode(Wave const&, IWriter&)
    encode(Wave const&)
s3d::Array<std::unique_ptr<s3d::IAudioDecoder, std::default_delete<s3d::IAudioDecoder>>, std::allocator<std::unique_ptr<s3d::IAudioDecoder, std::default_delete<s3d::IAudioDecoder>>>>
s3d::Array<std::unique_ptr<s3d::IAudioEncoder, std::default_delete<s3d::IAudioEncoder>>, std::allocator<std::unique_ptr<s3d::IAudioEncoder, std::default_delete<s3d::IAudioEncoder>>>>
s3d::WAVEDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::WAVEEncoder
    name()
    possibleExtensions()
    save(Wave const&, typedef StringView FilePathView)
    save(Wave const&, typedef StringView FilePathView, enum class WAVEFormat: uint8 {...})
    encode(Wave const&, IWriter&)
    encode(Wave const&, IWriter&, enum class WAVEFormat: uint8 {...})
    encode(Wave const&)
    encode(Wave const&, enum class WAVEFormat: uint8 {...})
s3d::OggVorbisDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
    getLoopInfo(typedef StringView FilePathView)
    getLoopInfo(IReader&)
s3d::OggVorbisEncoder
    name()
    possibleExtensions()
    save(Wave const&, typedef StringView FilePathView)
    save(Wave const&, typedef StringView FilePathView, typedef int int32, AudioLoopTiming const&)
    encode(Wave const&, IWriter&)
    encode(Wave const&, IWriter&, typedef int int32, AudioLoopTiming const&)
    encode(Wave const&)
    encode(Wave const&, typedef int int32, AudioLoopTiming const&)
s3d::OpusDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::AACDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::AIFFDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::FLACDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::MIDINote
s3d::MIDIDecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(typedef StringView FilePathView, array&)
    decode(IReader&, typedef StringView FilePathView)
    decode(IReader&, array&, typedef StringView FilePathView)
s3d::Array<s3d::MIDINote, std::allocator<s3d::MIDINote>>
s3d::MP3Decoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::WMADecoder
    name()
    isHeader(uint8 const[48]&)
    possibleExtensions()
    audioFormat()
    decode(typedef StringView FilePathView)
    decode(IReader&, typedef StringView FilePathView)
s3d::SoundFont
    open(typedef StringView FilePathView)
    open(IReader &&)
    close()
    isOpen()
    render(enum class GMInstrument: uint8 {...}, typedef unsigned char uint8, Duration const&, Duration const&, double, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    renderMIDI(typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... }, Duration const&)
    renderMIDI(typedef StringView FilePathView, Duration const&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    renderMIDI(typedef StringView FilePathView, array&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... }, Duration const&)
    renderMIDI(typedef StringView FilePathView, array&, Duration const&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    renderMIDI(IReader&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... }, Duration const&)
    renderMIDI(IReader&, Duration const&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    renderMIDI(IReader&, array&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... }, Duration const&)
    renderMIDI(IReader&, array&, Duration const&, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
s3d::AudioGroup
    create(Array const&)
    release()
    isEmpty()
    size()
    playAll(enum class MixBus: int32 {...})
    playAll(Duration const&, enum class MixBus: int32 {...})
    playAll(enum class MixBus: int32 {...}, Duration const&)
    pauseAll()
    pauseAll(Duration const&)
    setVolumeAll(double)
    fadeVolumeAll(double, Duration const&)
    setVolumeOne(typedef unsigned long long size_t, double)
    fadeVolumeOne(typedef unsigned long long size_t, double, Duration const&)
    isActiveOne(typedef unsigned long long size_t)
    samplesOne(typedef unsigned long long size_t)
    samplesPlayedOne(typedef unsigned long long size_t)
    posSampleOne(typedef unsigned long long size_t)
s3d::Array<s3d::Audio, std::allocator<s3d::Audio>>
s3d::InputCombination
    name()
    down()
    pressed()
    up()
    pressedDuration()
    input1()
    input2()
    operator|(class Input { ... })
    operator|(InputCombination const&)
    operator|(InputGroup const&)
    asUint64()
s3d::InputGroup
    InputGroup(const Args &...)
    name()
    down()
    pressed()
    up()
    pressedDuration()
    num_pressed()
    inputs()
    inputCombinations()
    operator|(class Input { ... })
    operator|(InputCombination const&)
    operator|(InputGroup const&)
    append(const Type&, const Args &...)
    append()
    append(Input const)
    append(InputCombination const&)
    append(InputGroup const&)
s3d::Input
    deviceType()
    code()
    playerIndex()
    name()
    down()
    pressed()
    up()
    clearInput()
    cleared()
    pressedDuration()
    operator+(class Input { ... })
    operator|(class Input { ... })
    operator|(InputCombination const&)
    operator|(InputGroup const&)
    asUint32()
    Serialize(Input const&)
    Deserialize(class StringView { ... })
s3d::Array<s3d::Input, std::allocator<s3d::Input>>
s3d::Array<s3d::InputCombination, std::allocator<s3d::InputCombination>>
s3d::KeyEvent
s3d::Array<s3d::KeyEvent, std::allocator<s3d::KeyEvent>>
s3d::GamepadInfo
s3d::Array<s3d::GamepadInfo, std::allocator<s3d::GamepadInfo>>
s3d::JoyCon
    IsJoyCon(Gamepad_impl const&)
    IsJoyConL(Gamepad_impl const&)
    IsJoyConR(Gamepad_impl const&)
    isConnected()
    isJoyConL()
    isJoyConR()
    povD8()
    drawShadowAt(Vec2 const&, double, double, bool, double, double, double, ColorF const&)
    drawAt(Vec2 const&, double, double, bool, Optional const&, ColorF const&)
    drawGuidedAt(ButtonGuide const&, Vec2 const&, double, double, bool, Optional const&, ColorF const&, ColorF const&)
    DrawLShadowAt(Vec2 const&, double, double, bool, double, double, double, ColorF const&)
    DrawLAt(Vec2 const&, double, double, bool, ColorF const&, ColorF const&)
    DrawLGuidedAt(ButtonGuide const&, Vec2 const&, double, double, bool, ColorF const&, ColorF const&, ColorF const&)
    DrawRShadowAt(Vec2 const&, double, double, bool, double, double, double, ColorF const&)
    DrawRAt(Vec2 const&, double, double, bool, ColorF const&, ColorF const&)
    DrawRGuidedAt(ButtonGuide const&, Vec2 const&, double, double, bool, ColorF const&, ColorF const&, ColorF const&)
    GetControllerType(GamepadInfo const&)
s3d::Optional<s3d::ColorF>
s3d::DeadZone
    operator()(double)
    operator()(double, double)
    operator()(typedef Vector2D Vec2)
s3d::ProController
    IsProController(Gamepad_impl const&)
    isConnected()
    povD8()
    LStick()
    RStick()
    GetControllerType(GamepadInfo const&)
s3d::XInputVibration
s3d::WebcamInfo
s3d::Array<s3d::WebcamInfo, std::allocator<s3d::WebcamInfo>>
s3d::DynamicTexture
    fill(ColorF const&)
    fillRegion(ColorF const&, Rect const&)
    fill(Image const&)
    fillRegion(Image const&, Rect const&)
    fillIfNotBusy(Image const&)
    fillRegionIfNotBusy(Image const&, Rect const&)
    generateMips()
    swap(DynamicTexture&)
s3d::Webcam
    getPermission()
    open(typedef unsigned int uint32)
    close()
    isOpen()
    start()
    isActive()
    cameraIndex()
    getResolution()
    setResolution(typedef int int32, typedef int int32)
    setResolution(typedef Point Size)
    hasNewFrame()
    getFrame(Image&)
    getFrame(DynamicTexture&)
s3d::Optional<s3d::Webcam::Permission>
s3d::MicrophoneInfo
s3d::Array<s3d::MicrophoneInfo, std::allocator<s3d::MicrophoneInfo>>
s3d::Microphone
    getPermission()
    open(typedef YesNo StartImmediately)
    open(Duration const&, typedef YesNo StartImmediately)
    open(Duration const&, typedef YesNo Loop, typedef YesNo StartImmediately)
    open(Optional const&, Optional const&, Duration const&, typedef YesNo Loop, typedef YesNo StartImmediately)
    open(Optional const&, Optional const&, typedef unsigned long long size_t, typedef YesNo Loop, typedef YesNo StartImmediately)
    close()
    isOpen()
    start()
    stop()
    isRecording()
    microphoneIndex()
    getSampleRate()
    getBufferLength()
    isLoop()
    getBuffer()
    posSample()
    mean(Duration const&)
    rootMeanSquare(Duration const&)
    peak(Duration const&)
    fft(FFTResult&, enum class FFTSampleLength: uint8 {...})
s3d::Optional<s3d::Microphone::Permission>
s3d::AssetNameAndTags
s3d::AssetInfo
s3d::IAsset
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    getState()
    getTags()
    isAsyncLoading()
    isFinished()
    isUninitialized()
    isLoaded()
    setState(enum class AssetState: uint8 {...})
s3d::AudioAssetData
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    DefaultLoad(AudioAssetData&, String const&)
    DefaultRelease(AudioAssetData&)
s3d::AsyncTask<void>
s3d::AudioAsset
    Register(typedef StringView AssetNameView, typedef StringView FilePathView)
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, Loop const)
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... })
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... }, class NamedParameter<Tag = s3d::Arg::loopEnd_tag, Type = unsigned long long> { ... })
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, Optional const&)
    Register(typedef StringView AssetNameView, struct FileStreaming { ... }, typedef StringView FilePathView)
    Register(typedef StringView AssetNameView, struct FileStreaming { ... }, typedef StringView FilePathView, typedef YesNo Loop)
    Register(typedef StringView AssetNameView, struct FileStreaming { ... }, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... })
    Register(typedef StringView AssetNameView, enum class GMInstrument: uint8 {...}, typedef unsigned char uint8, Duration const&, double, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    Register(typedef StringView AssetNameView, enum class GMInstrument: uint8 {...}, typedef unsigned char uint8, Duration const&, Duration const&, double, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    Register(typedef StringView AssetNameView, std::unique_ptr<AudioAssetData> &&)
    Register(AssetNameAndTags const&, typedef StringView FilePathView)
    Register(AssetNameAndTags const&, typedef StringView FilePathView, Loop const)
    Register(AssetNameAndTags const&, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... })
    Register(AssetNameAndTags const&, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... }, class NamedParameter<Tag = s3d::Arg::loopEnd_tag, Type = unsigned long long> { ... })
    Register(AssetNameAndTags const&, typedef StringView FilePathView, Optional const&)
    Register(AssetNameAndTags const&, struct FileStreaming { ... }, typedef StringView FilePathView)
    Register(AssetNameAndTags const&, struct FileStreaming { ... }, typedef StringView FilePathView, typedef YesNo Loop)
    Register(AssetNameAndTags const&, struct FileStreaming { ... }, typedef StringView FilePathView, class NamedParameter<Tag = s3d::Arg::loopBegin_tag, Type = unsigned long long> { ... })
    Register(AssetNameAndTags const&, enum class GMInstrument: uint8 {...}, typedef unsigned char uint8, Duration const&, double, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    Register(AssetNameAndTags const&, enum class GMInstrument: uint8 {...}, typedef unsigned char uint8, Duration const&, Duration const&, double, class NamedParameter<Tag = s3d::Arg::sampleRate_tag, Type = unsigned int> { ... })
    IsRegistered(typedef StringView AssetNameView)
    Load(typedef StringView AssetNameView)
    LoadAsync(typedef StringView AssetNameView)
    Wait(typedef StringView AssetNameView)
    IsReady(typedef StringView AssetNameView)
    Release(typedef StringView AssetNameView)
    ReleaseAll()
    Unregister(typedef StringView AssetNameView)
    UnregisterAll()
    Enumerate()
s3d::TextureAssetData
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    DefaultLoad(TextureAssetData&, String const&)
    DefaultRelease(TextureAssetData&)
s3d::TextureAsset
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(typedef StringView AssetNameView, Color const&, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(typedef StringView AssetNameView, Emoji const&, enum class TextureDesc: uint8 {...})
    Register(typedef StringView AssetNameView, Icon const&, typedef int int32, enum class TextureDesc: uint8 {...})
    Register(typedef StringView AssetNameView, std::unique_ptr<TextureAssetData> &&)
    Register(AssetNameAndTags const&, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(AssetNameAndTags const&, typedef StringView FilePathView, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(AssetNameAndTags const&, Color const&, typedef StringView FilePathView, enum class TextureDesc: uint8 {...})
    Register(AssetNameAndTags const&, Emoji const&, enum class TextureDesc: uint8 {...})
    Register(AssetNameAndTags const&, Icon const&, typedef int int32, enum class TextureDesc: uint8 {...})
    IsRegistered(typedef StringView AssetNameView)
    Load(typedef StringView AssetNameView)
    LoadAsync(typedef StringView AssetNameView)
    Wait(typedef StringView AssetNameView)
    IsReady(typedef StringView AssetNameView)
    Release(typedef StringView AssetNameView)
    ReleaseAll()
    Unregister(typedef StringView AssetNameView)
    UnregisterAll()
    Enumerate()
s3d::GlyphInfo
    getOffset(double)
    getBase(double)
s3d::GlyphCluster
s3d::Glyph
s3d::OutlineGlyph
s3d::PolygonGlyph
s3d::MeshGlyph
s3d::BitmapGlyph
s3d::SDFGlyph
s3d::MSDFGlyph
s3d::DrawableText
    getXAdvances()
    getXAdvances(double)
    region(double, double)
    region(typedef Vector2D Vec2)
    region(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, double, double)
    region(double, typedef Vector2D Vec2)
    region(double, class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... })
    region(double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(double, double)
    regionBase(typedef Vector2D Vec2)
    regionBase(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(double, double, double)
    regionBase(double, typedef Vector2D Vec2)
    regionBase(double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... })
    regionBase(double, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... })
    regionAt(double, double)
    regionAt(typedef Vector2D Vec2)
    regionAt(double, double, double)
    regionAt(double, typedef Vector2D Vec2)
    regionBaseAt(double, double)
    regionBaseAt(typedef Vector2D Vec2)
    regionBaseAt(double, double, double)
    regionBaseAt(double, typedef Vector2D Vec2)
    fits(RectF const&)
    fits(double, RectF const&)
    draw(double, double, ColorF const&)
    draw(Vec2 const&, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(RectF const&, ColorF const&)
    draw(double, double, double, ColorF const&)
    draw(double, Vec2 const&, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(double, RectF const&, ColorF const&)
    draw(TextStyle const&, double, double, ColorF const&)
    draw(TextStyle const&, Vec2 const&, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, RectF const&, ColorF const&)
    draw(TextStyle const&, double, double, double, ColorF const&)
    draw(TextStyle const&, double, Vec2 const&, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(TextStyle const&, double, RectF const&, ColorF const&)
    drawBase(double, double, ColorF const&)
    drawBase(Vec2 const&, ColorF const&)
    drawBase(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(double, double, double, ColorF const&)
    drawBase(double, Vec2 const&, ColorF const&)
    drawBase(double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(double, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, double, double, ColorF const&)
    drawBase(TextStyle const&, Vec2 const&, ColorF const&)
    drawBase(TextStyle const&, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, double, double, double, ColorF const&)
    drawBase(TextStyle const&, double, Vec2 const&, ColorF const&)
    drawBase(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawBase(TextStyle const&, double, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(Vec2 const&, ColorF const&)
    drawAt(double, double, double, ColorF const&)
    drawAt(double, Vec2 const&, ColorF const&)
    drawAt(TextStyle const&, double, double, ColorF const&)
    drawAt(TextStyle const&, Vec2 const&, ColorF const&)
    drawAt(TextStyle const&, double, double, double, ColorF const&)
    drawAt(TextStyle const&, double, Vec2 const&, ColorF const&)
    drawBaseAt(double, double, ColorF const&)
    drawBaseAt(Vec2 const&, ColorF const&)
    drawBaseAt(double, double, double, ColorF const&)
    drawBaseAt(double, Vec2 const&, ColorF const&)
    drawBaseAt(TextStyle const&, double, double, ColorF const&)
    drawBaseAt(TextStyle const&, Vec2 const&, ColorF const&)
    drawBaseAt(TextStyle const&, double, double, double, ColorF const&)
    drawBaseAt(TextStyle const&, double, Vec2 const&, ColorF const&)
    paint(Image&, double, double, Color const&)
    paint(Image&, Vec2 const&, Color const&)
    stamp(Image&, double, double, Color const&)
    stamp(Image&, Vec2 const&, Color const&)
    overwrite(Image&, double, double)
    overwrite(Image&, Vec2 const&)
    paintAt(Image&, double, double, Color const&)
    paintAt(Image&, Vec2 const&, Color const&)
    stampAt(Image&, double, double, Color const&)
    stampAt(Image&, Vec2 const&, Color const&)
    overwriteAt(Image&, double, double)
    overwriteAt(Image&, Vec2 const&)
s3d::Font
    addFallback(Font const&)
    addFallback(Font &&)
    familyName()
    styleName()
    hasColor()
    style()
    method()
    fontSize()
    ascender()
    descender()
    height()
    height(double)
    spaceWidth()
    indentSize()
    setIndentSize(typedef int int32)
    setBufferThickness(typedef int int32)
    getBufferThickness()
    hasGlyph(typedef char32_t char32)
    hasGlyph(class StringView { ... })
    num_glyphs()
    getGlyphIndex(typedef char32_t char32)
    getGlyphIndex(class StringView { ... })
    getGlyphClusters(class StringView { ... }, typedef YesNo UseFallback, typedef YesNo Ligature)
    getGlyphInfo(typedef char32_t char32)
    getGlyphInfo(class StringView { ... })
    getGlyphInfoByGlyphIndex(typedef uint32 GlyphIndex)
    renderOutline(typedef char32_t char32, typedef YesNo CloseRing)
    renderOutline(class StringView { ... }, typedef YesNo CloseRing)
    renderOutlineByGlyphIndex(typedef uint32 GlyphIndex, typedef YesNo CloseRing)
    renderOutlines(class StringView { ... }, typedef YesNo CloseRing, typedef YesNo Ligature)
    renderPolygon(typedef char32_t char32)
    renderPolygon(class StringView { ... })
    renderPolygonByGlyphIndex(typedef uint32 GlyphIndex)
    renderPolygons(class StringView { ... }, typedef YesNo Ligature)
    createMesh(typedef char32_t char32, double)
    createMesh(class StringView { ... }, double)
    createMeshByGlyphIndex(typedef uint32 GlyphIndex, double)
    createMeshes(class StringView { ... }, double, typedef YesNo Ligature)
    renderBitmap(typedef char32_t char32)
    renderBitmap(class StringView { ... })
    renderBitmapByGlyphIndex(typedef uint32 GlyphIndex)
    renderSDF(typedef char32_t char32, typedef int int32)
    renderSDF(class StringView { ... }, typedef int int32)
    renderSDFByGlyphIndex(typedef uint32 GlyphIndex, typedef int int32)
    renderMSDF(typedef char32_t char32, typedef int int32)
    renderMSDF(class StringView { ... }, typedef int int32)
    renderMSDFByGlyphIndex(typedef uint32 GlyphIndex, typedef int int32)
    preload(class StringView { ... })
    getTexture()
    getGlyph(typedef char32_t char32)
    getGlyph(class StringView { ... })
    getGlyphByGlyphIndex(typedef uint32 GlyphIndex)
    getGlyphs(class StringView { ... }, typedef YesNo Ligature)
    operator()(String const&)
    operator()(String &&)
    operator()(const Args &...)
    swap(Font&)
    GetPixelShader(enum class FontMethod: uint8 {...}, public enum class Type: uint8 {...}, typedef YesNo HasColor)
    IsAvailable(enum class Typeface: uint8 {...})
s3d::AssetHandle<s3d::Font>
s3d::Array<s3d::GlyphCluster, std::allocator<s3d::GlyphCluster>>
s3d::Array<s3d::OutlineGlyph, std::allocator<s3d::OutlineGlyph>>
s3d::Array<s3d::PolygonGlyph, std::allocator<s3d::PolygonGlyph>>
s3d::Mesh
    num_vertices()
    num_triangles()
    boundingSphere()
    boundingBox()
    draw(ColorF const&)
    draw(double, double, double, ColorF const&)
    draw(Vec3 const&, ColorF const&)
    draw(double, double, double, Quaternion const&, ColorF const&)
    draw(Vec3 const&, Quaternion const&, ColorF const&)
    draw(Mat4x4 const&, ColorF const&)
    draw(PhongMaterial const&)
    draw(double, double, double, PhongMaterial const&)
    draw(Vec3 const&, PhongMaterial const&)
    draw(double, double, double, Quaternion const&, PhongMaterial const&)
    draw(Vec3 const&, Quaternion const&, PhongMaterial const&)
    draw(Mat4x4 const&, PhongMaterial const&)
    draw(Texture const&, ColorF const&)
    draw(double, double, double, Texture const&, ColorF const&)
    draw(Vec3 const&, Texture const&, ColorF const&)
    draw(double, double, double, Quaternion const&, Texture const&, ColorF const&)
    draw(Vec3 const&, Quaternion const&, Texture const&, ColorF const&)
    draw(Mat4x4 const&, Texture const&, ColorF const&)
    draw(Texture const&, PhongMaterial const&)
    draw(double, double, double, Texture const&, PhongMaterial const&)
    draw(Vec3 const&, Texture const&, PhongMaterial const&)
    draw(double, double, double, Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Vec3 const&, Quaternion const&, Texture const&, PhongMaterial const&)
    draw(Mat4x4 const&, Texture const&, PhongMaterial const&)
    draw(TextureRegion const&, ColorF const&)
    draw(double, double, double, TextureRegion const&, ColorF const&)
    draw(Vec3 const&, TextureRegion const&, ColorF const&)
    draw(double, double, double, Quaternion const&, TextureRegion const&, ColorF const&)
    draw(Vec3 const&, Quaternion const&, TextureRegion const&, ColorF const&)
    draw(Mat4x4 const&, TextureRegion const&, ColorF const&)
    draw(TextureRegion const&, PhongMaterial const&)
    draw(double, double, double, TextureRegion const&, PhongMaterial const&)
    draw(Vec3 const&, TextureRegion const&, PhongMaterial const&)
    draw(double, double, double, Quaternion const&, TextureRegion const&, PhongMaterial const&)
    draw(Vec3 const&, Quaternion const&, TextureRegion const&, PhongMaterial const&)
    draw(Mat4x4 const&, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, Texture const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, Texture const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, TextureRegion const&, ColorF const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, double, double, double, Quaternion const&, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Vec3 const&, Quaternion const&, TextureRegion const&, PhongMaterial const&)
    drawSubset(typedef unsigned int uint32, typedef unsigned int uint32, Mat4x4 const&, TextureRegion const&, PhongMaterial const&)
    swap(Mesh&)
s3d::AssetHandle<s3d::Mesh>
s3d::MeshData
    computeNormals(enum class NormalComputation: uint32 {...})
    flipTriangles()
    weld(class function<_Fty = bool (*)()> { ... })
    scale(double)
    scale(double, double, double)
    scale(typedef Vector3D Float3)
    translate(double, double, double)
    translate(typedef Vector3D Float3)
    rotate(struct Quaternion { ... })
    computeBoundingSphere()
    computeBoundingBox()
    Billboard(typedef Vector2D Float2, typedef Vector2D Float2)
    OneSidedPlane(double, typedef Vector2D Float2, typedef Vector2D Float2)
    OneSidedPlane(typedef Vector3D Float3, double, typedef Vector2D Float2, typedef Vector2D Float2)
    OneSidedPlane(typedef Vector2D Float2, typedef Vector2D Float2, typedef Vector2D Float2)
    OneSidedPlane(typedef Vector3D Float3, typedef Vector2D Float2, typedef Vector2D Float2, typedef Vector2D Float2)
    TwoSidedPlane(double)
    TwoSidedPlane(typedef Vector3D Float3, double)
    TwoSidedPlane(typedef Vector2D Float2)
    TwoSidedPlane(typedef Vector3D Float3, typedef Vector2D Float2)
    Box(double)
    Box(typedef Vector3D Float3)
    Box(typedef Vector3D Float3, typedef Vector3D Float3)
    Sphere(double, typedef unsigned int uint32)
    Sphere(typedef Vector3D Float3, double, typedef unsigned int uint32)
    SubdividedSphere(double, typedef unsigned int uint32)
    SubdividedSphere(typedef Vector3D Float3, double, typedef unsigned int uint32)
    RoundedBox(double, typedef Vector3D Float3, typedef unsigned int uint32)
    Disc(double, typedef unsigned int uint32)
    Disc(typedef Vector3D Float3, double, typedef unsigned int uint32)
    Cylinder(double, double, typedef unsigned int uint32)
    Cylinder(typedef Vector3D Float3, double, double, typedef unsigned int uint32)
    Cone(double, double, typedef unsigned int uint32)
    Cone(typedef Vector3D Float3, double, double, typedef unsigned int uint32)
    Pyramid(double, double)
    Pyramid(typedef Vector3D Float3, double, double)
    Grid(typedef Vector2D Float2, typedef int int32, typedef int int32, typedef Vector2D Float2, typedef Vector2D Float2)
    Grid(typedef Vector3D Float3, typedef Vector2D Float2, typedef int int32, typedef int int32, typedef Vector2D Float2, typedef Vector2D Float2)
    Torus(double, double, typedef unsigned int uint32, typedef unsigned int uint32)
    Torus(typedef Vector3D Float3, double, double, typedef unsigned int uint32, typedef unsigned int uint32)
    Hemisphere(double, typedef unsigned int uint32, typedef unsigned int uint32)
    Hemisphere(typedef Vector3D Float3, double, typedef unsigned int uint32, typedef unsigned int uint32)
    Tetrahedron(double)
    Tetrahedron(typedef Vector3D Float3, double)
    Octahedron(double)
    Octahedron(typedef Vector3D Float3, double)
    Dodecahedron(double)
    Dodecahedron(typedef Vector3D Float3, double)
    Icosahedron(double)
    Icosahedron(typedef Vector3D Float3, double)
s3d::Array<s3d::TriangleIndex32, std::allocator<s3d::TriangleIndex32>>
s3d::Array<s3d::MeshGlyph, std::allocator<s3d::MeshGlyph>>
s3d::Array<s3d::Glyph, std::allocator<s3d::Glyph>>
s3d::NamedParameter<s3d::Arg::left_tag, s3d::Vector2D<double>>
s3d::NamedParameter<s3d::Arg::right_tag, s3d::Vector2D<double>>
s3d::FontAssetData
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    DefaultLoad(FontAssetData&, String const&)
    DefaultRelease(FontAssetData&)
s3d::FontAsset
    Register(typedef StringView AssetNameView, typedef int int32, typedef StringView FilePathView, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, typedef int int32, typedef StringView FilePathView, typedef unsigned long long size_t, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, typedef int int32, enum class Typeface: uint8 {...}, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, enum class FontMethod: uint8 {...}, typedef int int32, typedef StringView FilePathView, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, enum class FontMethod: uint8 {...}, typedef int int32, typedef StringView FilePathView, typedef unsigned long long size_t, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, enum class FontMethod: uint8 {...}, typedef int int32, enum class Typeface: uint8 {...}, enum class FontStyle: uint8 {...})
    Register(typedef StringView AssetNameView, std::unique_ptr<FontAssetData> &&)
    Register(AssetNameAndTags const&, typedef int int32, typedef StringView FilePathView, enum class FontStyle: uint8 {...})
    Register(AssetNameAndTags const&, typedef int int32, typedef StringView FilePathView, typedef unsigned long long size_t, enum class FontStyle: uint8 {...})
    Register(AssetNameAndTags const&, typedef int int32, enum class Typeface: uint8 {...}, enum class FontStyle: uint8 {...})
    Register(AssetNameAndTags const&, enum class FontMethod: uint8 {...}, typedef int int32, typedef StringView FilePathView, enum class FontStyle: uint8 {...})
    Register(AssetNameAndTags const&, enum class FontMethod: uint8 {...}, typedef int int32, typedef StringView FilePathView, typedef unsigned long long size_t, enum class FontStyle: uint8 {...})
    Register(AssetNameAndTags const&, enum class FontMethod: uint8 {...}, typedef int int32, enum class Typeface: uint8 {...}, enum class FontStyle: uint8 {...})
    IsRegistered(typedef StringView AssetNameView)
    Load(typedef StringView AssetNameView, class StringView { ... })
    LoadAsync(typedef StringView AssetNameView, class StringView { ... })
    Wait(typedef StringView AssetNameView)
    IsReady(typedef StringView AssetNameView)
    Release(typedef StringView AssetNameView)
    ReleaseAll()
    Unregister(typedef StringView AssetNameView)
    UnregisterAll()
    Enumerate()
s3d::ShaderGroup
    operator|(HLSL const&)
    operator|(GLSL const&)
    operator|(MSL const&)
    operator|(ESSL const&)
    operator|(WGSL const&)
    getParameters()
s3d::HLSL
    operator|(GLSL const&)
    operator|(MSL const&)
    operator|(ESSL const&)
    operator|(WGSL const&)
s3d::GLSL
    operator|(HLSL const&)
    operator|(MSL const&)
    operator|(ESSL const&)
    operator|(WGSL const&)
s3d::MSL
    operator|(HLSL const&)
    operator|(GLSL const&)
    operator|(ESSL const&)
    operator|(WGSL const&)
s3d::ESSL
    operator|(HLSL const&)
    operator|(GLSL const&)
    operator|(MSL const&)
    operator|(WGSL const&)
s3d::WGSL
    operator|(HLSL const&)
    operator|(GLSL const&)
    operator|(MSL const&)
    operator|(ESSL const&)
s3d::Optional<s3d::HLSL>
s3d::Optional<s3d::GLSL>
s3d::Optional<s3d::MSL>
s3d::Optional<s3d::ESSL>
s3d::Optional<s3d::WGSL>
s3d::VertexShaderAssetData
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    DefaultLoad(VertexShaderAssetData&, String const&)
    DefaultRelease(VertexShaderAssetData&)
s3d::VertexShaderAsset
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, class StringView { ... }, Array const&)
    Register(typedef StringView AssetNameView, HLSL const&)
    Register(typedef StringView AssetNameView, GLSL const&)
    Register(typedef StringView AssetNameView, MSL const&)
    Register(typedef StringView AssetNameView, ESSL const&)
    Register(typedef StringView AssetNameView, WGSL const&)
    Register(typedef StringView AssetNameView, ShaderGroup const&)
    Register(typedef StringView AssetNameView, std::unique_ptr<VertexShaderAssetData> &&)
    Register(AssetNameAndTags const&, typedef StringView FilePathView, class StringView { ... }, Array const&)
    Register(AssetNameAndTags const&, HLSL const&)
    Register(AssetNameAndTags const&, GLSL const&)
    Register(AssetNameAndTags const&, MSL const&)
    Register(AssetNameAndTags const&, ESSL const&)
    Register(AssetNameAndTags const&, WGSL const&)
    Register(AssetNameAndTags const&, ShaderGroup const&)
    IsRegistered(typedef StringView AssetNameView)
    Load(typedef StringView AssetNameView)
    IsReady(typedef StringView AssetNameView)
    Release(typedef StringView AssetNameView)
    ReleaseAll()
    Unregister(typedef StringView AssetNameView)
    UnregisterAll()
    Enumerate()
s3d::PixelShaderAssetData
    load(String const&)
    loadAsync(String const&)
    wait()
    release()
    DefaultLoad(PixelShaderAssetData&, String const&)
    DefaultRelease(PixelShaderAssetData&)
s3d::PixelShaderAsset
    Register(typedef StringView AssetNameView, typedef StringView FilePathView, class StringView { ... }, Array const&)
    Register(typedef StringView AssetNameView, HLSL const&)
    Register(typedef StringView AssetNameView, GLSL const&)
    Register(typedef StringView AssetNameView, MSL const&)
    Register(typedef StringView AssetNameView, ESSL const&)
    Register(typedef StringView AssetNameView, WGSL const&)
    Register(typedef StringView AssetNameView, ShaderGroup const&)
    Register(typedef StringView AssetNameView, std::unique_ptr<PixelShaderAssetData> &&)
    Register(AssetNameAndTags const&, typedef StringView FilePathView, class StringView { ... }, Array const&)
    Register(AssetNameAndTags const&, HLSL const&)
    Register(AssetNameAndTags const&, GLSL const&)
    Register(AssetNameAndTags const&, MSL const&)
    Register(AssetNameAndTags const&, ESSL const&)
    Register(AssetNameAndTags const&, WGSL const&)
    Register(AssetNameAndTags const&, ShaderGroup const&)
    IsRegistered(typedef StringView AssetNameView)
    Load(typedef StringView AssetNameView)
    IsReady(typedef StringView AssetNameView)
    Release(typedef StringView AssetNameView)
    ReleaseAll()
    Unregister(typedef StringView AssetNameView)
    UnregisterAll()
    Enumerate()
s3d::NavMeshConfig
s3d::NavMesh
    isValid()
    build(Polygon const&, NavMeshConfig const&)
    build(Polygon const&, Array const&, NavMeshConfig const&)
    build(Array const&, Array const&, NavMeshConfig const&)
    build(Array const&, Array const&, Array const&, NavMeshConfig const&)
    build(Array const&, Array const&, NavMeshConfig const&)
    build(Array const&, Array const&, Array const&, NavMeshConfig const&)
    query(Vec2 const&, Vec2 const&, Array const&)
    query(Vec2 const&, Vec2 const&, Array&, Array const&)
    query(Vec3 const&, Vec3 const&, Array const&)
    query(Vec3 const&, Vec3 const&, Array&, Array const&)
s3d::Array<std::pair<int, double>, std::allocator<std::pair<int, double>>>
s3d::Array<s3d::Vector3D<double>, std::allocator<s3d::Vector3D<double>>>
s3d::DepthStencilState
    asValue()
    operator==(DepthStencilState const&)
    operator!=(DepthStencilState const&)
s3d::ScopedColorMul2D
    clear()
s3d::Optional<s3d::Vector4D<float>>
s3d::ScopedColorAdd2D
    clear()
s3d::ScopedRenderStates2D
    clear()
s3d::Array<s3d::ScopedRenderStates2D::SamplerStateInfo, std::allocator<s3d::ScopedRenderStates2D::SamplerStateInfo>>
s3d::Optional<s3d::BlendState>
s3d::Optional<s3d::RasterizerState>
s3d::Transformer2D
    clear()
    isPush()
    isLocal()
    isCamera()
    getGraphics2DTransform()
    getCursorTransform()
    setGraphics2DTransform(Mat3x2 const&)
    setCursorTransform(Mat3x2 const&)
s3d::Optional<s3d::Mat3x2>
s3d::ScopedViewport2D
    clear()
s3d::Optional<s3d::Optional<s3d::Rect>>
s3d::ScopedRenderTarget2D
    clear()
s3d::Optional<s3d::Optional<s3d::RenderTexture>>
s3d::BasicCamera2D
    setCenter(typedef Vector2D Vec2)
    getCenter()
    setScale(double)
    getScale()
    getRegion(typedef Point Size)
    getMat3x2(typedef Point Size)
    createTransformer()
s3d::Camera2DParameters
    Make(enum class CameraControl: uint8 {...})
    Default()
    MouseOnly()
    KeyboardOnly()
    NoControl()
s3d::Camera2D
    setParameters(Camera2DParameters const&)
    getParameters()
    setTargetCenter(typedef Vector2D Vec2)
    getTargetCenter()
    setTargetScale(double)
    getTargetScale()
    jumpTo(typedef Vector2D Vec2, double)
    update(double, typedef Vec2 SizeF)
    draw(ColorF const&)
    getGrabbedPos()
    updateWheel(SizeF const&)
    updateControls(double const)
    updateMouse(double const)
s3d::Optional<std::pair<s3d::Vector2D<double>, s3d::Vector2D<double>>>
s3d::ScopedRenderStates3D
    clear()
s3d::Array<s3d::ScopedRenderStates3D::SamplerStateInfo, std::allocator<s3d::ScopedRenderStates3D::SamplerStateInfo>>
s3d::Optional<s3d::DepthStencilState>
s3d::ScopedViewport3D
    clear()
s3d::ScopedRenderTarget3D
    clear()
s3d::Transformer3D
    clear()
    isPush()
s3d::Optional<s3d::Mat4x4>
s3d::DebugCamera3D
    update(double)
    updateTouchUI(Vec2 const&, double, double)
    drawTouchUI(Vec2 const&, double)
    setView(Vec3 const&, Vec3 const&, Vec3 const&)
s3d::SimpleFollowCamera3D
    update(double, double)
    setTarget(Vec3 const&, double)
    jumpToTarget(Vec3 const&, double)
    setFollowOffset(double, double)
    getFollowOffset()
s3d::ScopedCustomShader2D
    clear()
s3d::Optional<s3d::Optional<s3d::VertexShader>>
s3d::Optional<s3d::Optional<s3d::PixelShader>>
s3d::ScopedCustomShader3D
    clear()
s3d::VideoTexture
    isEmpty()
    release()
    advance(double)
    reset()
    isLoop()
    posSec()
    lengthSec()
    setPosSec(double)
    getTexture()
    getVideoReader()
    width()
    height()
    size()
    getDesc()
    getFormat()
    hasMipMap()
    isSDF()
    region(typedef int int32, typedef int int32)
    region(struct Point { ... })
    region(double, double)
    region(typedef Vector2D Vec2)
    regionAt(double, double)
    regionAt(typedef Vector2D Vec2)
    draw(ColorF const&)
    draw(ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(double, double, ColorF const&)
    draw(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(double, double, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(double, double, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(Vec2 const&, ColorF const&)
    draw(Vec2 const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    draw(Vec2 const&, class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(Vec2 const&, class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::topLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomLeft_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomRight_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::topCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::bottomCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::leftCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::rightCenter_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    draw(class NamedParameter<Tag = s3d::Arg::center_tag, Type = s3d::Vector2D<double>> { ... }, ColorF const&)
    drawAt(double, double, ColorF const&)
    drawAt(double, double, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawAt(Vec2 const&, ColorF const&)
    drawAt(Vec2 const&, ColorF const&, ColorF const&, ColorF const&, ColorF const&)
    drawClipped(double, double, RectF const&, ColorF const&)
    drawClipped(Vec2 const&, RectF const&, ColorF const&)
    drawAtClipped(double, double, RectF const&, ColorF const&)
    drawAtClipped(Vec2 const&, RectF const&, ColorF const&)
    operator()(double, double, double, double)
    operator()(Vec2 const&, double, double)
    operator()(double, double, double)
    operator()(double, double, Vec2 const&)
    operator()(Vec2 const&, Vec2 const&)
    operator()(RectF const&)
    uv(double, double, double, double)
    uv(RectF const&)
    mirrored()
    mirrored(bool)
    flipped()
    flipped(bool)
    scaled(double)
    scaled(double, double)
    scaled(typedef Vector2D Vec2)
    resized(double)
    resized(double, double)
    resized(typedef Vector2D Vec2)
    repeated(double, double)
    repeated(typedef Vector2D Vec2)
    mapped(double, double)
    mapped(typedef Vector2D Vec2)
    fitted(double, double, typedef YesNo AllowScaleUp)
    fitted(Vec2 const&, typedef YesNo AllowScaleUp)
    rotated(double)
    rotatedAt(double, double, double)
    rotatedAt(Vec2 const&, double)
    rounded(double)
    rounded(double, double, double, double, double)
    swap(VideoTexture&)
s3d::MSRenderTexture
    resolve()
    clear(ColorF const&)
    readAsImage(Image&)
    swap(MSRenderTexture&)
s3d::NinePatch
    draw(RectF const&, ColorF const&)
    draw(RectF const&, double, enum class TextureFilter: uint8 {...}, ColorF const&)
    release()
    getTexture()
    getRepeatableTexture()
    getPatchSize()
s3d::DynamicMesh
    fill(MeshData const&)
    fill(Array const&)
    fillSubRange(typedef unsigned long long size_t, Array const&)
    fillSubRange(typedef unsigned long long size_t, Vertex3D const *, typedef unsigned long long size_t)
    fill(Array const&)
    swap(DynamicMesh&)
s3d::PhongMaterialInternal
s3d::ModelMeshPart
s3d::ModelObject
    draw(Array const&)
s3d::Array<s3d::ModelMeshPart, std::allocator<s3d::ModelMeshPart>>
s3d::Array<s3d::Material, std::allocator<s3d::Material>>
s3d::Model
    objects()
    materials()
    diffuseTextureNames()
    boundingSphere()
    boundingBox()
    draw()
    draw(double, double, double)
    draw(Vec3 const&)
    draw(double, double, double, Quaternion const&)
    draw(Vec3 const&, Quaternion const&)
    draw(Mat4x4 const&)
    swap(Model&)
    RegisterDiffuseTextures(Model const&, enum class TextureDesc: uint8 {...})
s3d::AssetHandle<s3d::Model>
s3d::Array<s3d::ModelObject, std::allocator<s3d::ModelObject>>
s3d::TextEditState
    clear()
    resetStopwatches()
s3d::TextAreaEditState
    clear()
    resetStopwatches()
    rebuildGlyphs()
s3d::Array<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short>>>
s3d::Array<s3d::TextAreaEditState::ClipInfo, std::allocator<s3d::TextAreaEditState::ClipInfo>>
s3d::ListBoxState
s3d::Optional<std::pair<int, double>>
s3d::MenuBarItemIndex
s3d::SimpleMenuBar
    update()
    draw()
    mouseOver()
    setItemEnabled(typedef unsigned long long size_t, typedef unsigned long long size_t, bool)
    setItemEnabled(MenuBarItemIndex const&, bool)
    getItemEnabled(typedef unsigned long long size_t, typedef unsigned long long size_t)
    getItemEnabled(MenuBarItemIndex const&)
    setItemChecked(typedef unsigned long long size_t, typedef unsigned long long size_t, bool)
    setItemChecked(MenuBarItemIndex const&, bool)
    getItemChecked(typedef unsigned long long size_t, typedef unsigned long long size_t)
    getItemChecked(MenuBarItemIndex const&)
    setColorPalette(ColorPalette const&)
    reset()
s3d::Array<std::pair<s3d::String, s3d::Array<s3d::String, std::allocator<s3d::String>>>, std::allocator<std::pair<s3d::String, s3d::Array<s3d::String, std::allocator<s3d::String>>>>>
s3d::Optional<s3d::MenuBarItemIndex>
s3d::Array<s3d::SimpleMenuBar::Menu::Item, std::allocator<s3d::SimpleMenuBar::Menu::Item>>
s3d::Array<s3d::SimpleMenuBar::Menu, std::allocator<s3d::SimpleMenuBar::Menu>>
s3d::SimpleTable
    items()
    getItem(typedef unsigned long long size_t, typedef unsigned long long size_t)
    getItem(Point const&)
    style()
    rows()
    columns()
    isEmpty()
    push_back_row()
    push_back_row(Array const&)
    push_back_row(Array const&)
    push_back_row(Array const&, Array const&)
    pop_back_row()
    clear()
    setText(typedef unsigned long long size_t, typedef unsigned long long size_t, String const&)
    setText(Point const&, String const&)
    setText(typedef unsigned long long size_t, Array const&)
    setTextAlignment(typedef unsigned long long size_t, typedef unsigned long long size_t, typedef int int32)
    setTextAlignment(Point const&, typedef int int32)
    setRowTextAlignment(typedef unsigned long long size_t, typedef int int32)
    setBackgroundColor(typedef unsigned long long size_t, typedef unsigned long long size_t, Optional const&)
    setBackgroundColor(Point const&, Optional const&)
    setRowBackgroundColor(typedef unsigned long long size_t, Optional const&)
    setTextColor(typedef unsigned long long size_t, typedef unsigned long long size_t, Optional const&)
    setTextColor(Point const&, Optional const&)
    setRowTextColor(typedef unsigned long long size_t, Optional const&)
    size()
    width()
    height()
    region(Vec2 const&)
    rowRegion(Vec2 const&, typedef unsigned long long size_t)
    columnRegion(Vec2 const&, typedef unsigned long long size_t)
    cellRegion(Vec2 const&, typedef unsigned long long size_t, typedef unsigned long long size_t)
    cellRegion(Vec2 const&, Point const&)
    rowIndex(Vec2 const&, Vec2 const&)
    columnIndex(Vec2 const&, Vec2 const&)
    cellIndex(Vec2 const&, Vec2 const&)
    draw(Vec2 const&)
    drawItem(typedef unsigned long long size_t, typedef unsigned long long size_t, Vec2 const&, double, Font const&, double)
s3d::Optional<s3d::Color>
s3d::Optional<s3d::Font>
s3d::Grid<s3d::SimpleTable::Item, std::allocator<s3d::SimpleTable::Item>>
s3d::IEffect
    update(double)
s3d::Effect
    add(std::unique_ptr<IEffect> &&)
    add(Args &&...)
    add(Fty)
    isEmpty()
    hasEffects()
    num_effects()
    pause()
    isPaused()
    resume()
    setSpeed(double)
    getSpeed()
    setMaxLifeTime(double)
    setMaxLifeTime(Duration const&)
    getMaxLifeTime()
    update()
    clear()
    swap(Effect&)
s3d::AssetHandle<s3d::Effect>
s3d::Trail
    setLifeTime(double)
    getLifeTime()
    setScaleFunction(typedef double (*)(double) * ScaleFunction)
    getScaleFunction()
    setAlphaFunction(typedef double (*)(double) * AlphaFunction)
    getAlphaFunction()
    num_points()
    add(Float2 const&, ColorF const&, double)
    update(double)
    clear()
    front()
    back()
    point(typedef unsigned long long size_t)
    draw()
    draw(Texture const&)
s3d::Array<s3d::Trail::Point, std::allocator<s3d::Trail::Point>>
s3d::TrailMotion
    setLifeTime(double)
    getLifeTime()
    setScaleFunction(typedef double (*)(double) * ScaleFunction)
    getScaleFunction()
    setAlphaFunction(typedef double (*)(double) * AlphaFunction)
    getAlphaFunction()
    num_points()
    setFrequency(double)
    getFrequency()
    setCenter(double, double)
    setCenter(Vec2 const&)
    getCenter()
    setPositionFunction(function const&)
    getPositionFunction(double)
    setColor(ColorF const&)
    setColorFunction(function const&)
    getColorFunction(double)
    setSize(double)
    setSizeFunction(function const&)
    getSizeFunction(double)
    update(double)
    draw()
    draw(Texture const&)
    clear()
s3d::Array<s3d::InputGroup, std::allocator<s3d::InputGroup>>
s3d::Emission2D
s3d::Particle2D
    update(float, Float2 const&)
    advance(float, Float2 const&)
    isDead()
s3d::IEmitter2D
    emit(Vec2 const&, double)
    drawDebug(Vec2 const&)
s3d::CircleEmitter2D
    emit(Vec2 const&, double)
    drawDebug(Vec2 const&)
s3d::ArcEmitter2D
    emit(Vec2 const&, double)
    drawDebug(Vec2 const&)
s3d::RectEmitter2D
    emit(Vec2 const&, double)
    drawDebug(Vec2 const&)
s3d::PolygonEmitter2D
    emit(Vec2 const&, double)
    drawDebug(Vec2 const&)
s3d::ParticleSystem2DParameters
s3d::ParticleSystem2D
    ParticleSystem2D(Vec2 const&, Vec2 const&, const Emitter&, ParticleSystem2DParameters const&, Texture const&)
    setPosition(Vec2 const&)
    setForce(Vec2 const&)
    setEmitter(std::unique_ptr<IEmitter2D> &&)
    setEmitter(const Emitter&)
    setParameters(ParticleSystem2DParameters const&)
    setTexture(Texture const&)
    num_particles()
    prewarm()
    update(double)
    draw()
    drawDebug()
s3d::P2Material
s3d::P2Filter
s3d::P2ContactPair
s3d::P2Contact
s3d::P2Collision
    normal()
    begin()
    end()
    num_contacts()
    contact(typedef unsigned long long size_t)
    hasContacts()
s3d::P2World
    update(double, typedef int int32, typedef int int32)
    setSleepEnabled(bool)
    getSleepEnabled()
    setGravity(double)
    setGravity(Vec2 const&)
    getGravity()
    shiftOrigin(Vec2 const&)
    createPlaceholder(enum class P2BodyType: uint8 {...}, Vec2 const&)
    createLine(enum class P2BodyType: uint8 {...}, Vec2 const&, Line const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    createLineSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, Line const&, P2Filter const&)
    createLineString(enum class P2BodyType: uint8 {...}, Vec2 const&, LineString const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    createLineStringSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, LineString const&, P2Filter const&)
    createClosedLineString(enum class P2BodyType: uint8 {...}, Vec2 const&, LineString const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    createClosedLineStringSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, LineString const&, P2Filter const&)
    createCircle(enum class P2BodyType: uint8 {...}, Vec2 const&, double, P2Material const&, P2Filter const&)
    createCircle(enum class P2BodyType: uint8 {...}, Vec2 const&, Circle const&, P2Material const&, P2Filter const&)
    createCircleSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, double, P2Filter const&)
    createCircleSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, Circle const&, P2Filter const&)
    createRect(enum class P2BodyType: uint8 {...}, Vec2 const&, double, P2Material const&, P2Filter const&)
    createRect(enum class P2BodyType: uint8 {...}, Vec2 const&, SizeF const&, P2Material const&, P2Filter const&)
    createRect(enum class P2BodyType: uint8 {...}, Vec2 const&, RectF const&, P2Material const&, P2Filter const&)
    createRectSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, double, P2Filter const&)
    createRectSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, SizeF const&, P2Filter const&)
    createRectSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, RectF const&, P2Filter const&)
    createTriangle(enum class P2BodyType: uint8 {...}, Vec2 const&, Triangle const&, P2Material const&, P2Filter const&)
    createTriangleSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, Triangle const&, P2Filter const&)
    createQuad(enum class P2BodyType: uint8 {...}, Vec2 const&, Quad const&, P2Material const&, P2Filter const&)
    createQuadSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, Quad const&, P2Filter const&)
    createPolygon(enum class P2BodyType: uint8 {...}, Vec2 const&, Polygon const&, P2Material const&, P2Filter const&)
    createPolygonSensor(enum class P2BodyType: uint8 {...}, Vec2 const&, Polygon const&, P2Filter const&)
    createPolygons(enum class P2BodyType: uint8 {...}, Vec2 const&, MultiPolygon const&, P2Material const&, P2Filter const&)
    createPivotJoint(P2Body const&, P2Body const&, Vec2 const&, typedef YesNo EnableCollision)
    createDistanceJoint(P2Body const&, Vec2 const&, P2Body const&, Vec2 const&, double, typedef YesNo EnableCollision)
    createSliderJoint(P2Body const&, P2Body const&, Vec2 const&, Vec2 const&, typedef YesNo EnableCollision)
    createWheelJoint(P2Body const&, P2Body const&, Vec2 const&, Vec2 const&, typedef YesNo EnableCollision)
    createMouseJoint(P2Body const&, Vec2 const&)
    getCollisions()
s3d::P2Body
    id()
    isEmpty()
    release()
    addLine(Line const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    addLineSensor(Line const&, P2Filter const&)
    addLineString(LineString const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    addLineStringSensor(LineString const&, P2Filter const&)
    addClosedLineString(LineString const&, typedef YesNo OneSided, P2Material const&, P2Filter const&)
    addClosedLineStringSensor(LineString const&, P2Filter const&)
    addCircle(Circle const&, P2Material const&, P2Filter const&)
    addCircleSensor(Circle const&, P2Filter const&)
    addRect(RectF const&, P2Material const&, P2Filter const&)
    addRectSensor(RectF const&, P2Filter const&)
    addTriangle(Triangle const&, P2Material const&, P2Filter const&)
    addTriangleSensor(Triangle const&, P2Filter const&)
    addQuad(Quad const&, P2Material const&, P2Filter const&)
    addQuadSensor(Quad const&, P2Filter const&)
    addPolygon(Polygon const&, P2Material const&, P2Filter const&)
    addPolygonSensor(Polygon const&, P2Filter const&)
    addPolygons(MultiPolygon const&, P2Material const&, P2Filter const&)
    setSleepEnabled(bool)
    getSleepEnabled()
    setAwake(bool)
    isAwake()
    setPos(double, double)
    setPos(typedef Vector2D Vec2)
    moveBy(double, double)
    moveBy(typedef Vector2D Vec2)
    setAngle(double)
    rotateBy(double)
    setTransform(double, double, double)
    setTransform(typedef Vector2D Vec2, double)
    applyForce(typedef Vector2D Vec2)
    applyForce(typedef Vector2D Vec2, typedef Vector2D Vec2)
    applyForceAt(typedef Vector2D Vec2, typedef Vector2D Vec2)
    applyLinearImpulse(typedef Vector2D Vec2)
    applyLinearImpulse(typedef Vector2D Vec2, typedef Vector2D Vec2)
    applyLinearImpulseAt(typedef Vector2D Vec2, typedef Vector2D Vec2)
    applyTorque(double)
    applyAngularImpulse(double)
    getPos()
    getAngle()
    getTransform()
    setVelocity(typedef Vector2D Vec2)
    getVelocity()
    setAngularVelocity(double)
    getAngularVelocity()
    setDamping(double)
    getDamping()
    setAngularDamping(double)
    getAngularDamping()
    setGravityScale(double)
    getGravityScale()
    getMass()
    getInertia()
    setBodyType(enum class P2BodyType: uint8 {...})
    getBodyType()
    setBullet(bool)
    isBullet()
    setFixedRotation(bool)
    isFixedRotation()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    num_shapes()
    shape(typedef unsigned long long size_t)
    shape(typedef unsigned long long size_t)
    getPtr(typedef unsigned long long size_t)
    as(typedef unsigned long long size_t)
    getWeakPtr()
s3d::P2Shape
    getShapeType()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    setDensity(double)
    getDensity()
    setRestitution(double)
    getRestitution()
    setFriction(double)
    getFriction()
    setRestitutionThreshold(double)
    getRestitutionThreshold()
    setFilter(P2Filter const&)
    getFilter()
s3d::P2Line
    getShapeType()
    isOneSided()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getLine()
s3d::P2LineString
    getShapeType()
    isClosed()
    isOneSided()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getLineString()
s3d::P2Circle
    getShapeType()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getCircle()
s3d::P2Rect
    getShapeType()
    draw(ColorF const&)
    draw(ColorF const[4]&)
    draw(class NamedParameter<Tag = s3d::Arg::top_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::bottom_tag, Type = s3d::ColorF> { ... })
    draw(class NamedParameter<Tag = s3d::Arg::left_tag, Type = s3d::ColorF> { ... }, class NamedParameter<Tag = s3d::Arg::right_tag, Type = s3d::ColorF> { ... })
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getQuad()
s3d::P2Triangle
    getShapeType()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getTriangle()
s3d::P2Quad
    getShapeType()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getQuad()
s3d::P2Polygon
    getShapeType()
    draw(ColorF const&)
    drawFrame(double, ColorF const&)
    drawWireframe(double, ColorF const&)
    getPolygon()
s3d::P2PivotJoint
    release()
    getAnchorPos()
    getJointAngle()
    getJointAngleSpeed()
    setLimitsEnabled(bool)
    getLimitsEnabled()
    setLimits(double, double)
    getLimits()
    setMotorEnabled(bool)
    getMotorEnabled()
    setMotorSpeed(double)
    getMotorSpeed()
    setMaxMotorTorque(double)
    getMaxMotorTorque()
    getReactionForce(double)
    getReactionTorque(double)
    getMotorTorque(double)
    draw(ColorF const&)
s3d::P2DistanceJoint
    release()
    getAnchorPosA()
    getAnchorPosB()
    getReactionForce(double)
    getReactionTorque(double)
    setRestLength(double)
    getRestLength()
    setMinLength(double)
    getMinLength()
    setMaxLength(double)
    getMaxLength()
    getCurrentLength()
    setStiffness(double)
    getStiffness()
    setDamping(double)
    getDamping()
    setLinearStiffness(double, double)
    draw(ColorF const&)
s3d::P2SliderJoint
    release()
    getAnchorPosA()
    getAnchorPosB()
    getReactionForce(double)
    getReactionTorque(double)
    getJointTranslation()
    getJointSpeed()
    setLimitEnabled(bool)
    getLimitEnabled()
    setLimits(double, double)
    getLimits()
    setMotorEnabled(bool)
    getMotorEnabled()
    setMotorSpeed(double)
    getMotorSpeed()
    setMaxMotorForce(double)
    getMaxMotorForce()
    getCurrentMotorForce(double)
    draw(ColorF const&)
s3d::P2WheelJoint
    release()
    getAnchorPosA()
    getAnchorPosB()
    getReactionForce(double)
    getReactionTorque(double)
    getJointTranslation()
    getJointLinearSpeed()
    getJointAngle()
    getJointAngularSpeed()
    setLimitsEnabled(bool)
    getLimitsEnabled()
    setLimits(double, double)
    getLimits()
    setMotorEnabled(bool)
    getMotorEnabled()
    setMotorSpeed(double)
    getMotorSpeed()
    setMaxMotorTorque(double)
    getMaxMotorTorque()
    getMotorTorque(double)
    setStiffness(double)
    getStiffness()
    setDamping(double)
    getDamping()
    setLinearStiffness(double, double)
    draw(ColorF const&)
s3d::P2MouseJoint
    release()
    getAnchorPos()
    getReactionForce(double)
    getReactionTorque(double)
    setTargetPos(Vec2 const&)
    getTargetPos()
    setMaxForce(double)
    getMaxForce()
    setStiffness(double)
    getStiffness()
    setDamping(double)
    getDamping()
    setLinearStiffness(double, double)
    draw(ColorF const&)
s3d::Array<b2Fixture *, std::allocator<b2Fixture *>>
s3d::Serializer<Writer>
    Serializer<Writer>(Args &&...)
    saveBinary(void const *, typedef unsigned long long size_t)
    operator->()
    operator->()
s3d::Deserializer<Reader>
    Deserializer<Reader>(Args &&...)
    loadBinary(void * const, typedef unsigned long long size_t)
    operator->()
    operator->()
s3d::Serializer<s3d::BinaryWriter>
s3d::Deserializer<s3d::BinaryReader>
s3d::Serializer<s3d::MemoryWriter>
s3d::Deserializer<s3d::MemoryReader>
s3d::Deserializer<s3d::MemoryViewReader>
s3d::ScriptModule
s3d::ScriptFunction<Type>
s3d::ScriptFunction<Type>
    operator()(Args..., Args...)
    tryCall(Args..., Args..., String&)
    getDeclaration(Args..., IncludeParamNames const)
    setArgs(Args..., typedef unsigned int uint32, Type &&, Args2 &&...)
    setArgs(Args..., typedef unsigned int uint32, Type &&)
    setArgs(Args..., typedef unsigned int uint32)
    setArg(Args..., uint32 const, Type &&)
    execute(Args...)
    tryExecute(Args...)
    getReturn(Args...)
s3d::Script
    getFunctionDeclarations(typedef YesNo IncludeParamNames)
    getFunction(class StringView { ... })
    compiled()
    reload(enum class ScriptCompileOption: uint32 {...})
    setSystemUpdateCallback(function const&)
    getIncludedFiles()
    getMessages()
    path()
    swap(Script&)
    GetEngine()
    _getModule()
    _getFunction(class StringView { ... })
s3d::AssetHandle<s3d::Script>
s3d::NamedParameter<s3d::Arg::code_tag, s3d::StringView>
s3d::ManagedScript
    isEmpty()
    compiled()
    setTriggerToReload(function const&)
    getIncludedFiles()
    run()
s3d::SceneManager<State, Data>
    operator=(const SceneManager<State, Data>&)
    operator=(SceneManager<State, Data> &&)
    add(const State&)
    init(const State&, Duration const&)
    init(const State&, typedef int int32)
    updateScene()
    drawScene()
    update()
    get()
    get()
    changeScene(const State&, Duration const&, typedef YesNo CrossFade)
    changeScene(const State&, typedef int int32, typedef YesNo CrossFade)
    setFadeColor(ColorF const&)
    getFadeColor()
    notifyError()
    updateSingle()
    updateCross()
    hasError()
s3d::IScene<State, Data>
    updateFadeIn(double)
    update()
    updateFadeOut(double)
    draw()
    drawFadeIn(double)
    drawFadeOut(double)
    getState()
    getData()
    changeScene(State_t const&, Duration const&, typedef YesNo CrossFade)
    changeScene(State_t const&, typedef int int32, typedef YesNo CrossFade)
    notifyError()
s3d::Sky
    draw(double)
    toConstants(double)
s3d::ConstantBuffer<s3d::Sky::PSConstantsSky>
s3d::Array<s3d::PlayingCard::Card, std::allocator<s3d::PlayingCard::Card>>
s3d::Array<std::pair<s3d::OpenAI::Chat::Role, s3d::String>, std::allocator<std::pair<s3d::OpenAI::Chat::Role, s3d::String>>>
s3d::Array<s3d::OpenAI::Vision::ImageData, std::allocator<s3d::OpenAI::Vision::ImageData>>
s3d::AsyncTask<s3d::Image>
s3d::AsyncTask<s3d::Array<s3d::Image, std::allocator<s3d::Image>>>
s3d::AsyncTask<bool>
s3d::IAddon
    init()
    update()
    draw()
    postPresent()
s3d::MiniScene<State>
    operator[](const State&)
    changeState(const State&)
s3d::SaturatedLinework<TargetShape, URNG>
    setTargetShape(const TargetShape&)
    getTargetShape()
    setOuterRect(Rect const&)
    getOuterRect()
    setLineCount(typedef unsigned long long size_t)
    getLineCount()
    setMinThickness(double)
    getMinThickness()
    setMaxThickness(double)
    getMaxThickness()
    setThickness(double, double)
    setOffsetRange(double)
    getOffsetRange()
    setSeed(typedef unsigned long long uint64)
    getSeed()
    generate()
    draw(ColorF const&)
    IsValid(const _TargetShape&, Rect const&)
